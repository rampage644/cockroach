// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
//line sql.y:18
package parser

import __yyfmt__ "fmt"

//line sql.y:18
import (
	"fmt"

	"go/constant"
	"go/token"

	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
)

// MaxUint is the maximum value of an uint.
const MaxUint = ^uint(0)

// MaxInt is the maximum value of an int.
const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*Scanner).Unimplemented(feature)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*Scanner).UnimplementedWithIssue(issue)
	return 1
}

//line sql.y:46

// sqlSymUnion represents a union of types, providing accessor methods
// to retrieve the underlying type stored in the union's empty interface.
// The purpose of the sqlSymUnion struct is to reduce the memory footprint of
// the sqlSymType because only one value (of a variety of types) is ever needed
// to be stored in the union field at a time.
//
// By using an empty interface, we lose the type checking previously provided
// by yacc and the Go compiler when dealing with union values. Instead, runtime
// type assertions must be relied upon in the methods below, and as such, the
// parser should be thoroughly tested whenever new syntax is added.
//
// It is important to note that when assigning values to sqlSymUnion.val, all
// nil values should be typed so that they are stored as nil instances in the
// empty interface, instead of setting the empty interface to nil. This means
// that:
//     $$ = []String(nil)
// should be used, instead of:
//     $$ = nil
// to assign a nil string slice to the union.
type sqlSymUnion struct {
	val interface{}
}

// The following accessor methods come in three forms, depending on the
// type of the value being accessed and whether a nil value is admissible
// for the corresponding grammar rule.
// - Values and pointers are directly type asserted from the empty
//   interface, regardless of whether a nil value is admissible or
//   not. A panic occurs if the type assertion is incorrect; no panic occurs
//   if a nil is not expected but present. (TODO(knz): split this category of
//   accessor in two; with one checking for unexpected nils.)
//   Examples: bool(), tableWithIdx().
//
// - Interfaces where a nil is admissible are handled differently
//   because a nil instance of an interface inserted into the empty interface
//   becomes a nil instance of the empty interface and therefore will fail a
//   direct type assertion. Instead, a guarded type assertion must be used,
//   which returns nil if the type assertion fails.
//   Examples: expr(), stmt().
//
// - Interfaces where a nil is not admissible are implemented as a direct
//   type assertion, which causes a panic to occur if an unexpected nil
//   is encountered.
//   Examples: namePart(), tblDef().
//
func (u *sqlSymUnion) numVal() *NumVal {
	return u.val.(*NumVal)
}
func (u *sqlSymUnion) strVal() *StrVal {
	if stmt, ok := u.val.(*StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) tableWithIdx() *TableNameWithIndex {
	return u.val.(*TableNameWithIndex)
}
func (u *sqlSymUnion) tableWithIdxList() TableNameWithIndexList {
	return u.val.(TableNameWithIndexList)
}
func (u *sqlSymUnion) namePart() NamePart {
	return u.val.(NamePart)
}
func (u *sqlSymUnion) nameList() NameList {
	return u.val.(NameList)
}
func (u *sqlSymUnion) unresolvedName() UnresolvedName {
	return u.val.(UnresolvedName)
}
func (u *sqlSymUnion) unresolvedNames() UnresolvedNames {
	return u.val.(UnresolvedNames)
}
func (u *sqlSymUnion) functionReference() FunctionReference {
	return u.val.(FunctionReference)
}
func (u *sqlSymUnion) resolvableFunctionReference() ResolvableFunctionReference {
	return ResolvableFunctionReference{u.val.(FunctionReference)}
}
func (u *sqlSymUnion) normalizableTableName() NormalizableTableName {
	return NormalizableTableName{u.val.(TableNameReference)}
}
func (u *sqlSymUnion) newNormalizableTableName() *NormalizableTableName {
	return &NormalizableTableName{u.val.(TableNameReference)}
}
func (u *sqlSymUnion) tablePatterns() TablePatterns {
	return u.val.(TablePatterns)
}
func (u *sqlSymUnion) tableNameReferences() TableNameReferences {
	return u.val.(TableNameReferences)
}
func (u *sqlSymUnion) indexHints() *IndexHints {
	return u.val.(*IndexHints)
}
func (u *sqlSymUnion) arraySubscript() *ArraySubscript {
	return u.val.(*ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() ArraySubscripts {
	if as, ok := u.val.(ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() Statement {
	if stmt, ok := u.val.(Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) stmts() []Statement {
	return u.val.([]Statement)
}
func (u *sqlSymUnion) slct() *Select {
	return u.val.(*Select)
}
func (u *sqlSymUnion) selectStmt() SelectStatement {
	return u.val.(SelectStatement)
}
func (u *sqlSymUnion) colDef() *ColumnTableDef {
	return u.val.(*ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() ConstraintTableDef {
	return u.val.(ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() TableDef {
	return u.val.(TableDef)
}
func (u *sqlSymUnion) tblDefs() TableDefs {
	return u.val.(TableDefs)
}
func (u *sqlSymUnion) colQual() NamedColumnQualification {
	return u.val.(NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() ColumnQualification {
	return u.val.(ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []NamedColumnQualification {
	return u.val.([]NamedColumnQualification)
}
func (u *sqlSymUnion) colType() ColumnType {
	if colType, ok := u.val.(ColumnType); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []ColumnID {
	if refCols, ok := u.val.([]ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) castTargetType() CastTargetType {
	return u.val.(CastTargetType)
}
func (u *sqlSymUnion) colTypes() []ColumnType {
	return u.val.([]ColumnType)
}
func (u *sqlSymUnion) expr() Expr {
	if expr, ok := u.val.(Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() Exprs {
	return u.val.(Exprs)
}
func (u *sqlSymUnion) selExpr() SelectExpr {
	return u.val.(SelectExpr)
}
func (u *sqlSymUnion) selExprs() SelectExprs {
	return u.val.(SelectExprs)
}
func (u *sqlSymUnion) retClause() ReturningClause {
	return u.val.(ReturningClause)
}
func (u *sqlSymUnion) aliasClause() AliasClause {
	return u.val.(AliasClause)
}
func (u *sqlSymUnion) asOfClause() AsOfClause {
	return u.val.(AsOfClause)
}
func (u *sqlSymUnion) tblExpr() TableExpr {
	return u.val.(TableExpr)
}
func (u *sqlSymUnion) tblExprs() TableExprs {
	return u.val.(TableExprs)
}
func (u *sqlSymUnion) from() *From {
	return u.val.(*From)
}
func (u *sqlSymUnion) joinCond() JoinCond {
	return u.val.(JoinCond)
}
func (u *sqlSymUnion) when() *When {
	return u.val.(*When)
}
func (u *sqlSymUnion) whens() []*When {
	return u.val.([]*When)
}
func (u *sqlSymUnion) updateExpr() *UpdateExpr {
	return u.val.(*UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() UpdateExprs {
	return u.val.(UpdateExprs)
}
func (u *sqlSymUnion) limit() *Limit {
	return u.val.(*Limit)
}
func (u *sqlSymUnion) targetList() TargetList {
	return u.val.(TargetList)
}
func (u *sqlSymUnion) targetListPtr() *TargetList {
	return u.val.(*TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *OnConflict {
	return u.val.(*OnConflict)
}
func (u *sqlSymUnion) orderBy() OrderBy {
	return u.val.(OrderBy)
}
func (u *sqlSymUnion) order() *Order {
	return u.val.(*Order)
}
func (u *sqlSymUnion) orders() []*Order {
	return u.val.([]*Order)
}
func (u *sqlSymUnion) groupBy() GroupBy {
	return u.val.(GroupBy)
}
func (u *sqlSymUnion) dir() Direction {
	return u.val.(Direction)
}
func (u *sqlSymUnion) alterTableCmd() AlterTableCmd {
	return u.val.(AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() AlterTableCmds {
	return u.val.(AlterTableCmds)
}
func (u *sqlSymUnion) isoLevel() IsolationLevel {
	return u.val.(IsolationLevel)
}
func (u *sqlSymUnion) userPriority() UserPriority {
	return u.val.(UserPriority)
}
func (u *sqlSymUnion) readWriteMode() ReadWriteMode {
	return u.val.(ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() IndexElem {
	return u.val.(IndexElem)
}
func (u *sqlSymUnion) idxElems() IndexElemList {
	return u.val.(IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() DropBehavior {
	return u.val.(DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() ValidationBehavior {
	return u.val.(ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *InterleaveDef {
	return u.val.(*InterleaveDef)
}
func (u *sqlSymUnion) windowDef() *WindowDef {
	return u.val.(*WindowDef)
}
func (u *sqlSymUnion) window() Window {
	return u.val.(Window)
}
func (u *sqlSymUnion) op() operator {
	return u.val.(operator)
}
func (u *sqlSymUnion) cmpOp() ComparisonOperator {
	return u.val.(ComparisonOperator)
}
func (u *sqlSymUnion) durationField() durationField {
	return u.val.(durationField)
}
func (u *sqlSymUnion) kvOption() KVOption {
	return u.val.(KVOption)
}
func (u *sqlSymUnion) kvOptions() []KVOption {
	if colType, ok := u.val.([]KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() TransactionModes {
	return u.val.(TransactionModes)
}

func (u *sqlSymUnion) parameter() Parameter {
	return u.val.(Parameter)
}
func (u *sqlSymUnion) parameters() ParameterList {
	return u.val.(ParameterList)
}

//line sql.y:470
type sqlSymType struct {
	yys   int
	id    int
	pos   int
	empty struct{}
	str   string
	union sqlSymUnion
}

const IDENT = 57346
const SCONST = 57347
const BCONST = 57348
const ICONST = 57349
const FCONST = 57350
const PLACEHOLDER = 57351
const TYPECAST = 57352
const TYPEANNOTATE = 57353
const DOT_DOT = 57354
const LESS_EQUALS = 57355
const GREATER_EQUALS = 57356
const NOT_EQUALS = 57357
const NOT_REGMATCH = 57358
const REGIMATCH = 57359
const NOT_REGIMATCH = 57360
const ERROR = 57361
const ACTION = 57362
const ADD = 57363
const ALL = 57364
const ALTER = 57365
const ANALYSE = 57366
const ANALYZE = 57367
const AND = 57368
const ANY = 57369
const ANNOTATE_TYPE = 57370
const ARRAY = 57371
const AS = 57372
const ASC = 57373
const ASYMMETRIC = 57374
const AT = 57375
const BACKUP = 57376
const BEGIN = 57377
const BETWEEN = 57378
const BIGINT = 57379
const BIGSERIAL = 57380
const BIT = 57381
const BLOB = 57382
const BOOL = 57383
const BOOLEAN = 57384
const BOTH = 57385
const BY = 57386
const BYTEA = 57387
const BYTES = 57388
<<<<<<< HEAD
const CANCEL = 57389
const CASCADE = 57390
const CASE = 57391
const CAST = 57392
const CHAR = 57393
const CHARACTER = 57394
const CHARACTERISTICS = 57395
const CHECK = 57396
const CLUSTER = 57397
const COALESCE = 57398
const COLLATE = 57399
const COLLATION = 57400
const COLUMN = 57401
const COLUMNS = 57402
const COMMIT = 57403
const COMMITTED = 57404
const CONCAT = 57405
const CONFLICT = 57406
const CONSTRAINT = 57407
const CONSTRAINTS = 57408
const COPY = 57409
const COVERING = 57410
const CREATE = 57411
const CROSS = 57412
const CSV = 57413
const CUBE = 57414
const CURRENT = 57415
const CURRENT_CATALOG = 57416
const CURRENT_DATE = 57417
const CURRENT_SCHEMA = 57418
const CURRENT_ROLE = 57419
const CURRENT_TIME = 57420
const CURRENT_TIMESTAMP = 57421
const CURRENT_USER = 57422
const CYCLE = 57423
const DATA = 57424
const DATABASE = 57425
const DATABASES = 57426
const DATE = 57427
const DAY = 57428
const DEC = 57429
const DECIMAL = 57430
const DEFAULT = 57431
const DEALLOCATE = 57432
const DEFERRABLE = 57433
const DELETE = 57434
const DESC = 57435
const DISCARD = 57436
const DISTINCT = 57437
const DO = 57438
const DOUBLE = 57439
const DROP = 57440
const ELSE = 57441
const ENCODING = 57442
const END = 57443
const ESCAPE = 57444
const EXCEPT = 57445
const EXISTS = 57446
const EXECUTE = 57447
const EXPERIMENTAL_FINGERPRINTS = 57448
const EXPLAIN = 57449
const EXTRACT = 57450
const EXTRACT_DURATION = 57451
const FALSE = 57452
const FAMILY = 57453
const FETCH = 57454
const FILTER = 57455
const FIRST = 57456
const FLOAT = 57457
const FLOAT4 = 57458
const FLOAT8 = 57459
const FLOORDIV = 57460
const FOLLOWING = 57461
const FOR = 57462
const FORCE_INDEX = 57463
const FOREIGN = 57464
const FROM = 57465
const FULL = 57466
const FUNCTION = 57467
const GRANT = 57468
const GRANTS = 57469
const GREATEST = 57470
const GROUP = 57471
const GROUPING = 57472
const HAVING = 57473
const HELP = 57474
const HIGH = 57475
const HOUR = 57476
const IMPORT = 57477
const INCREMENTAL = 57478
const IF = 57479
const IFNULL = 57480
const ILIKE = 57481
const IN = 57482
const INTERLEAVE = 57483
const INDEX = 57484
const INDEXES = 57485
const INITIALLY = 57486
const INNER = 57487
const INSERT = 57488
const INT = 57489
const INT2VECTOR = 57490
const INT2 = 57491
const INT4 = 57492
const INT8 = 57493
const INT64 = 57494
const INTEGER = 57495
const INTERSECT = 57496
const INTERVAL = 57497
const INTO = 57498
const IS = 57499
const ISOLATION = 57500
const JOB = 57501
const JOBS = 57502
const JOIN = 57503
const KEY = 57504
const KEYS = 57505
const KV = 57506
const LATERAL = 57507
const LC_CTYPE = 57508
const LC_COLLATE = 57509
const LEADING = 57510
const LEAST = 57511
const LEFT = 57512
const LEVEL = 57513
const LIKE = 57514
const LIMIT = 57515
const LOCAL = 57516
const LOCALTIME = 57517
const LOCALTIMESTAMP = 57518
const LOW = 57519
const LSHIFT = 57520
const MATCH = 57521
const MINUTE = 57522
const MONTH = 57523
const NAN = 57524
const NAME = 57525
const NAMES = 57526
const NATURAL = 57527
const NEXT = 57528
const NO = 57529
const NO_INDEX_JOIN = 57530
const NORMAL = 57531
const NOT = 57532
const NOTHING = 57533
const NULL = 57534
const NULLIF = 57535
const NULLS = 57536
const NUMERIC = 57537
const OF = 57538
const OFF = 57539
const OFFSET = 57540
const OID = 57541
const ON = 57542
const ONLY = 57543
const OPTIONS = 57544
const OR = 57545
const ORDER = 57546
const ORDINALITY = 57547
const OUT = 57548
const OUTER = 57549
const OVER = 57550
const OVERLAPS = 57551
const OVERLAY = 57552
const PARENT = 57553
const PARTIAL = 57554
const PARTITION = 57555
const PASSWORD = 57556
const PAUSE = 57557
const PLACING = 57558
const PLANS = 57559
const POSITION = 57560
const PRECEDING = 57561
const PRECISION = 57562
const PREPARE = 57563
const PRIMARY = 57564
const PRIORITY = 57565
const PROCEDURE = 57566
const QUERIES = 57567
const QUERY = 57568
const RANGE = 57569
const READ = 57570
const REAL = 57571
const RECURSIVE = 57572
const REF = 57573
const REFERENCES = 57574
const REGCLASS = 57575
const REGPROC = 57576
const REGPROCEDURE = 57577
const REGNAMESPACE = 57578
const REGTYPE = 57579
const RENAME = 57580
const REPEATABLE = 57581
const RELEASE = 57582
const RESET = 57583
const RESTORE = 57584
const RESTRICT = 57585
const RESUME = 57586
const RETURNING = 57587
const REVOKE = 57588
const RIGHT = 57589
const ROLLBACK = 57590
const ROLLUP = 57591
const ROW = 57592
const ROWS = 57593
const RSHIFT = 57594
const SAVEPOINT = 57595
const SCATTER = 57596
const SEARCH = 57597
const SECOND = 57598
const SELECT = 57599
const SEQUENCES = 57600
const SERIAL = 57601
const SERIALIZABLE = 57602
const SESSION = 57603
const SESSIONS = 57604
const SESSION_USER = 57605
const SET = 57606
const SETTING = 57607
const SETTINGS = 57608
const SHOW = 57609
const SIMILAR = 57610
const SIMPLE = 57611
const SMALLINT = 57612
const SMALLSERIAL = 57613
const SNAPSHOT = 57614
const SOME = 57615
const SPLIT = 57616
const SQL = 57617
const START = 57618
const STATUS = 57619
const STDIN = 57620
const STRICT = 57621
const STRING = 57622
const STORE = 57623
const STORING = 57624
const SUBSTRING = 57625
const SYMMETRIC = 57626
const SYSTEM = 57627
const TABLE = 57628
const TABLES = 57629
const TEMP = 57630
const TEMPLATE = 57631
const TEMPORARY = 57632
const TESTING_RANGES = 57633
const TESTING_RELOCATE = 57634
const TEXT = 57635
const THEN = 57636
const TIME = 57637
const TIMESTAMP = 57638
const TIMESTAMPTZ = 57639
const TO = 57640
const TRAILING = 57641
const TRACE = 57642
const TRANSACTION = 57643
const TREAT = 57644
const TRIM = 57645
const TRUE = 57646
const TRUNCATE = 57647
const TYPE = 57648
const UNBOUNDED = 57649
const UNCOMMITTED = 57650
const UNION = 57651
const UNIQUE = 57652
const UNKNOWN = 57653
const UPDATE = 57654
const UPSERT = 57655
const USE = 57656
const USER = 57657
const USERS = 57658
const USING = 57659
const UUID = 57660
const VALID = 57661
const VALIDATE = 57662
const VALUE = 57663
const VALUES = 57664
const VARCHAR = 57665
const VARIADIC = 57666
const VIEW = 57667
const VARYING = 57668
const WHEN = 57669
const WHERE = 57670
const WINDOW = 57671
const WITH = 57672
const WITHIN = 57673
const WITHOUT = 57674
const WRITE = 57675
const YEAR = 57676
const ZONE = 57677
const NOT_LA = 57678
const WITH_LA = 57679
const AS_LA = 57680
const POSTFIXOP = 57681
const UMINUS = 57682
const HELPTOKEN = 57683
=======
const CALL = 57389
const CANCEL = 57390
const CASCADE = 57391
const CASE = 57392
const CAST = 57393
const CHAR = 57394
const CHARACTER = 57395
const CHARACTERISTICS = 57396
const CHECK = 57397
const CLUSTER = 57398
const COALESCE = 57399
const COLLATE = 57400
const COLLATION = 57401
const COLUMN = 57402
const COLUMNS = 57403
const COMMIT = 57404
const COMMITTED = 57405
const CONCAT = 57406
const CONFLICT = 57407
const CONSTRAINT = 57408
const CONSTRAINTS = 57409
const COPY = 57410
const COVERING = 57411
const CREATE = 57412
const CROSS = 57413
const CSV = 57414
const CUBE = 57415
const CURRENT = 57416
const CURRENT_CATALOG = 57417
const CURRENT_DATE = 57418
const CURRENT_SCHEMA = 57419
const CURRENT_ROLE = 57420
const CURRENT_TIME = 57421
const CURRENT_TIMESTAMP = 57422
const CURRENT_USER = 57423
const CYCLE = 57424
const DATA = 57425
const DATABASE = 57426
const DATABASES = 57427
const DATE = 57428
const DAY = 57429
const DEC = 57430
const DECIMAL = 57431
const DEFAULT = 57432
const DEALLOCATE = 57433
const DEFERRABLE = 57434
const DELETE = 57435
const DESC = 57436
const DISCARD = 57437
const DISTINCT = 57438
const DO = 57439
const DOUBLE = 57440
const DROP = 57441
const ELSE = 57442
const ENCODING = 57443
const END = 57444
const ESCAPE = 57445
const EXCEPT = 57446
const EXISTS = 57447
const EXECUTE = 57448
const EXPERIMENTAL_FINGERPRINTS = 57449
const EXPLAIN = 57450
const EXTRACT = 57451
const EXTRACT_DURATION = 57452
const FALSE = 57453
const FAMILY = 57454
const FETCH = 57455
const FILTER = 57456
const FIRST = 57457
const FLOAT = 57458
const FLOAT4 = 57459
const FLOAT8 = 57460
const FLOORDIV = 57461
const FOLLOWING = 57462
const FOR = 57463
const FORCE_INDEX = 57464
const FOREIGN = 57465
const FROM = 57466
const FULL = 57467
const FUNCTION = 57468
const GRANT = 57469
const GRANTS = 57470
const GREATEST = 57471
const GROUP = 57472
const GROUPING = 57473
const HAVING = 57474
const HELP = 57475
const HIGH = 57476
const HOUR = 57477
const IMPORT = 57478
const INCREMENTAL = 57479
const IF = 57480
const IFNULL = 57481
const ILIKE = 57482
const IN = 57483
const INTERLEAVE = 57484
const INDEX = 57485
const INDEXES = 57486
const INITIALLY = 57487
const INNER = 57488
const INSERT = 57489
const INT = 57490
const INT2VECTOR = 57491
const INT2 = 57492
const INT4 = 57493
const INT8 = 57494
const INT64 = 57495
const INTEGER = 57496
const INTERSECT = 57497
const INTERVAL = 57498
const INTO = 57499
const IS = 57500
const ISOLATION = 57501
const JOB = 57502
const JOBS = 57503
const JOIN = 57504
const KEY = 57505
const KEYS = 57506
const KV = 57507
const LATERAL = 57508
const LC_CTYPE = 57509
const LC_COLLATE = 57510
const LEADING = 57511
const LEAST = 57512
const LEFT = 57513
const LEVEL = 57514
const LIKE = 57515
const LIMIT = 57516
const LOCAL = 57517
const LOCALTIME = 57518
const LOCALTIMESTAMP = 57519
const LOW = 57520
const LSHIFT = 57521
const MATCH = 57522
const MINUTE = 57523
const MONTH = 57524
const NAN = 57525
const NAME = 57526
const NAMES = 57527
const NATURAL = 57528
const NEXT = 57529
const NO = 57530
const NO_INDEX_JOIN = 57531
const NORMAL = 57532
const NOT = 57533
const NOTHING = 57534
const NULL = 57535
const NULLIF = 57536
const NULLS = 57537
const NUMERIC = 57538
const OF = 57539
const OFF = 57540
const OFFSET = 57541
const OID = 57542
const ON = 57543
const ONLY = 57544
const OPTIONS = 57545
const OR = 57546
const ORDER = 57547
const ORDINALITY = 57548
const OUT = 57549
const OUTER = 57550
const OVER = 57551
const OVERLAPS = 57552
const OVERLAY = 57553
const PARENT = 57554
const PARTIAL = 57555
const PARTITION = 57556
const PASSWORD = 57557
const PAUSE = 57558
const PLACING = 57559
const PLANS = 57560
const POSITION = 57561
const PRECEDING = 57562
const PRECISION = 57563
const PREPARE = 57564
const PRIMARY = 57565
const PRIORITY = 57566
const PROCEDURE = 57567
const QUERIES = 57568
const QUERY = 57569
const RANGE = 57570
const READ = 57571
const REAL = 57572
const RECURSIVE = 57573
const REF = 57574
const REFERENCES = 57575
const REGCLASS = 57576
const REGPROC = 57577
const REGPROCEDURE = 57578
const REGNAMESPACE = 57579
const REGTYPE = 57580
const RENAME = 57581
const REPEATABLE = 57582
const RELEASE = 57583
const RESET = 57584
const RESTORE = 57585
const RESTRICT = 57586
const RESUME = 57587
const RETURNING = 57588
const REVOKE = 57589
const RIGHT = 57590
const ROLLBACK = 57591
const ROLLUP = 57592
const ROW = 57593
const ROWS = 57594
const RSHIFT = 57595
const SAVEPOINT = 57596
const SCATTER = 57597
const SEARCH = 57598
const SECOND = 57599
const SELECT = 57600
const SEQUENCES = 57601
const SERIAL = 57602
const SERIALIZABLE = 57603
const SESSION = 57604
const SESSIONS = 57605
const SESSION_USER = 57606
const SET = 57607
const SETTING = 57608
const SETTINGS = 57609
const SHOW = 57610
const SIMILAR = 57611
const SIMPLE = 57612
const SMALLINT = 57613
const SMALLSERIAL = 57614
const SNAPSHOT = 57615
const SOME = 57616
const SPLIT = 57617
const SQL = 57618
const START = 57619
const STATUS = 57620
const STDIN = 57621
const STRICT = 57622
const STRING = 57623
const STORE = 57624
const STORING = 57625
const SUBSTRING = 57626
const SYMMETRIC = 57627
const SYSTEM = 57628
const TABLE = 57629
const TABLES = 57630
const TEMP = 57631
const TEMPLATE = 57632
const TEMPORARY = 57633
const TESTING_RANGES = 57634
const TESTING_RELOCATE = 57635
const TEXT = 57636
const THEN = 57637
const TIME = 57638
const TIMESTAMP = 57639
const TIMESTAMPTZ = 57640
const TO = 57641
const TRAILING = 57642
const TRACE = 57643
const TRANSACTION = 57644
const TREAT = 57645
const TRIM = 57646
const TRUE = 57647
const TRUNCATE = 57648
const TYPE = 57649
const UNBOUNDED = 57650
const UNCOMMITTED = 57651
const UNION = 57652
const UNIQUE = 57653
const UNKNOWN = 57654
const UPDATE = 57655
const UPSERT = 57656
const USE = 57657
const USER = 57658
const USERS = 57659
const USING = 57660
const UUID = 57661
const VALID = 57662
const VALIDATE = 57663
const VALUE = 57664
const VALUES = 57665
const VARCHAR = 57666
const VARIADIC = 57667
const VIEW = 57668
const VARYING = 57669
const WHEN = 57670
const WHERE = 57671
const WINDOW = 57672
const WITH = 57673
const WITHIN = 57674
const WITHOUT = 57675
const WRITE = 57676
const YEAR = 57677
const ZONE = 57678
const NOT_LA = 57679
const WITH_LA = 57680
const AS_LA = 57681
const POSTFIXOP = 57682
const UMINUS = 57683
>>>>>>> Fix build errors

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ACTION",
	"ADD",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BY",
	"BYTEA",
	"BYTES",
	"CALL",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMIT",
	"COMMITTED",
	"CONCAT",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"COPY",
	"COVERING",
	"CREATE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ESCAPE",
	"EXCEPT",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPLAIN",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"HAVING",
	"HELP",
	"HIGH",
	"HOUR",
	"IMPORT",
	"INCREMENTAL",
	"IF",
	"IFNULL",
	"ILIKE",
	"IN",
	"INTERLEAVE",
	"INDEX",
	"INDEXES",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"IS",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"KEY",
	"KEYS",
	"KV",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEAST",
	"LEFT",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NO_INDEX_JOIN",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"ON",
	"ONLY",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PASSWORD",
	"PAUSE",
	"PLACING",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURE",
	"QUERIES",
	"QUERY",
	"RANGE",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"RENAME",
	"REPEATABLE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"SAVEPOINT",
	"SCATTER",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCES",
	"SERIAL",
	"SERIALIZABLE",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYSTEM",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RANGES",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TYPE",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UPDATE",
	"UPSERT",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"';'",
	"','",
	"'{'",
	"'}'",
	"'@'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

<<<<<<< HEAD
//line sql.y:6522
=======
//line sql.y:5982
>>>>>>> Fix build errors

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
<<<<<<< HEAD
	1, 54,
	360, 54,
	-2, 665,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 48,
	142, 516,
	-2, 0,
	-1, 63,
	92, 665,
	146, 665,
	312, 665,
	313, 665,
	-2, 0,
	-1, 74,
	103, 640,
	112, 640,
	154, 640,
	173, 640,
	198, 640,
	204, 640,
	309, 640,
	-2, 629,
	-1, 105,
	4, 667,
	20, 667,
	21, 667,
	23, 667,
	28, 667,
	33, 667,
	34, 667,
	35, 667,
	36, 667,
	37, 667,
	38, 667,
	39, 667,
	40, 667,
	41, 667,
	42, 667,
	44, 667,
	45, 667,
	46, 667,
	47, 667,
	48, 667,
	51, 667,
	52, 667,
	53, 667,
	55, 667,
	56, 667,
	60, 667,
	61, 667,
	62, 667,
	64, 667,
	66, 667,
	67, 667,
	68, 667,
	71, 667,
	72, 667,
	73, 667,
	81, 667,
	82, 667,
	83, 667,
	84, 667,
	85, 667,
	86, 667,
	87, 667,
	88, 667,
	90, 667,
	92, 667,
	94, 667,
	97, 667,
	98, 667,
	100, 667,
	104, 667,
	105, 667,
	106, 667,
	107, 667,
	108, 667,
	109, 667,
	113, 667,
	114, 667,
	115, 667,
	116, 667,
	117, 667,
	119, 667,
	121, 667,
	125, 667,
	127, 667,
	128, 667,
	130, 667,
	132, 667,
	133, 667,
	134, 667,
	135, 667,
	136, 667,
	137, 667,
	138, 667,
	141, 667,
	143, 667,
	146, 667,
	147, 667,
	148, 667,
	149, 667,
	150, 667,
	151, 667,
	152, 667,
	153, 667,
	155, 667,
	158, 667,
	159, 667,
	160, 667,
	162, 667,
	163, 667,
	164, 667,
	166, 667,
	167, 667,
	169, 667,
	171, 667,
	174, 667,
	177, 667,
	179, 667,
	180, 667,
	181, 667,
	182, 667,
	183, 667,
	184, 667,
	186, 667,
	187, 667,
	188, 667,
	189, 667,
	193, 667,
	194, 667,
	195, 667,
	196, 667,
	197, 667,
	199, 667,
	201, 667,
	202, 667,
	205, 667,
	206, 667,
	208, 667,
	210, 667,
	211, 667,
	212, 667,
	213, 667,
	214, 667,
	215, 667,
	217, 667,
	218, 667,
	219, 667,
	220, 667,
	221, 667,
	223, 667,
	224, 667,
	225, 667,
	226, 667,
	227, 667,
	228, 667,
	229, 667,
	230, 667,
	231, 667,
	233, 667,
	234, 667,
	235, 667,
	236, 667,
	237, 667,
	238, 667,
	239, 667,
	240, 667,
	241, 667,
	242, 667,
	243, 667,
	244, 667,
	246, 667,
	248, 667,
	249, 667,
	250, 667,
	251, 667,
	253, 667,
	254, 667,
	255, 667,
	256, 667,
	258, 667,
	259, 667,
	260, 667,
	261, 667,
	262, 667,
	264, 667,
	265, 667,
	266, 667,
	267, 667,
	269, 667,
	270, 667,
	271, 667,
	272, 667,
	274, 667,
	275, 667,
	276, 667,
	277, 667,
	278, 667,
	279, 667,
	280, 667,
	281, 667,
	282, 667,
	283, 667,
	285, 667,
	287, 667,
	288, 667,
	289, 667,
	290, 667,
	291, 667,
	292, 667,
	293, 667,
	295, 667,
	296, 667,
	297, 667,
	300, 667,
	301, 667,
	302, 667,
	303, 667,
	305, 667,
	306, 667,
	307, 667,
	308, 667,
	311, 667,
	312, 667,
	313, 667,
	314, 667,
	316, 667,
	318, 667,
	319, 667,
	320, 667,
	321, 667,
	322, 667,
	323, 667,
	326, 667,
	331, 667,
	332, 667,
	333, 667,
	334, 667,
	335, 667,
	-2, 0,
	-1, 118,
	103, 639,
	112, 639,
	154, 639,
	173, 639,
	198, 639,
	204, 639,
	309, 639,
	-2, 632,
	-1, 122,
	1, 565,
	158, 565,
	223, 565,
	228, 565,
	359, 565,
	360, 565,
	-2, 0,
	-1, 124,
	1, 565,
	359, 565,
	360, 565,
	-2, 0,
	-1, 125,
	1, 565,
	359, 565,
	360, 565,
	-2, 0,
	-1, 126,
	1, 569,
	359, 569,
	360, 569,
	-2, 0,
	-1, 133,
	4, 673,
	5, 673,
	6, 673,
	7, 673,
	8, 673,
	9, 673,
	20, 673,
	21, 673,
	23, 673,
	28, 673,
	29, 673,
	33, 673,
	34, 673,
	35, 673,
	36, 673,
	37, 673,
	38, 673,
	39, 673,
	40, 673,
	41, 673,
	42, 673,
	44, 673,
	45, 673,
	46, 673,
	47, 673,
	48, 673,
	49, 673,
	50, 673,
	51, 673,
	52, 673,
	53, 673,
	55, 673,
	56, 673,
	58, 673,
	60, 673,
	61, 673,
	62, 673,
	64, 673,
	66, 673,
	67, 673,
	68, 673,
	70, 673,
	71, 673,
	72, 673,
	73, 673,
	75, 673,
	76, 673,
	77, 673,
	79, 673,
	80, 673,
	81, 673,
	82, 673,
	83, 673,
	84, 673,
	85, 673,
	86, 673,
	87, 673,
	88, 673,
	90, 673,
	92, 673,
	94, 673,
	97, 673,
	98, 673,
	100, 673,
	104, 673,
	105, 673,
	106, 673,
	107, 673,
	108, 673,
	109, 673,
	110, 673,
	113, 673,
	114, 673,
	115, 673,
	116, 673,
	117, 673,
	119, 673,
	121, 673,
	124, 673,
	125, 673,
	127, 673,
	128, 673,
	130, 673,
	132, 673,
	133, 673,
	134, 673,
	135, 673,
	136, 673,
	137, 673,
	138, 673,
	139, 673,
	141, 673,
	143, 673,
	145, 673,
	146, 673,
	147, 673,
	148, 673,
	149, 673,
	150, 673,
	151, 673,
	152, 673,
	153, 673,
	155, 673,
	157, 673,
	158, 673,
	159, 673,
	160, 673,
	161, 673,
	162, 673,
	163, 673,
	164, 673,
	166, 673,
	167, 673,
	169, 673,
	170, 673,
	171, 673,
	172, 673,
	174, 673,
	177, 673,
	179, 673,
	180, 673,
	181, 673,
	182, 673,
	183, 673,
	184, 673,
	185, 673,
	186, 673,
	187, 673,
	188, 673,
	189, 673,
	190, 673,
	192, 673,
	193, 673,
	194, 673,
	195, 673,
	196, 673,
	197, 673,
	199, 673,
	202, 673,
	205, 673,
	206, 673,
	207, 673,
	208, 673,
	209, 673,
	210, 673,
	211, 673,
	212, 673,
	213, 673,
	214, 673,
	215, 673,
	217, 673,
	218, 673,
	219, 673,
	220, 673,
	221, 673,
	223, 673,
	224, 673,
	225, 673,
	226, 673,
	227, 673,
	228, 673,
	229, 673,
	230, 673,
	231, 673,
	233, 673,
	234, 673,
	235, 673,
	236, 673,
	237, 673,
	238, 673,
	239, 673,
	240, 673,
	241, 673,
	242, 673,
	243, 673,
	244, 673,
	246, 673,
	247, 673,
	248, 673,
	249, 673,
	250, 673,
	251, 673,
	253, 673,
	254, 673,
	255, 673,
	256, 673,
	258, 673,
	259, 673,
	260, 673,
	261, 673,
	262, 673,
	263, 673,
	264, 673,
	265, 673,
	266, 673,
	267, 673,
	268, 673,
	269, 673,
	270, 673,
	271, 673,
	272, 673,
	274, 673,
	275, 673,
	276, 673,
	277, 673,
	278, 673,
	279, 673,
	280, 673,
	281, 673,
	282, 673,
	283, 673,
	285, 673,
	287, 673,
	288, 673,
	289, 673,
	290, 673,
	291, 673,
	292, 673,
	293, 673,
	295, 673,
	296, 673,
	297, 673,
	300, 673,
	301, 673,
	302, 673,
	303, 673,
	304, 673,
	305, 673,
	306, 673,
	307, 673,
	308, 673,
	311, 673,
	312, 673,
	313, 673,
	314, 673,
	315, 673,
	316, 673,
	318, 673,
	319, 673,
	320, 673,
	321, 673,
	322, 673,
	323, 673,
	326, 673,
	331, 673,
	332, 673,
	333, 673,
	334, 673,
	335, 673,
	336, 673,
	342, 673,
	347, 673,
	348, 673,
	349, 673,
	356, 673,
	362, 673,
	-2, 0,
	-1, 136,
	1, 54,
	360, 54,
	-2, 665,
	-1, 601,
	123, 1262,
	298, 1262,
	341, 1262,
	358, 1262,
	-2, 0,
	-1, 602,
	123, 1213,
	298, 1213,
	341, 1213,
	358, 1213,
	-2, 0,
	-1, 604,
	123, 1321,
	298, 1321,
	341, 1321,
	358, 1321,
	-2, 0,
	-1, 606,
	123, 1343,
	298, 1343,
	341, 1343,
	358, 1343,
	-2, 0,
	-1, 613,
	1, 302,
	359, 302,
	360, 302,
	-2, 1267,
	-1, 639,
	1, 384,
	355, 384,
	357, 384,
	359, 384,
	360, 384,
	-2, 0,
	-1, 640,
	1, 432,
	120, 432,
	355, 432,
	357, 432,
	359, 432,
	360, 432,
	-2, 0,
	-1, 646,
	1, 398,
	355, 398,
	357, 398,
	359, 398,
	360, 398,
	-2, 0,
	-1, 648,
	1, 402,
	355, 402,
	357, 402,
	359, 402,
	360, 402,
	-2, 0,
	-1, 651,
	1, 410,
	355, 410,
	357, 410,
	359, 410,
	360, 410,
	-2, 0,
	-1, 652,
	1, 415,
	355, 415,
	357, 415,
	359, 415,
	360, 415,
	-2, 0,
	-1, 655,
	1, 425,
	355, 425,
	357, 425,
	359, 425,
	360, 425,
	-2, 0,
	-1, 664,
	112, 675,
	173, 675,
	198, 675,
	-2, 635,
	-1, 667,
	112, 674,
	173, 674,
	198, 674,
	-2, 633,
	-1, 797,
	356, 1191,
	-2, 1184,
	-1, 798,
	356, 1192,
	-2, 1185,
	-1, 804,
	5, 848,
	356, 848,
	-2, 1394,
	-1, 829,
	5, 807,
	-2, 1364,
	-1, 830,
	5, 842,
	356, 842,
	-2, 1366,
	-1, 831,
	5, 817,
	-2, 1367,
	-1, 832,
	5, 816,
	-2, 1368,
	-1, 833,
	5, 842,
	356, 842,
	-2, 1371,
	-1, 834,
	5, 842,
	356, 842,
	-2, 1372,
	-1, 835,
	5, 843,
	-2, 1375,
	-1, 836,
	5, 799,
	-2, 1376,
	-1, 837,
	5, 799,
	-2, 1377,
	-1, 838,
	5, 824,
	-2, 1381,
	-1, 839,
	5, 809,
	-2, 1382,
	-1, 840,
	5, 810,
	-2, 1383,
	-1, 841,
	5, 800,
	-2, 1388,
	-1, 842,
	5, 801,
	-2, 1389,
	-1, 843,
	5, 802,
	-2, 1390,
	-1, 844,
	5, 803,
	-2, 1391,
	-1, 845,
	5, 804,
	-2, 1392,
	-1, 846,
	5, 805,
	-2, 1393,
	-1, 847,
	5, 799,
	-2, 1398,
	-1, 848,
	5, 808,
	-2, 1403,
	-1, 849,
	5, 806,
	-2, 1406,
	-1, 850,
	5, 840,
	356, 840,
	-2, 1408,
	-1, 851,
	5, 844,
	-2, 1411,
	-1, 852,
	5, 846,
	-2, 1412,
	-1, 853,
	5, 839,
	356, 839,
	-2, 1417,
	-1, 871,
	214, 663,
	-2, 509,
	-1, 875,
	200, 1188,
	-2, 0,
	-1, 910,
	1, 211,
	355, 211,
	357, 211,
	359, 211,
	360, 211,
	-2, 638,
	-1, 913,
	4, 1416,
	10, 1416,
	11, 1416,
	13, 1416,
	14, 1416,
	15, 1416,
	16, 1416,
	17, 1416,
	18, 1416,
	20, 1416,
	21, 1416,
	23, 1416,
	26, 1416,
	28, 1416,
	30, 1416,
	33, 1416,
	34, 1416,
	35, 1416,
	36, 1416,
	37, 1416,
	38, 1416,
	39, 1416,
	40, 1416,
	41, 1416,
	42, 1416,
	44, 1416,
	45, 1416,
	46, 1416,
	47, 1416,
	48, 1416,
	51, 1416,
	52, 1416,
	53, 1416,
	55, 1416,
	56, 1416,
	57, 1416,
	60, 1416,
	61, 1416,
	62, 1416,
	63, 1416,
	64, 1416,
	66, 1416,
	67, 1416,
	68, 1416,
	70, 1416,
	71, 1416,
	72, 1416,
	73, 1416,
	81, 1416,
	82, 1416,
	83, 1416,
	84, 1416,
	85, 1416,
	86, 1416,
	87, 1416,
	88, 1416,
	90, 1416,
	92, 1416,
	94, 1416,
	97, 1416,
	98, 1416,
	100, 1416,
	104, 1416,
	105, 1416,
	106, 1416,
	107, 1416,
	108, 1416,
	109, 1416,
	113, 1416,
	114, 1416,
	115, 1416,
	116, 1416,
	117, 1416,
	118, 1416,
	119, 1416,
	121, 1416,
	124, 1416,
	125, 1416,
	127, 1416,
	128, 1416,
	130, 1416,
	132, 1416,
	133, 1416,
	134, 1416,
	135, 1416,
	136, 1416,
	137, 1416,
	138, 1416,
	139, 1416,
	140, 1416,
	141, 1416,
	143, 1416,
	145, 1416,
	146, 1416,
	147, 1416,
	148, 1416,
	149, 1416,
	150, 1416,
	151, 1416,
	152, 1416,
	153, 1416,
	155, 1416,
	157, 1416,
	158, 1416,
	159, 1416,
	160, 1416,
	161, 1416,
	162, 1416,
	163, 1416,
	164, 1416,
	166, 1416,
	167, 1416,
	169, 1416,
	170, 1416,
	171, 1416,
	172, 1416,
	174, 1416,
	177, 1416,
	178, 1416,
	179, 1416,
	180, 1416,
	181, 1416,
	182, 1416,
	183, 1416,
	184, 1416,
	185, 1416,
	186, 1416,
	187, 1416,
	188, 1416,
	189, 1416,
	193, 1416,
	194, 1416,
	195, 1416,
	196, 1416,
	197, 1416,
	199, 1416,
	202, 1416,
	203, 1416,
	205, 1416,
	206, 1416,
	208, 1416,
	210, 1416,
	211, 1416,
	212, 1416,
	213, 1416,
	214, 1416,
	215, 1416,
	217, 1416,
	218, 1416,
	219, 1416,
	220, 1416,
	221, 1416,
	223, 1416,
	224, 1416,
	225, 1416,
	226, 1416,
	227, 1416,
	228, 1416,
	229, 1416,
	230, 1416,
	231, 1416,
	233, 1416,
	234, 1416,
	235, 1416,
	236, 1416,
	237, 1416,
	238, 1416,
	239, 1416,
	240, 1416,
	241, 1416,
	242, 1416,
	243, 1416,
	244, 1416,
	246, 1416,
	247, 1416,
	248, 1416,
	249, 1416,
	250, 1416,
	251, 1416,
	252, 1416,
	253, 1416,
	254, 1416,
	255, 1416,
	256, 1416,
	258, 1416,
	259, 1416,
	260, 1416,
	261, 1416,
	262, 1416,
	264, 1416,
	265, 1416,
	266, 1416,
	267, 1416,
	268, 1416,
	269, 1416,
	270, 1416,
	271, 1416,
	272, 1416,
	274, 1416,
	275, 1416,
	276, 1416,
	277, 1416,
	278, 1416,
	279, 1416,
	280, 1416,
	281, 1416,
	282, 1416,
	283, 1416,
	285, 1416,
	287, 1416,
	288, 1416,
	289, 1416,
	290, 1416,
	291, 1416,
	292, 1416,
	293, 1416,
	295, 1416,
	296, 1416,
	297, 1416,
	300, 1416,
	301, 1416,
	302, 1416,
	303, 1416,
	305, 1416,
	306, 1416,
	307, 1416,
	308, 1416,
	311, 1416,
	312, 1416,
	313, 1416,
	314, 1416,
	316, 1416,
	318, 1416,
	319, 1416,
	320, 1416,
	321, 1416,
	322, 1416,
	323, 1416,
	326, 1416,
	331, 1416,
	332, 1416,
	333, 1416,
	334, 1416,
	335, 1416,
	336, 1416,
	337, 1416,
	339, 1416,
	340, 1416,
	341, 1416,
	342, 1416,
	344, 1416,
	345, 1416,
	346, 1416,
	347, 1416,
	348, 1416,
	349, 1416,
	350, 1416,
	351, 1416,
	352, 1416,
	354, 1416,
	357, 1416,
	358, 1416,
	361, 1416,
	362, 1416,
	-2, 0,
	-1, 938,
	123, 1343,
	298, 1343,
	341, 1343,
	358, 1343,
	-2, 0,
	-1, 1006,
	112, 674,
	173, 674,
	198, 674,
	-2, 636,
	-1, 1060,
	103, 640,
	112, 640,
	154, 640,
	173, 640,
	198, 640,
	204, 640,
	309, 640,
	-2, 734,
	-1, 1141,
	103, 640,
	112, 640,
	154, 640,
	173, 640,
	198, 640,
	204, 640,
	309, 640,
	-2, 967,
	-1, 1151,
	356, 1168,
	-2, 1156,
	-1, 1168,
	357, 1108,
	-2, 0,
	-1, 1403,
	1, 735,
	70, 735,
	103, 735,
	112, 735,
	124, 735,
	129, 735,
	131, 735,
	145, 735,
	154, 735,
	161, 735,
	170, 735,
	173, 735,
	185, 735,
	198, 735,
	200, 735,
	204, 735,
	245, 735,
	247, 735,
	309, 735,
	317, 735,
	328, 735,
	329, 735,
	338, 735,
	355, 735,
	357, 735,
	359, 735,
	360, 735,
	361, 735,
	-2, 734,
	-1, 1463,
=======
	1, 35,
	360, 35,
	-2, 522,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 72,
	104, 504,
	113, 504,
	155, 504,
	174, 504,
	199, 504,
	205, 504,
	310, 504,
	-2, 494,
	-1, 118,
	104, 503,
	113, 503,
	155, 503,
	174, 503,
	199, 503,
	205, 503,
	310, 503,
	-2, 497,
	-1, 136,
	1, 35,
	360, 35,
	363, 35,
	-2, 522,
	-1, 525,
	124, 1107,
	299, 1107,
	342, 1107,
	359, 1107,
	-2, 0,
	-1, 536,
	1, 222,
	360, 222,
	363, 222,
	-2, 1112,
	-1, 550,
	113, 532,
	174, 532,
	199, 532,
	-2, 500,
	-1, 558,
	113, 531,
	174, 531,
	199, 531,
	-2, 498,
	-1, 713,
	357, 1035,
	-2, 1028,
	-1, 714,
	357, 1036,
	-2, 1029,
	-1, 720,
	5, 702,
	357, 702,
	-2, 1239,
	-1, 745,
	5, 661,
	-2, 1209,
	-1, 746,
	5, 696,
	357, 696,
	-2, 1211,
	-1, 747,
	5, 671,
	-2, 1212,
	-1, 748,
	5, 670,
	-2, 1213,
	-1, 749,
	5, 696,
	357, 696,
	-2, 1216,
	-1, 750,
	5, 696,
	357, 696,
	-2, 1217,
	-1, 751,
	5, 697,
	-2, 1220,
	-1, 752,
	5, 653,
	-2, 1221,
	-1, 753,
	5, 653,
	-2, 1222,
	-1, 754,
	5, 678,
	-2, 1226,
	-1, 755,
	5, 663,
	-2, 1227,
	-1, 756,
	5, 664,
	-2, 1228,
	-1, 757,
	5, 654,
	-2, 1233,
	-1, 758,
	5, 655,
	-2, 1234,
	-1, 759,
	5, 656,
	-2, 1235,
	-1, 760,
	5, 657,
	-2, 1236,
	-1, 761,
	5, 658,
	-2, 1237,
	-1, 762,
	5, 659,
	-2, 1238,
	-1, 763,
	5, 653,
	-2, 1243,
	-1, 764,
	5, 662,
	-2, 1248,
	-1, 765,
	5, 660,
	-2, 1251,
	-1, 766,
	5, 694,
	357, 694,
	-2, 1253,
	-1, 767,
	5, 698,
	-2, 1256,
	-1, 768,
	5, 700,
	-2, 1257,
	-1, 769,
	5, 693,
	357, 693,
	-2, 1262,
	-1, 813,
	215, 520,
	-2, 385,
	-1, 819,
	113, 531,
	174, 531,
	199, 531,
	-2, 501,
	-1, 922,
	104, 504,
	113, 504,
	155, 504,
	174, 504,
	199, 504,
	205, 504,
	310, 504,
	-2, 588,
	-1, 1005,
	104, 504,
	113, 504,
	155, 504,
	174, 504,
	199, 504,
	205, 504,
	310, 504,
	-2, 821,
	-1, 1014,
	357, 1012,
	-2, 1000,
	-1, 1260,
	1, 589,
	71, 589,
	104, 589,
	113, 589,
	125, 589,
	130, 589,
	132, 589,
	146, 589,
	155, 589,
	162, 589,
	171, 589,
	174, 589,
	186, 589,
	199, 589,
	201, 589,
	205, 589,
	246, 589,
	248, 589,
	310, 589,
	318, 589,
	329, 589,
	330, 589,
	339, 589,
	356, 589,
	358, 589,
	360, 589,
	361, 589,
	363, 589,
	-2, 588,
	-1, 1328,
>>>>>>> Fix build errors
	13, 0,
	14, 0,
	15, 0,
	340, 0,
	341, 0,
<<<<<<< HEAD
	-2, 883,
	-1, 1464,
=======
	342, 0,
	-2, 737,
	-1, 1329,
>>>>>>> Fix build errors
	13, 0,
	14, 0,
	15, 0,
	340, 0,
	341, 0,
<<<<<<< HEAD
	-2, 884,
	-1, 1465,
=======
	342, 0,
	-2, 738,
	-1, 1330,
>>>>>>> Fix build errors
	13, 0,
	14, 0,
	15, 0,
	340, 0,
	341, 0,
<<<<<<< HEAD
	-2, 885,
	-1, 1469,
=======
	342, 0,
	-2, 739,
	-1, 1334,
>>>>>>> Fix build errors
	13, 0,
	14, 0,
	15, 0,
	340, 0,
	341, 0,
<<<<<<< HEAD
	-2, 889,
	-1, 1470,
=======
	342, 0,
	-2, 743,
	-1, 1335,
>>>>>>> Fix build errors
	13, 0,
	14, 0,
	15, 0,
	340, 0,
	341, 0,
<<<<<<< HEAD
	-2, 890,
	-1, 1471,
=======
	342, 0,
	-2, 744,
	-1, 1336,
>>>>>>> Fix build errors
	13, 0,
	14, 0,
	15, 0,
	340, 0,
	341, 0,
<<<<<<< HEAD
	-2, 891,
	-1, 1474,
=======
	342, 0,
	-2, 745,
	-1, 1339,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 896,
	-1, 1480,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 750,
	-1, 1345,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 898,
	-1, 1482,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 752,
	-1, 1347,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 902,
	-1, 1483,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 756,
	-1, 1348,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 903,
	-1, 1484,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 757,
	-1, 1349,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 904,
	-1, 1485,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 758,
	-1, 1350,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 905,
	-1, 1511,
	209, 1050,
	-2, 1053,
	-1, 1553,
	123, 1090,
	356, 1191,
	-2, 1184,
	-1, 1554,
	123, 1091,
	-2, 1360,
	-1, 1555,
	123, 1092,
	-2, 1266,
	-1, 1556,
	123, 1093,
	-2, 1228,
	-1, 1557,
	123, 1094,
	-2, 1246,
	-1, 1558,
	123, 1095,
	-2, 1265,
	-1, 1559,
	123, 1096,
	-2, 1318,
	-1, 1765,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 759,
	-1, 1376,
	210, 894,
	-2, 897,
	-1, 1413,
	124, 934,
	357, 1035,
	-2, 1028,
	-1, 1414,
	124, 935,
	-2, 1205,
	-1, 1415,
	124, 936,
	-2, 1111,
	-1, 1416,
	124, 937,
	-2, 1073,
	-1, 1417,
	124, 938,
	-2, 1091,
	-1, 1418,
	124, 939,
	-2, 1110,
	-1, 1419,
	124, 940,
	-2, 1163,
	-1, 1615,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 897,
	-1, 1766,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 751,
	-1, 1616,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 899,
	-1, 1771,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 753,
	-1, 1621,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 900,
	-1, 1789,
	209, 1049,
	-2, 1052,
	-1, 1999,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 754,
	-1, 1639,
	210, 893,
	-2, 896,
	-1, 1850,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 901,
	-1, 2004,
	157, 0,
	-2, 917,
	-1, 2014,
	209, 1051,
	-2, 1054,
	-1, 2056,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 755,
	-1, 1855,
	158, 0,
	-2, 771,
	-1, 1865,
	210, 895,
	-2, 898,
	-1, 1907,
>>>>>>> Fix build errors
	13, 0,
	14, 0,
	15, 0,
	340, 0,
	341, 0,
<<<<<<< HEAD
	-2, 944,
	-1, 2057,
=======
	342, 0,
	-2, 798,
	-1, 1908,
>>>>>>> Fix build errors
	13, 0,
	14, 0,
	15, 0,
	340, 0,
	341, 0,
<<<<<<< HEAD
	-2, 945,
	-1, 2058,
=======
	342, 0,
	-2, 799,
	-1, 1909,
>>>>>>> Fix build errors
	13, 0,
	14, 0,
	15, 0,
	340, 0,
	341, 0,
<<<<<<< HEAD
	-2, 946,
	-1, 2062,
=======
	342, 0,
	-2, 800,
	-1, 1913,
>>>>>>> Fix build errors
	13, 0,
	14, 0,
	15, 0,
	340, 0,
	341, 0,
<<<<<<< HEAD
	-2, 950,
	-1, 2063,
=======
	342, 0,
	-2, 804,
	-1, 1914,
>>>>>>> Fix build errors
	13, 0,
	14, 0,
	15, 0,
	340, 0,
	341, 0,
<<<<<<< HEAD
	-2, 951,
	-1, 2064,
=======
	342, 0,
	-2, 805,
	-1, 1915,
>>>>>>> Fix build errors
	13, 0,
	14, 0,
	15, 0,
	340, 0,
	341, 0,
<<<<<<< HEAD
	-2, 952,
	-1, 2190,
	157, 0,
	-2, 918,
	-1, 2193,
=======
	342, 0,
	-2, 806,
	-1, 1952,
	360, 35,
	363, 35,
	-2, 522,
	-1, 2032,
	158, 0,
	-2, 772,
	-1, 2035,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 921,
	-1, 2194,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 775,
	-1, 2036,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 923,
	-1, 2295,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 777,
	-1, 2143,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 922,
	-1, 2296,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 776,
	-1, 2144,
>>>>>>> Fix build errors
	16, 0,
	17, 0,
	18, 0,
	36, 0,
	140, 0,
<<<<<<< HEAD
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 924,
	-1, 2303,
	157, 0,
	-2, 953,
	-1, 2358,
	157, 0,
	-2, 954,
	-1, 2429,
	36, 0,
	139, 0,
	172, 0,
	268, 0,
	336, 0,
	342, 0,
	-2, 1363,
=======
	141, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 778,
	-1, 2151,
	158, 0,
	-2, 807,
	-1, 2208,
	158, 0,
	-2, 808,
	-1, 2283,
	36, 0,
	140, 0,
	173, 0,
	269, 0,
	337, 0,
	343, 0,
	-2, 1208,
>>>>>>> Fix build errors
}

const sqlPrivate = 57344

<<<<<<< HEAD
const sqlLast = 41999

var sqlAct = [...]int{

	798, 2428, 2412, 2381, 2458, 2087, 2270, 2413, 1925, 2414,
	1624, 2427, 1632, 1197, 2333, 2033, 2231, 961, 2149, 668,
	2097, 1604, 1690, 1238, 1288, 2163, 2118, 788, 796, 73,
	724, 1204, 1289, 1893, 795, 1970, 774, 865, 2120, 2250,
	175, 451, 25, 1971, 175, 1398, 1239, 1058, 1898, 1603,
	2129, 1621, 1608, 1855, 175, 1895, 1720, 1054, 2112, 1699,
	1607, 1041, 1633, 175, 1200, 1854, 471, 1035, 1442, 175,
	175, 1535, 1147, 175, 1800, 1707, 175, 1063, 1509, 1407,
	1399, 1416, 1941, 175, 469, 1439, 1364, 1316, 942, 1674,
	1519, 1686, 1193, 444, 676, 117, 1582, 768, 612, 1497,
	1066, 1068, 1036, 1494, 1529, 1605, 730, 688, 941, 441,
	900, 1178, 897, 890, 1626, 689, 1549, 1611, 1182, 767,
	911, 1136, 694, 733, 1045, 1385, 1372, 712, 175, 175,
	118, 1009, 585, 1010, 1211, 680, 175, 119, 1008, 685,
	166, 790, 1314, 1026, 607, 887, 461, 2164, 171, 710,
	673, 1025, 589, 605, 1217, 1014, 1955, 1788, 117, 1956,
	1625, 1219, 1219, 175, 175, 175, 175, 945, 1055, 2455,
	175, 175, 1219, 1088, 672, 2436, 2424, 2423, 25, 2162,
	1647, 1647, 2420, 2408, 2407, 2398, 1088, 1662, 1662, 1655,
	672, 2376, 754, 1909, 667, 2245, 2372, 2364, 2360, 2315,
	1088, 2162, 1655, 2162, 2312, 1440, 1939, 2310, 1088, 677,
	577, 2162, 2297, 727, 2281, 2280, 1655, 2258, 1088, 2162,
	2255, 1088, 791, 1910, 1088, 2217, 1091, 1092, 1944, 1647,
	609, 117, 946, 1374, 2195, 2192, 2184, 947, 1647, 1655,
	1647, 2182, 2161, 38, 1792, 1647, 2162, 2142, 665, 1094,
	1793, 1088, 2111, 1791, 633, 664, 1602, 1091, 1092, 1647,
	1647, 1440, 2106, 1121, 1122, 1123, 1602, 2008, 1951, 738,
	742, 1647, 1952, 1093, 1085, 2377, 748, 1919, 714, 1108,
	1094, 1883, 1882, 1125, 1662, 1662, 1088, 1825, 1826, 48,
	1843, 1844, 1845, 1872, 1870, 2245, 1869, 1873, 1647, 133,
	1647, 1868, 1789, 2189, 1093, 1647, 1647, 1723, 1696, 101,
	1108, 1647, 1088, 716, 1944, 717, 1091, 1092, 61, 1111,
	1112, 1113, 1121, 1122, 1123, 62, 1664, 63, 135, 1654,
	1647, 1647, 1114, 1655, 1099, 1373, 1934, 1646, 2069, 1094,
	1840, 1647, 1125, 1585, 1601, 1379, 1231, 1799, 1602, 1378,
	1232, 675, 65, 133, 2011, 1405, 1220, 1220, 1091, 1092,
	1088, 1883, 1532, 1093, 134, 1099, 1689, 1220, 1672, 1108,
	1297, 1513, 127, 1030, 752, 920, 136, 2165, 918, 128,
	917, 1094, 135, 916, 133, 915, 1118, 1126, 1825, 1826,
	914, 1843, 1844, 1845, 1109, 1831, 718, 715, 120, 660,
	659, 176, 658, 631, 175, 1093, 175, 175, 630, 175,
	1533, 629, 628, 135, 691, 627, 175, 626, 134, 1116,
	625, 624, 175, 623, 1099, 1109, 127, 622, 621, 620,
	619, 618, 617, 128, 1846, 175, 175, 175, 175, 175,
	1629, 1840, 616, 615, 694, 1118, 1126, 600, 599, 134,
	598, 432, 120, 431, 430, 1841, 1534, 1531, 429, 758,
	904, 1909, 428, 1124, 413, 412, 1099, 472, 1110, 2448,
	402, 1373, 1715, 673, 1225, 1218, 401, 133, 1116, 1825,
	1826, 1676, 1052, 120, 1109, 1348, 1546, 101, 400, 399,
	392, 391, 160, 1091, 1092, 159, 1831, 158, 38, 1110,
	157, 156, 869, 155, 154, 873, 135, 153, 152, 1115,
	151, 150, 149, 148, 147, 1119, 1094, 146, 1847, 145,
	144, 143, 142, 695, 141, 140, 1109, 139, 889, 1842,
	138, 137, 1536, 893, 893, 1846, 1320, 956, 2426, 2419,
	1093, 1544, 134, 1542, 48, 864, 2386, 2355, 2313, 894,
	127, 1059, 1825, 1826, 2222, 2238, 1841, 128, 1110, 912,
	1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101, 1825,
	1826, 1021, 175, 61, 1119, 2218, 120, 1505, 2210, 2209,
	62, 2208, 63, 1117, 2204, 2203, 2202, 1831, 175, 1120,
	2201, 1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101,
	1110, 1099, 2128, 2117, 1155, 175, 133, 65, 133, 2084,
	1530, 2079, 2078, 2077, 694, 2019, 1837, 1838, 1839, 1881,
	1877, 1836, 1834, 1835, 1827, 1828, 1829, 1830, 1832, 1833,
	1842, 685, 1660, 1885, 1235, 135, 694, 135, 1874, 1862,
	1853, 1824, 1117, 1821, 1820, 1105, 1106, 1107, 1120, 1818,
	1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101, 1805,
	1831, 1804, 175, 725, 1727, 1021, 1403, 2219, 959, 1020,
	921, 134, 1148, 134, 1139, 1057, 1923, 1831, 758, 127,
	856, 127, 1056, 1506, 1007, 38, 128, 1203, 128, 862,
	2035, 855, 1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100,
	1101, 952, 2399, 2367, 1896, 120, 2354, 1628, 2353, 2352,
	175, 2237, 175, 2344, 2342, 2327, 2326, 1837, 1838, 1839,
	2325, 2305, 1836, 1834, 1835, 1827, 1828, 1829, 1830, 1832,
	1833, 48, 133, 2267, 2336, 175, 175, 1841, 2246, 1006,
	2225, 761, 101, 929, 2215, 2168, 2095, 2093, 1034, 2092,
	939, 2090, 694, 175, 692, 1685, 2003, 1979, 936, 471,
	61, 135, 38, 1684, 673, 1978, 1959, 62, 1005, 63,
	1825, 1826, 1947, 1843, 1844, 1845, 1852, 1814, 1813, 1810,
	1785, 1780, 1499, 1758, 1086, 1753, 2188, 957, 1039, 1740,
	1739, 1825, 1826, 1725, 65, 1695, 1183, 134, 1186, 1594,
	1540, 1390, 673, 1196, 1190, 127, 1176, 665, 48, 1175,
	1174, 1842, 128, 1173, 664, 1172, 1827, 1828, 1829, 1830,
	1832, 1833, 1713, 1840, 117, 2244, 1017, 1018, 1171, 1170,
	1169, 120, 1097, 1098, 1100, 1101, 1168, 61, 1167, 1053,
	2197, 1545, 1029, 1089, 62, 695, 63, 1740, 1166, 1165,
	1091, 1092, 1027, 1164, 1163, 1162, 1161, 1160, 1061, 1159,
	1152, 1031, 1140, 1139, 175, 726, 1033, 935, 924, 908,
	2116, 65, 1954, 1094, 1950, 1657, 175, 1391, 1831, 1148,
	1921, 1137, 175, 1057, 175, 2248, 175, 1202, 2247, 949,
	175, 1829, 1830, 1832, 1833, 2241, 1543, 1093, 1541, 1831,
	951, 1087, 1195, 1836, 1834, 1835, 1827, 1828, 1829, 1830,
	1832, 1833, 1957, 1911, 1825, 1826, 1440, 1846, 1059, 133,
	175, 1236, 863, 1335, 1091, 1092, 694, 1876, 175, 101,
	1875, 1151, 950, 1764, 175, 1091, 1092, 1188, 1841, 948,
	1076, 1208, 1189, 1157, 1926, 1180, 1181, 1094, 135, 1304,
	694, 694, 931, 1201, 2251, 1154, 1184, 471, 1094, 1841,
	1074, 1625, 2036, 1796, 175, 1520, 1187, 685, 685, 175,
	1179, 1093, 1905, 1966, 175, 175, 2389, 175, 1075, 175,
	999, 175, 1093, 175, 134, 1651, 2446, 1069, 889, 1070,
	2445, 2176, 127, 1931, 175, 1069, 133, 1070, 2371, 128,
	175, 175, 1665, 1069, 707, 1070, 101, 991, 2291, 2290,
	705, 703, 1842, 2289, 2288, 695, 1994, 726, 120, 1000,
	1213, 1992, 1963, 1962, 1922, 135, 701, 1210, 1809, 175,
	1409, 175, 1099, 1842, 175, 1057, 1990, 695, 1808, 161,
	1807, 1321, 1806, 1099, 1767, 698, 2187, 175, 1298, 1222,
	1650, 1481, 1224, 1436, 1432, 1371, 471, 1430, 1598, 175,
	1233, 134, 1322, 175, 1071, 1409, 175, 1234, 1290, 127,
	175, 1408, 1071, 1028, 175, 949, 128, 751, 1291, 175,
	1071, 1305, 1295, 117, 1310, 175, 471, 418, 1597, 175,
	1309, 1452, 673, 1317, 471, 120, 662, 1567, 1336, 1837,
	1838, 1839, 1392, 1109, 1836, 1834, 1835, 1827, 1828, 1829,
	1830, 1832, 1833, 1417, 1329, 1622, 1143, 1428, 950, 2370,
	164, 1346, 1410, 1434, 1382, 1496, 1834, 1835, 1827, 1828,
	1829, 1830, 1832, 1833, 1345, 1298, 572, 671, 1443, 1450,
	1393, 419, 1351, 1350, 1997, 665, 1349, 1245, 665, 665,
	1421, 1423, 1360, 695, 2086, 1361, 1362, 2272, 1369, 1347,
	472, 1368, 1878, 1191, 1292, 1496, 1377, 934, 1981, 673,
	1438, 1313, 1383, 2405, 673, 1387, 1388, 1110, 1451, 165,
	1426, 1420, 1083, 1214, 1325, 1431, 1061, 1413, 670, 1195,
	803, 1520, 1101, 1091, 1092, 1437, 1532, 175, 1082, 1326,
	1658, 1536, 1687, 1688, 175, 1330, 2445, 1331, 985, 1332,
	2452, 1333, 1751, 1334, 1903, 175, 1094, 175, 1080, 175,
	1067, 1517, 175, 1899, 175, 2395, 175, 175, 175, 175,
	1340, 1342, 433, 694, 2026, 2029, 1081, 175, 672, 1930,
	1093, 2467, 2416, 964, 1533, 986, 998, 1825, 1826, 2396,
	1645, 1219, 1229, 1627, 1504, 1627, 1833, 1507, 1760, 1899,
	1755, 1095, 1096, 1097, 1098, 1100, 1101, 1079, 1077, 1988,
	1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101, 1344, 1293,
	2027, 1419, 1560, 462, 2347, 930, 1072, 1177, 1932, 1617,
	1534, 1531, 1503, 2301, 1072, 2461, 2309, 1501, 1386, 1134,
	709, 1099, 1072, 708, 1406, 990, 467, 421, 420, 699,
	699, 1536, 463, 437, 1245, 1245, 1812, 1639, 2451, 1402,
	893, 471, 893, 162, 672, 700, 117, 695, 1631, 175,
	2417, 1653, 117, 2124, 1982, 1640, 1642, 1641, 1478, 1643,
	464, 1648, 1652, 669, 699, 175, 175, 175, 912, 175,
	1659, 695, 695, 1649, 1668, 1831, 1536, 2415, 472, 2444,
	466, 1109, 163, 972, 2442, 1670, 1536, 393, 175, 1418,
	2230, 2273, 436, 1619, 1661, 175, 471, 1769, 927, 2157,
	663, 175, 175, 1697, 919, 175, 1671, 2418, 1703, 1184,
	175, 1187, 1013, 175, 1825, 1826, 1181, 1180, 1669, 427,
	1396, 175, 995, 2213, 1298, 1673, 1666, 175, 175, 175,
	783, 1012, 1763, 175, 2158, 1841, 175, 1495, 2450, 422,
	571, 1296, 175, 175, 175, 175, 175, 2065, 2283, 945,
	933, 175, 117, 175, 2459, 1110, 2468, 175, 1717, 1716,
	1704, 1476, 1479, 2282, 1530, 2265, 1220, 1677, 1324, 2339,
	172, 1726, 1701, 1777, 397, 1681, 1679, 472, 1705, 1706,
	1702, 1737, 1711, 1683, 414, 1733, 965, 996, 1775, 1752,
	1712, 465, 1011, 439, 1475, 1757, 1698, 1048, 1965, 575,
	172, 1736, 1732, 583, 1510, 1620, 588, 472, 1143, 1842,
	2460, 2472, 1514, 614, 946, 472, 1522, 1013, 1051, 947,
	1825, 1826, 1831, 966, 2214, 2172, 963, 1728, 1552, 1552,
	1565, 2462, 1577, 1209, 1384, 2153, 435, 2154, 1589, 1590,
	1592, 997, 2066, 1049, 394, 1198, 468, 1750, 2067, 673,
	1095, 1096, 1097, 1098, 1100, 1101, 2025, 2175, 713, 713,
	1772, 2382, 1798, 1502, 2174, 438, 397, 2156, 1308, 1307,
	1773, 691, 686, 1840, 1778, 434, 1721, 2159, 1356, 1339,
	1012, 973, 1841, 1299, 867, 866, 1303, 2098, 2266, 168,
	1477, 2232, 1742, 397, 397, 746, 397, 945, 1710, 1770,
	172, 755, 1768, 1835, 1827, 1828, 1829, 1830, 1832, 1833,
	1741, 395, 1693, 1381, 2471, 1380, 1492, 945, 1784, 580,
	1050, 574, 673, 175, 670, 1276, 2171, 858, 1831, 1795,
	1301, 1490, 886, 175, 423, 175, 1275, 175, 875, 2088,
	175, 1011, 1302, 1722, 175, 884, 2223, 1762, 2263, 175,
	1357, 175, 1942, 1311, 695, 2155, 1842, 1245, 175, 2130,
	1539, 3, 946, 2304, 1884, 2173, 1886, 947, 2212, 1856,
	1044, 175, 694, 1737, 2264, 424, 2002, 1887, 673, 1996,
	1890, 1879, 1774, 694, 175, 456, 33, 1538, 1841, 1776,
	1819, 857, 1779, 694, 940, 1901, 1859, 1860, 1861, 1663,
	1907, 455, 32, 1486, 1918, 425, 1600, 426, 1435, 1429,
	685, 1487, 1003, 1488, 175, 1927, 1002, 1493, 925, 1282,
	2379, 1857, 1920, 994, 1048, 1337, 1328, 452, 29, 1158,
	404, 175, 2411, 2146, 2016, 1888, 1986, 175, 1312, 454,
	17, 1904, 472, 448, 13, 1051, 175, 175, 800, 697,
	1912, 1827, 1828, 1829, 1830, 1832, 1833, 756, 757, 753,
	1917, 1046, 1842, 989, 958, 1984, 592, 1960, 1964, 983,
	1049, 1892, 1623, 1928, 1929, 1359, 579, 1616, 573, 1228,
	1933, 1227, 1953, 1226, 593, 1047, 885, 1223, 1977, 1976,
	1995, 1958, 1276, 1276, 1935, 1975, 1937, 472, 736, 883,
	1709, 1221, 1946, 1275, 1275, 1943, 1945, 1084, 1949, 1940,
	117, 408, 450, 16, 981, 1913, 1914, 592, 1915, 1044,
	449, 14, 33, 979, 2005, 1489, 1078, 1961, 1073, 447,
	12, 1894, 1491, 175, 614, 593, 871, 614, 32, 876,
	1968, 2021, 2022, 2023, 993, 594, 879, 1050, 977, 1245,
	945, 1989, 397, 409, 1836, 1834, 1835, 1827, 1828, 1829,
	1830, 1832, 1833, 1783, 29, 614, 614, 397, 901, 755,
	1786, 2320, 1015, 1048, 702, 704, 17, 2446, 975, 2243,
	13, 988, 969, 1443, 2040, 882, 2015, 2012, 1802, 1803,
	982, 2242, 1443, 2045, 1051, 1319, 594, 1691, 1245, 2028,
	2030, 2031, 453, 10, 175, 2039, 175, 2113, 2042, 2037,
	1046, 692, 687, 175, 2044, 946, 694, 1708, 1409, 1049,
	947, 1985, 2094, 1987, 1424, 2076, 446, 8, 2072, 1568,
	175, 175, 457, 2100, 1047, 980, 1851, 2091, 2322, 2107,
	1425, 2073, 445, 4, 978, 1016, 595, 175, 1864, 16,
	1409, 2105, 410, 721, 2349, 175, 1422, 14, 2165, 1692,
	471, 967, 2357, 2131, 2089, 175, 12, 1019, 175, 976,
	2099, 2104, 1433, 722, 1427, 1091, 1092, 2378, 471, 175,
	175, 2126, 2101, 175, 175, 175, 2228, 2102, 1630, 2134,
	2109, 1618, 2108, 2110, 1615, 2465, 1050, 595, 2114, 974,
	175, 2141, 614, 968, 581, 175, 881, 175, 1701, 175,
	175, 175, 1370, 175, 403, 175, 2133, 694, 928, 2166,
	1294, 2170, 1093, 1245, 2140, 596, 1977, 1976, 2135, 1237,
	2470, 582, 2137, 1975, 2169, 614, 2199, 2145, 411, 10,
	2257, 2186, 2132, 405, 2127, 2024, 723, 2191, 1091, 1092,
	2136, 459, 591, 406, 592, 2115, 175, 597, 2085, 1245,
	1245, 1001, 2138, 8, 1825, 1826, 1091, 1092, 1245, 1245,
	2032, 1094, 593, 695, 1023, 1022, 596, 1023, 1924, 4,
	1871, 1718, 1599, 1596, 695, 1595, 1528, 1145, 1024, 1889,
	1155, 1153, 397, 992, 695, 1093, 987, 984, 462, 970,
	932, 1245, 661, 2271, 460, 1327, 971, 1714, 597, 1389,
	2394, 2205, 773, 175, 175, 1276, 2211, 1991, 1811, 2332,
	694, 467, 1993, 2300, 1537, 1156, 1275, 463, 54, 1973,
	777, 2147, 1967, 594, 2226, 1244, 1610, 2234, 1977, 1976,
	588, 1609, 713, 1977, 1976, 1975, 2224, 474, 1230, 2009,
	1975, 2229, 1306, 799, 679, 464, 396, 1551, 1444, 859,
	801, 1242, 802, 2227, 1243, 397, 397, 175, 2239, 175,
	2249, 471, 175, 2235, 2233, 466, 2240, 1185, 789, 1240,
	175, 909, 1634, 172, 1500, 1518, 471, 1794, 1149, 769,
	781, 780, 1515, 2254, 923, 1719, 1902, 2236, 1355, 1682,
	1352, 1983, 407, 2256, 1822, 907, 2275, 1574, 1566, 2277,
	1977, 1976, 1562, 1004, 1040, 1135, 2070, 1975, 1635, 2259,
	955, 1908, 1195, 1656, 1032, 1363, 2274, 2080, 720, 719,
	953, 1300, 1667, 1128, 595, 2293, 1127, 706, 2341, 944,
	2299, 943, 1199, 2285, 2292, 1735, 1245, 2466, 731, 2348,
	1980, 175, 2388, 132, 694, 2261, 1568, 1568, 175, 2306,
	129, 131, 130, 1761, 81, 31, 175, 175, 694, 694,
	2276, 2318, 175, 1977, 1976, 740, 744, 175, 750, 2321,
	1975, 2311, 1091, 1092, 175, 30, 465, 100, 99, 2319,
	2314, 98, 2323, 2329, 397, 97, 2343, 96, 95, 2337,
	2330, 2331, 1244, 1244, 2328, 1094, 1207, 1276, 2317, 175,
	175, 590, 397, 596, 397, 2338, 397, 695, 1275, 2346,
	1215, 94, 2335, 93, 2345, 92, 91, 90, 89, 1093,
	175, 1568, 1568, 1568, 88, 87, 86, 2363, 694, 2365,
	2356, 468, 2366, 175, 85, 597, 84, 694, 694, 2359,
	172, 83, 2286, 2287, 610, 2368, 1276, 80, 172, 79,
	2369, 472, 78, 175, 614, 175, 77, 1275, 175, 28,
	471, 2374, 2375, 24, 104, 673, 23, 21, 22, 472,
	27, 26, 19, 18, 15, 9, 2384, 20, 2385, 2400,
	1099, 2401, 2402, 59, 614, 60, 58, 57, 175, 614,
	56, 11, 52, 2406, 172, 614, 2404, 614, 51, 614,
	50, 614, 2409, 614, 2410, 1977, 1976, 49, 695, 1245,
	175, 2421, 1975, 2403, 1338, 47, 175, 2435, 2433, 46,
	614, 614, 175, 2425, 45, 44, 2438, 2439, 2437, 7,
	103, 2434, 2443, 2441, 41, 2447, 854, 40, 6, 102,
	1109, 2449, 5, 115, 2390, 112, 114, 111, 1245, 588,
	113, 713, 116, 2456, 755, 108, 109, 110, 2457, 107,
	2464, 2463, 106, 37, 36, 35, 34, 397, 2, 1,
	0, 1276, 2469, 0, 0, 0, 0, 2473, 0, 1401,
	0, 0, 1275, 397, 0, 2253, 397, 0, 0, 0,
	1414, 0, 0, 0, 397, 0, 0, 0, 0, 397,
	0, 0, 473, 0, 0, 397, 0, 1276, 1276, 1441,
	0, 695, 0, 0, 1110, 0, 1276, 1276, 1275, 1275,
	1568, 1568, 2279, 0, 744, 0, 0, 1275, 1275, 0,
	0, 0, 0, 759, 860, 0, 0, 458, 1245, 750,
	0, 0, 1278, 0, 0, 0, 0, 0, 0, 1276,
	0, 0, 0, 0, 0, 0, 0, 459, 696, 0,
	1275, 0, 472, 2157, 0, 0, 2150, 0, 0, 0,
	0, 0, 0, 0, 2148, 0, 0, 472, 2152, 1568,
	1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568,
	1568, 1568, 1568, 1568, 1568, 1568, 1568, 1568, 2158, 1568,
	0, 0, 1781, 1782, 462, 0, 1277, 0, 1103, 1095,
	1096, 1097, 1098, 1100, 1101, 1244, 0, 1606, 0, 0,
	2151, 0, 0, 0, 755, 0, 0, 467, 0, 0,
	0, 0, 0, 463, 0, 397, 0, 1638, 0, 614,
	0, 0, 614, 0, 614, 695, 397, 397, 1644, 755,
	0, 0, 0, 0, 0, 0, 0, 1414, 0, 695,
	695, 464, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 1849, 1850,
	0, 466, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1276, 0, 0, 0, 0, 2153,
	0, 2154, 0, 0, 0, 1275, 2391, 2392, 2393, 1278,
	1278, 2397, 922, 0, 0, 0, 0, 0, 926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 695,
	0, 2156, 0, 0, 0, 0, 0, 0, 695, 695,
	0, 2159, 0, 0, 0, 0, 0, 0, 0, 1675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 472, 0, 0, 744, 397, 397, 397, 0, 397,
	0, 0, 0, 1277, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 1826, 397, 1843,
	1844, 1845, 465, 0, 0, 397, 0, 0, 0, 0,
	0, 397, 397, 0, 0, 397, 0, 1244, 0, 0,
	1401, 0, 0, 1401, 0, 0, 0, 0, 0, 2155,
	0, 1724, 0, 0, 0, 0, 0, 397, 1730, 1731,
	1241, 1241, 0, 1414, 0, 0, 1738, 731, 1064, 1840,
	0, 0, 1743, 1744, 1746, 1748, 1749, 468, 0, 0,
	0, 397, 0, 1756, 778, 74, 1244, 1759, 1037, 1037,
	0, 0, 0, 0, 442, 1042, 0, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 2001, 1275, 0,
	696, 0, 0, 0, 0, 38, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 1129, 1130, 1131, 1132, 1133, 1276, 0, 0, 0,
	1568, 1142, 0, 0, 0, 0, 0, 1275, 74, 0,
	0, 1150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 0, 1846, 0, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 1841, 2068, 0, 0, 0, 0,
	61, 0, 0, 0, 1568, 0, 1194, 62, 0, 63,
	0, 0, 666, 0, 0, 674, 0, 0, 0, 0,
	0, 1244, 0, 0, 744, 0, 1212, 0, 1212, 0,
	732, 74, 0, 0, 65, 0, 1276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1244, 1244, 0,
	0, 0, 0, 397, 0, 0, 1244, 1244, 1842, 0,
	0, 0, 1278, 1207, 0, 1207, 0, 614, 0, 0,
	397, 0, 0, 0, 1897, 0, 0, 0, 0, 397,
	696, 1906, 0, 0, 0, 0, 1568, 0, 397, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1675, 696, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1675, 0, 0, 0, 0, 0,
	1825, 1826, 0, 1843, 1844, 1845, 1277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 1837, 1838, 1839, 0, 133,
	1836, 1834, 1835, 1827, 1828, 1829, 1830, 1832, 1833, 101,
	0, 397, 0, 0, 0, 0, 0, 1401, 0, 0,
	0, 0, 0, 1840, 0, 0, 755, 1401, 135, 731,
	1353, 0, 1358, 1241, 0, 0, 0, 0, 1365, 0,
	0, 1972, 0, 0, 0, 731, 0, 0, 1404, 0,
	0, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	0, 744, 0, 0, 134, 0, 0, 750, 696, 0,
	0, 0, 127, 0, 0, 473, 0, 0, 1831, 128,
	0, 0, 0, 0, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 443, 0,
	0, 0, 0, 0, 1278, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 0, 1480, 1841, 1482,
	1483, 1484, 1485, 0, 0, 0, 2268, 0, 0, 0,
	0, 0, 0, 1278, 0, 0, 1508, 0, 0, 0,
	0, 0, 0, 1142, 0, 0, 0, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 674, 0,
	0, 1547, 1548, 0, 1414, 1564, 1207, 1576, 1578, 1583,
	1586, 1587, 1588, 2096, 0, 0, 0, 1636, 0, 0,
	2303, 0, 0, 0, 0, 0, 0, 0, 750, 750,
	397, 397, 1842, 0, 0, 0, 0, 1277, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 2121, 0, 0,
	0, 0, 0, 0, 0, 2123, 0, 0, 0, 0,
	0, 0, 696, 0, 0, 397, 0, 0, 755, 0,
	0, 0, 0, 0, 0, 0, 0, 1244, 0, 1401,
	755, 0, 0, 2143, 2144, 1414, 696, 696, 0, 0,
	0, 0, 0, 473, 1241, 0, 0, 0, 1278, 1972,
	755, 0, 0, 0, 0, 2177, 0, 2178, 0, 397,
	2180, 2181, 2358, 397, 0, 2185, 1244, 0, 0, 1837,
	1838, 1839, 0, 0, 1836, 1834, 1835, 1827, 1828, 1829,
	1830, 1832, 1833, 0, 1278, 1278, 0, 0, 0, 0,
	0, 0, 0, 1278, 1278, 0, 0, 1678, 750, 1680,
	0, 744, 0, 0, 0, 0, 2206, 0, 0, 0,
	0, 0, 1277, 0, 0, 0, 0, 0, 0, 0,
	1694, 0, 0, 0, 0, 0, 1278, 731, 0, 0,
	0, 0, 0, 731, 731, 0, 0, 731, 0, 0,
	0, 0, 473, 0, 0, 0, 0, 0, 1277, 1277,
	0, 0, 0, 0, 0, 0, 1244, 1277, 1277, 1729,
	0, 1972, 1037, 755, 1606, 0, 1972, 1042, 0, 1241,
	0, 0, 473, 0, 0, 0, 0, 0, 0, 0,
	473, 666, 0, 1754, 0, 0, 0, 0, 0, 0,
	1277, 0, 0, 0, 0, 1091, 1092, 0, 1111, 1112,
	1113, 1121, 1122, 1123, 0, 1241, 1241, 0, 0, 0,
	0, 1114, 0, 0, 1241, 1241, 0, 1414, 1094, 2260,
	0, 1125, 2262, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 1972, 74, 0, 0, 0, 0, 1060,
	0, 0, 1093, 0, 0, 0, 0, 1241, 1108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2294, 0,
	0, 0, 0, 0, 1765, 1766, 0, 0, 0, 0,
	1771, 1278, 0, 0, 0, 1138, 0, 1141, 0, 0,
	0, 0, 0, 0, 1146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	0, 397, 1790, 1099, 0, 0, 0, 0, 755, 1797,
	0, 0, 1801, 0, 0, 0, 2121, 2121, 0, 696,
	0, 0, 2334, 0, 1118, 1126, 0, 1401, 0, 1815,
	0, 0, 0, 0, 1207, 1277, 0, 0, 0, 0,
	0, 0, 1124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1880, 0, 1116, 0, 2350,
	2351, 1142, 0, 1109, 0, 0, 0, 0, 1583, 1583,
	1583, 0, 1891, 1825, 1826, 0, 1843, 1844, 1845, 0,
	397, 1194, 0, 0, 0, 0, 0, 0, 1115, 2007,
	1194, 0, 1241, 2373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 473, 0, 0,
	0, 0, 0, 2383, 1900, 755, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1916, 1110, 1972, 0,
	0, 0, 0, 0, 1278, 0, 1938, 0, 2334, 0,
	0, 0, 0, 1119, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 731, 0, 0, 0, 0, 0, 0,
	755, 0, 0, 1936, 0, 0, 397, 0, 1365, 0,
	0, 1831, 2440, 1278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 1948, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	1846, 1117, 666, 666, 1105, 1106, 1107, 1120, 1969, 1104,
	1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101, 0, 0,
	0, 1841, 0, 0, 0, 0, 1867, 1277, 0, 0,
	0, 732, 0, 1998, 0, 0, 1999, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 1060, 2004, 0,
	0, 0, 0, 1278, 0, 0, 0, 2013, 0, 0,
	74, 0, 0, 0, 0, 2017, 74, 0, 1916, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1241, 0, 0, 0, 2041, 0,
	0, 0, 2043, 0, 0, 1842, 0, 1091, 1092, 0,
	1111, 1112, 1113, 1121, 1122, 1123, 0, 0, 0, 0,
	0, 1498, 0, 1114, 0, 0, 0, 1277, 0, 0,
	1094, 0, 0, 1125, 674, 2074, 2075, 0, 0, 1141,
	0, 0, 0, 0, 2081, 2082, 2083, 0, 0, 0,
	0, 0, 1636, 731, 1093, 0, 0, 0, 0, 0,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1037, 0,
	0, 0, 0, 0, 1241, 0, 0, 731, 0, 0,
	1042, 0, 1837, 1838, 1839, 0, 0, 1836, 1834, 1835,
	1827, 1828, 1829, 1830, 1832, 1833, 74, 0, 74, 0,
	0, 0, 0, 0, 0, 1099, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 74, 0, 696, 0,
	0, 2179, 74, 0, 0, 2183, 1118, 1126, 0, 696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 696,
	0, 0, 0, 2167, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1116,
	0, 0, 0, 0, 0, 1109, 0, 0, 0, 0,
	0, 2190, 0, 0, 0, 2193, 2194, 0, 0, 0,
	2196, 0, 0, 0, 0, 0, 0, 2198, 0, 2200,
	1115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2216, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1119, 0, 0, 0, 732,
	0, 0, 0, 0, 0, 732, 732, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2269, 0, 0, 0, 0, 0, 0, 2252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 74, 0,
	0, 0, 0, 1117, 0, 0, 1105, 1106, 1107, 1120,
	0, 1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101,
	0, 0, 0, 2284, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 2295, 2296, 0,
	0, 0, 696, 2316, 1498, 0, 0, 1091, 1092, 0,
	1111, 1112, 1113, 1121, 1122, 1123, 0, 0, 0, 0,
	0, 0, 0, 1114, 1141, 0, 0, 0, 2308, 0,
	1094, 0, 0, 1125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 0, 0, 0,
	0, 0, 0, 0, 1093, 0, 0, 0, 0, 0,
	1108, 0, 0, 0, 473, 1091, 1092, 0, 1111, 1112,
	1113, 1121, 1122, 1123, 0, 0, 2340, 0, 0, 0,
	0, 1114, 2362, 0, 0, 0, 0, 0, 1094, 0,
	0, 1125, 0, 0, 0, 0, 0, 1141, 0, 0,
	0, 0, 0, 696, 0, 0, 0, 0, 0, 0,
	0, 0, 1093, 0, 0, 1099, 0, 0, 1108, 0,
	2387, 0, 0, 1091, 1092, 0, 1111, 1112, 1113, 1121,
	1122, 1123, 0, 0, 1042, 0, 1118, 1126, 0, 1114,
	74, 0, 0, 74, 0, 0, 1094, 0, 0, 1125,
	0, 0, 0, 674, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1116,
	1093, 0, 0, 1099, 0, 1109, 1108, 0, 1636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1118, 1126, 0, 0, 2422, 0,
	1115, 0, 0, 0, 2432, 2432, 696, 0, 0, 0,
	0, 0, 1124, 0, 0, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 0, 0, 0, 1116, 0, 0,
	0, 1099, 0, 1109, 0, 732, 0, 0, 2432, 0,
	0, 0, 0, 1825, 1826, 0, 1843, 1844, 1845, 1110,
	0, 0, 1118, 1126, 0, 0, 0, 473, 1115, 2006,
	0, 0, 0, 0, 0, 1119, 0, 0, 0, 0,
	1124, 0, 473, 0, 2432, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1116, 0, 0, 0, 0,
	0, 1109, 0, 0, 0, 0, 1840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 0, 0, 0,
	0, 0, 0, 1119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 0, 1105, 1106, 1107, 1120,
	696, 1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101,
	0, 1831, 0, 0, 696, 696, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 1110, 1091, 1092, 0, 1111,
	1112, 1113, 1121, 1122, 1123, 0, 0, 0, 0, 0,
	0, 1119, 1114, 0, 0, 0, 0, 0, 0, 1094,
	1846, 1117, 1125, 0, 1105, 1106, 1107, 1120, 0, 1104,
	1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101, 0, 0,
	0, 1841, 0, 1093, 0, 0, 1817, 0, 0, 1108,
	0, 0, 0, 0, 696, 0, 0, 0, 0, 0,
	0, 0, 0, 696, 696, 732, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1117,
	0, 0, 1105, 1106, 1107, 1120, 473, 1104, 1102, 1103,
	1095, 1096, 1097, 1098, 1100, 1101, 0, 0, 0, 732,
	2380, 0, 0, 0, 1099, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1118, 1126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1116, 0,
	0, 0, 0, 0, 1109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 1838, 1839, 0, 0, 1836, 1834, 1835,
	1827, 1828, 1829, 1830, 1832, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1110, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1119, 0, 0, 0, 0, 0,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
=======
const sqlLast = 32556

var sqlAct = [...]int{

	714, 2269, 2237, 1106, 2282, 2315, 2270, 2281, 2271, 1941,
	1271, 1142, 1279, 1733, 559, 1947, 2072, 2005, 2130, 1884,
	2158, 2181, 1750, 1294, 655, 2020, 1149, 1055, 1837, 853,
	690, 2098, 1255, 71, 633, 146, 2, 1752, 1477, 707,
	145, 1478, 1705, 145, 704, 1836, 920, 1487, 712, 916,
	1105, 1585, 145, 145, 1145, 1704, 1650, 1507, 393, 34,
	1570, 145, 1979, 405, 407, 392, 33, 145, 145, 1307,
	1010, 145, 1442, 1521, 145, 1399, 711, 566, 116, 1374,
	1303, 145, 1293, 388, 30, 1829, 1550, 903, 391, 18,
	389, 26, 385, 14, 387, 17, 386, 15, 1557, 408,
	1280, 772, 384, 13, 1208, 896, 390, 11, 383, 8,
	1794, 1262, 1551, 1256, 382, 4, 1210, 792, 381, 1503,
	1181, 1512, 583, 1384, 1362, 1439, 1359, 684, 1131, 934,
	145, 145, 897, 939, 379, 826, 145, 1297, 937, 116,
	145, 145, 828, 577, 1001, 821, 791, 1393, 1045, 1137,
	1041, 574, 1410, 1479, 564, 578, 683, 584, 1273, 1243,
	907, 670, 637, 1230, 625, 836, 835, 118, 834, 137,
	513, 1129, 119, 397, 569, 880, 558, 942, 535, 706,
	531, 141, 647, 664, 533, 623, 2021, 840, 879, 640,
	517, 529, 1638, 917, 136, 34, 1056, 2168, 1808, 1763,
	1809, 1139, 33, 1164, 2311, 1139, 1139, 929, 1276, 1396,
	1272, 563, 2292, 2291, 116, 1287, 1287, 1597, 2289, 2278,
	30, 2019, 929, 770, 563, 18, 1952, 26, 1232, 14,
	1287, 17, 2250, 15, 2228, 1457, 1263, 510, 2234, 13,
	1464, 1464, 1596, 11, 516, 8, 2233, 1797, 635, 1464,
	567, 4, 2213, 2210, 1231, 2212, 1457, 1397, 1797, 2199,
	2188, 128, 2019, 929, 1519, 2163, 2145, 128, 2019, 1457,
	1764, 1642, 2142, 956, 957, 929, 1643, 1920, 1862, 986,
	987, 988, 2141, 2140, 551, 2019, 929, 409, 2128, 550,
	131, 2019, 2106, 929, 1604, 929, 959, 1675, 1676, 990,
	1693, 1694, 1695, 1398, 1395, 1506, 2103, 2095, 115, 929,
	1287, 1474, 2094, 586, 115, 1287, 627, 2059, 1263, 135,
	1287, 958, 2037, 2034, 1113, 1287, 1457, 973, 1378, 2018,
	1675, 1676, 2019, 1992, 1269, 1859, 929, 117, 1287, 1828,
	1464, 892, 1267, 117, 60, 585, 61, 645, 674, 632,
	60, 1690, 61, 1675, 1676, 134, 1693, 1694, 1695, 1823,
	1641, 1804, 1267, 129, 1805, 1287, 580, 1287, 145, 2031,
	130, 63, 1743, 145, 651, 929, 131, 63, 136, 1400,
	1649, 583, 964, 1135, 806, 1722, 956, 957, 1723, 120,
	1997, 1720, 1719, 1565, 1287, 1287, 1140, 2022, 2293, 1718,
	1140, 1140, 1287, 983, 991, 135, 1681, 1690, 1639, 959,
	1603, 1287, 1573, 1604, 564, 1287, 584, 1547, 1466, 1456,
	929, 1287, 1457, 1286, 1266, 2280, 1287, 1267, 1697, 1237,
	950, 2276, 1236, 951, 958, 921, 981, 2244, 2205, 1681,
	2161, 134, 974, 2064, 2060, 1696, 2052, 2051, 2050, 129,
	956, 957, 2046, 2045, 1596, 847, 130, 1394, 2044, 2043,
	1978, 131, 1681, 1939, 1935, 1231, 1691, 1930, 1929, 1928,
	1870, 1755, 1742, 959, 1727, 1275, 1018, 1724, 1712, 1462,
	1370, 1703, 1674, 1671, 1670, 1668, 1655, 1654, 1577, 1607,
	135, 1407, 1406, 1405, 847, 964, 131, 1268, 958, 1691,
	1514, 1696, 131, 1260, 846, 1011, 122, 120, 145, 1675,
	1676, 954, 122, 1162, 919, 145, 975, 1157, 1138, 652,
	1148, 918, 1691, 1886, 2253, 135, 134, 2227, 2226, 145,
	2219, 135, 984, 2201, 2197, 665, 671, 583, 2185, 145,
	1692, 2153, 2125, 145, 145, 145, 1996, 145, 2117, 145,
	654, 2116, 2115, 2066, 145, 145, 145, 145, 145, 964,
	120, 134, 2057, 2025, 2017, 820, 574, 134, 1945, 129,
	1943, 1854, 584, 1692, 1848, 129, 130, 1847, 1844, 1834,
	1812, 1800, 130, 1787, 1785, 1608, 1371, 1702, 1664, 583,
	1663, 1731, 852, 1675, 1676, 120, 1692, 1660, 1635, 832,
	982, 120, 1630, 1364, 585, 1611, 985, 819, 969, 967,
	968, 960, 961, 962, 963, 965, 966, 1575, 1681, 145,
	145, 145, 145, 145, 584, 145, 1546, 1687, 1688, 1689,
	1046, 1049, 1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682,
	1683, 1449, 145, 145, 2184, 583, 145, 1404, 927, 1248,
	1154, 1141, 407, 1053, 145, 1039, 1038, 1037, 1036, 145,
	1035, 1034, 145, 145, 145, 802, 145, 901, 1677, 1678,
	1679, 1680, 1682, 1683, 145, 564, 1033, 1011, 1032, 936,
	584, 1031, 1030, 1687, 1688, 1689, 675, 408, 1686, 1684,
	1685, 1677, 1678, 1679, 1680, 1682, 1683, 1029, 651, 1028,
	824, 808, 1681, 1608, 1027, 1026, 790, 581, 1502, 782,
	1025, 1024, 1023, 1022, 116, 930, 1501, 1015, 1004, 120,
	787, 811, 564, 814, 960, 961, 962, 963, 965, 966,
	634, 895, 823, 823, 551, 900, 956, 957, 786, 550,
	777, 948, 668, 2065, 1563, 658, 2039, 1938, 1807, 843,
	844, 1729, 653, 1803, 924, 1249, 1002, 1459, 919, 959,
	585, 1007, 799, 887, 801, 1675, 1676, 2215, 1753, 2000,
	1810, 915, 1123, 1122, 1598, 580, 575, 1263, 851, 583,
	921, 145, 884, 1218, 958, 890, 145, 1726, 1725, 883,
	962, 963, 965, 966, 1051, 1614, 798, 1119, 955, 1052,
	583, 583, 881, 1216, 783, 800, 1020, 407, 1734, 1146,
	893, 2099, 585, 1272, 584, 1887, 145, 1062, 1646, 1385,
	1042, 1217, 875, 556, 665, 1396, 1147, 928, 1017, 574,
	574, 923, 1592, 621, 771, 584, 584, 1211, 1128, 1212,
	1962, 944, 408, 952, 1211, 941, 1212, 2296, 953, 1679,
	1680, 1682, 1683, 2302, 2295, 2258, 145, 1291, 1126, 1110,
	145, 876, 145, 145, 145, 145, 145, 145, 585, 2187,
	1136, 1152, 145, 1397, 2303, 409, 145, 145, 919, 1093,
	2088, 1467, 555, 145, 1739, 618, 1014, 612, 617, 613,
	870, 2179, 620, 145, 1994, 2178, 145, 1211, 719, 1212,
	1043, 1044, 1047, 2177, 2176, 1977, 677, 369, 1523, 145,
	1976, 1959, 1050, 1627, 1973, 1213, 1958, 562, 407, 1398,
	1395, 145, 1213, 1659, 1099, 1658, 1657, 145, 1625, 1120,
	145, 1677, 1678, 1679, 1680, 1682, 1683, 1229, 395, 799,
	1730, 145, 1425, 1127, 1656, 1523, 145, 116, 145, 1617,
	1107, 1522, 583, 408, 1544, 1543, 145, 2013, 1541, 407,
	1346, 370, 519, 1250, 1290, 1112, 1108, 882, 561, 644,
	1109, 1156, 1132, 1125, 1159, 1213, 1161, 546, 1124, 1453,
	520, 1251, 800, 1452, 1317, 1488, 398, 584, 2314, 1155,
	2186, 1254, 2014, 2313, 408, 1400, 1062, 1062, 1206, 539,
	1622, 1167, 585, 1168, 1198, 373, 1205, 507, 551, 403,
	1623, 551, 551, 1177, 1628, 399, 1178, 1179, 563, 547,
	1817, 1240, 1316, 585, 585, 2328, 554, 1361, 116, 1361,
	409, 1191, 2327, 1274, 1185, 1274, 619, 1818, 1581, 936,
	932, 856, 521, 400, 1188, 2132, 1385, 1192, 1193, 1194,
	1195, 1196, 1187, 1207, 785, 557, 2231, 1227, 1093, 1093,
	1202, 1203, 1783, 402, 1235, 553, 1964, 945, 872, 398,
	1241, 1245, 1246, 1394, 1586, 622, 1880, 1375, 857, 966,
	2273, 855, 1382, 1460, 1379, 1288, 1675, 1676, 1387, 1693,
	1694, 1695, 403, 2009, 2302, 2010, 1400, 867, 399, 1792,
	1412, 1412, 1423, 1278, 1434, 1504, 1505, 671, 1683, 1292,
	1446, 1447, 1448, 1289, 2247, 1209, 581, 576, 548, 1368,
	1304, 2308, 1624, 560, 1366, 2012, 400, 372, 371, 1626,
	1738, 1789, 116, 873, 868, 2015, 407, 1214, 2248, 145,
	1690, 409, 145, 522, 1214, 1372, 402, 1971, 1590, 145,
	1204, 1225, 1400, 1308, 1315, 145, 1369, 1224, 145, 145,
	1222, 145, 2324, 145, 145, 407, 145, 145, 2274, 2204,
	1139, 408, 1740, 1455, 401, 585, 1221, 1040, 2318, 1470,
	542, 1420, 409, 540, 1520, 145, 1483, 874, 1306, 2307,
	1472, 145, 2149, 1586, 2160, 1681, 1219, 1214, 1877, 1475,
	408, 374, 999, 1662, 549, 145, 145, 145, 1498, 543,
	1461, 1473, 145, 2011, 1220, 1244, 145, 1463, 1259, 544,
	518, 563, 523, 1471, 145, 2275, 1953, 145, 1496, 404,
	1940, 2272, 1965, 145, 407, 1524, 1047, 2301, 1050, 145,
	145, 1548, 375, 145, 1878, 795, 1553, 2299, 145, 2071,
	541, 145, 1044, 1043, 524, 1691, 1485, 401, 145, 2133,
	1468, 861, 780, 673, 1580, 839, 2055, 1916, 145, 408,
	145, 2331, 376, 2171, 377, 2170, 145, 116, 145, 699,
	1619, 906, 1360, 1567, 2123, 145, 1529, 1531, 1305, 2306,
	2084, 145, 583, 1490, 128, 1602, 1566, 1552, 1118, 1495,
	145, 1476, 145, 145, 1492, 1494, 1493, 1576, 1536, 564,
	796, 1539, 404, 2194, 1961, 797, 1500, 2316, 1774, 142,
	1400, 838, 363, 1770, 1554, 1588, 1606, 584, 1609, 1692,
	1594, 365, 366, 1486, 1515, 910, 1491, 823, 1062, 823,
	378, 115, 1116, 1153, 1143, 1343, 509, 142, 1517, 1527,
	515, 1555, 1556, 515, 1117, 1561, 913, 2325, 1876, 409,
	537, 1562, 1917, 1571, 1549, 1140, 1542, 2056, 1918, 1173,
	117, 1367, 908, 2317, 2330, 2238, 1528, 60, 1534, 61,
	1948, 911, 837, 2087, 1357, 838, 1201, 774, 409, 1545,
	2086, 2083, 1114, 2073, 2319, 2124, 909, 1613, 564, 1355,
	1093, 1612, 1648, 1584, 63, 1591, 1510, 839, 1560, 626,
	626, 1559, 1601, 1239, 1599, 363, 1687, 1688, 1689, 142,
	648, 1686, 1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683,
	1572, 1238, 795, 519, 511, 773, 508, 1633, 663, 662,
	561, 1174, 815, 1942, 1636, 2013, 837, 657, 2006, 1341,
	1344, 520, 2067, 656, 1579, 1980, 2004, 409, 912, 1795,
	2008, 138, 1652, 1653, 564, 583, 145, 3, 1735, 1620,
	1618, 1351, 2121, 1403, 2152, 583, 2054, 1706, 1853, 1352,
	2014, 1353, 1340, 145, 611, 1358, 145, 1816, 1669, 1629,
	145, 2085, 716, 1634, 1582, 1605, 1540, 1062, 2122, 1537,
	584, 1465, 2007, 1701, 574, 1265, 878, 1645, 877, 871,
	584, 145, 866, 521, 1714, 585, 865, 864, 863, 862,
	1062, 145, 145, 145, 859, 778, 661, 145, 1558, 131,
	145, 145, 145, 145, 145, 1707, 1199, 1190, 1021, 122,
	869, 1402, 145, 2268, 145, 145, 2235, 2082, 1969, 910,
	1771, 1967, 1960, 1749, 1489, 1482, 1226, 1223, 135, 1093,
	1215, 145, 1709, 1710, 1711, 1166, 1165, 145, 1163, 1160,
	913, 1158, 1744, 1867, 1751, 1747, 145, 145, 1342, 2110,
	2303, 2009, 1093, 2010, 2002, 1737, 1242, 1736, 1508, 2001,
	649, 1134, 1815, 1354, 134, 911, 650, 145, 145, 1806,
	1356, 646, 129, 1741, 643, 145, 1824, 841, 145, 130,
	614, 615, 1092, 2012, 522, 1830, 2112, 1813, 1533, 1759,
	1811, 1822, 630, 2015, 116, 1523, 1784, 1761, 380, 1786,
	1765, 1532, 394, 2223, 1835, 2022, 1766, 858, 1523, 1782,
	2207, 1821, 1756, 1757, 1530, 1758, 1981, 659, 845, 1538,
	1535, 1509, 363, 1843, 1728, 1799, 2229, 1842, 1856, 2069,
	1484, 1745, 1796, 145, 1798, 1793, 1872, 1873, 1874, 1481,
	1062, 1277, 912, 1802, 956, 957, 1061, 1605, 1228, 1111,
	1054, 842, 956, 957, 1826, 1841, 1827, 1832, 585, 1831,
	1814, 1845, 1819, 523, 2322, 949, 631, 1825, 585, 2329,
	2105, 2011, 512, 1986, 906, 959, 1062, 1062, 1860, 1675,
	1676, 956, 957, 1937, 1866, 1062, 1062, 1936, 1863, 849,
	848, 1888, 958, 1883, 849, 524, 1732, 1721, 1893, 1568,
	958, 1454, 1093, 1879, 1881, 1882, 1890, 1451, 1450, 1392,
	1008, 850, 2041, 2252, 2159, 1895, 1176, 1923, 1062, 1875,
	145, 1746, 1018, 583, 1016, 784, 538, 1944, 910, 2131,
	396, 1924, 1189, 860, 407, 145, 1564, 1247, 1093, 1093,
	2246, 2047, 1661, 2180, 2148, 1921, 1401, 1093, 1093, 913,
	1019, 53, 1950, 1839, 693, 2003, 1931, 537, 584, 1949,
	1833, 1092, 1092, 1296, 781, 908, 1295, 410, 145, 408,
	1121, 145, 715, 568, 911, 1411, 1309, 775, 537, 1951,
	1093, 407, 145, 145, 717, 1059, 718, 583, 363, 909,
	1955, 1060, 537, 813, 537, 1048, 816, 1956, 818, 705,
	1057, 669, 1281, 537, 537, 363, 830, 648, 1365, 1383,
	1644, 1012, 1984, 685, 1990, 145, 408, 697, 696, 145,
	1380, 776, 584, 1985, 1991, 1061, 1061, 1972, 1974, 1569,
	1975, 1983, 1589, 1308, 1891, 2023, 1995, 1993, 1172, 1987,
	1499, 1169, 1308, 1896, 1988, 1966, 1999, 545, 1672, 1843,
	2016, 912, 2033, 1842, 667, 1432, 2026, 145, 1424, 1421,
	2029, 807, 1843, 2028, 1062, 902, 1842, 1000, 515, 363,
	363, 889, 363, 1282, 626, 1927, 805, 1595, 1458, 894,
	1982, 1841, 1180, 629, 1998, 628, 803, 1115, 1469, 993,
	992, 363, 363, 616, 1841, 142, 2196, 794, 1968, 793,
	1970, 1144, 1773, 363, 2323, 2222, 2053, 1426, 940, 1963,
	2257, 363, 363, 363, 145, 946, 133, 132, 2214, 2157,
	583, 938, 1578, 142, 79, 32, 1093, 31, 98, 145,
	145, 145, 97, 96, 95, 94, 93, 92, 145, 91,
	145, 90, 145, 145, 145, 89, 585, 145, 145, 2075,
	88, 87, 2068, 86, 2081, 584, 2074, 409, 85, 2077,
	1843, 2070, 84, 83, 1842, 82, 81, 145, 534, 2076,
	78, 77, 76, 75, 29, 145, 25, 407, 145, 101,
	24, 34, 22, 23, 2078, 2102, 145, 28, 33, 27,
	20, 19, 1841, 407, 16, 2107, 10, 21, 58, 59,
	116, 57, 2104, 56, 409, 2113, 30, 55, 2111, 2108,
	585, 18, 408, 26, 12, 14, 936, 17, 2134, 15,
	9, 50, 49, 48, 2101, 13, 47, 2147, 408, 11,
	142, 8, 1843, 2129, 1843, 537, 1842, 4, 1842, 46,
	2119, 45, 145, 44, 43, 583, 7, 100, 2135, 41,
	40, 2137, 6, 145, 99, 2154, 2136, 5, 112, 109,
	111, 108, 110, 113, 1841, 1151, 1841, 1062, 2139, 2167,
	145, 105, 106, 107, 2166, 145, 2169, 104, 103, 38,
	584, 2165, 37, 145, 1675, 1676, 36, 583, 583, 35,
	1, 0, 145, 0, 0, 0, 0, 0, 1062, 0,
	0, 0, 0, 1092, 0, 537, 2192, 2183, 0, 537,
	2200, 142, 537, 537, 537, 537, 537, 2198, 2193, 564,
	0, 1200, 584, 584, 2203, 537, 537, 0, 0, 1093,
	2162, 145, 515, 2206, 2202, 1095, 583, 2190, 2191, 0,
	0, 2217, 626, 585, 0, 648, 0, 145, 145, 0,
	0, 2209, 2218, 2221, 0, 0, 0, 0, 363, 0,
	1093, 0, 0, 1062, 0, 2220, 0, 1061, 145, 2232,
	1258, 584, 145, 0, 676, 145, 363, 779, 2240, 1264,
	689, 0, 0, 1094, 0, 0, 0, 0, 2241, 0,
	1270, 0, 0, 1681, 407, 363, 0, 1285, 2254, 145,
	409, 0, 145, 2251, 0, 1298, 809, 810, 2256, 2174,
	2175, 0, 0, 2242, 2265, 2264, 409, 2266, 2267, 2263,
	2262, 2277, 0, 362, 145, 1093, 2287, 2279, 2230, 408,
	2243, 0, 0, 0, 1843, 2255, 1426, 1426, 1842, 145,
	1058, 0, 0, 0, 0, 0, 2294, 0, 2300, 2298,
	2249, 0, 2304, 1691, 0, 2173, 0, 2259, 2305, 0,
	0, 0, 1092, 0, 0, 2288, 1841, 0, 585, 2260,
	2261, 0, 1631, 1632, 0, 0, 2321, 0, 2312, 2320,
	0, 1675, 1676, 0, 0, 1092, 0, 0, 0, 0,
	0, 0, 2326, 0, 898, 898, 0, 2332, 583, 583,
	904, 2333, 2334, 0, 1426, 1426, 1426, 0, 0, 0,
	585, 585, 0, 0, 1095, 1095, 638, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1061, 1692, 0, 0,
	0, 0, 0, 584, 584, 956, 957, 0, 0, 0,
	1698, 1699, 1700, 0, 994, 995, 996, 997, 998, 1061,
	0, 0, 0, 0, 1006, 0, 0, 0, 959, 585,
	0, 0, 1094, 1094, 1013, 0, 0, 0, 0, 0,
	956, 957, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 958, 0, 0, 0, 0, 363, 973,
	1681, 1480, 0, 959, 0, 0, 0, 0, 648, 0,
	0, 0, 0, 0, 940, 0, 0, 537, 537, 0,
	537, 0, 363, 363, 0, 1497, 648, 409, 958, 1058,
	1058, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0, 0,
	0, 0, 0, 0, 363, 1092, 0, 0, 0, 0,
	1513, 0, 0, 0, 964, 0, 0, 0, 0, 0,
	1691, 0, 0, 0, 363, 363, 363, 0, 0, 0,
	0, 1298, 0, 0, 0, 363, 0, 0, 0, 0,
	0, 1092, 1092, 363, 0, 0, 363, 0, 0, 964,
	1092, 1092, 363, 0, 0, 0, 0, 0, 363, 363,
	0, 0, 363, 0, 0, 1426, 1426, 1258, 0, 1061,
	1258, 0, 0, 1170, 974, 1175, 0, 1574, 0, 0,
	0, 1182, 0, 1092, 0, 0, 0, 363, 0, 940,
	0, 585, 585, 0, 1692, 363, 0, 1593, 0, 0,
	0, 1851, 1852, 0, 363, 1061, 1061, 0, 0, 974,
	1513, 0, 0, 0, 1061, 1061, 0, 0, 0, 1151,
	0, 1151, 1610, 666, 1426, 1426, 1426, 1426, 1426, 1426,
	1426, 1426, 1426, 1426, 1426, 1426, 1426, 1426, 1426, 1426,
	1426, 1426, 1426, 0, 1426, 0, 0, 1061, 975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 0,
	1919, 0, 0, 975, 0, 0, 1686, 1684, 1685, 1677,
	1678, 1679, 1680, 1682, 1683, 0, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 0, 1345,
	0, 1347, 1348, 1349, 1350, 0, 1095, 0, 0, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 1373, 0,
	969, 967, 968, 960, 961, 962, 963, 965, 966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1408, 1409, 0, 0, 1422, 0, 1433, 1435, 1440,
	1443, 1444, 1445, 0, 1094, 969, 967, 968, 960, 961,
	962, 963, 965, 966, 0, 1513, 0, 0, 0, 666,
	0, 0, 0, 1061, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 0, 0, 363, 829, 0, 0, 1754,
	0, 0, 0, 0, 0, 0, 0, 694, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	363, 1768, 1769, 0, 0, 0, 1298, 0, 0, 1775,
	1776, 1778, 1780, 1781, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 1790, 363, 0, 0, 0, 0, 0,
	886, 829, 0, 666, 0, 0, 0, 0, 0, 72,
	363, 0, 0, 0, 0, 1095, 1258, 0, 0, 0,
	0, 0, 638, 925, 0, 648, 1258, 0, 0, 914,
	0, 0, 0, 0, 935, 0, 0, 0, 1095, 0,
	0, 0, 666, 943, 943, 128, 363, 363, 0, 0,
	0, 0, 0, 0, 1298, 0, 0, 1151, 1838, 0,
	0, 0, 1092, 1094, 552, 0, 0, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 639, 72, 0, 1094, 0, 0, 0,
	0, 1426, 115, 1092, 0, 0, 0, 898, 0, 0,
	1675, 1676, 904, 1693, 1694, 1695, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 2030, 0, 0, 0,
	1058, 117, 0, 0, 0, 0, 1061, 2126, 60, 0,
	61, 1426, 0, 0, 0, 0, 0, 0, 1587, 0,
	0, 0, 0, 1058, 0, 0, 0, 128, 0, 0,
	0, 0, 0, 1600, 1690, 63, 0, 1061, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 2151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1095, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 1946,
	0, 0, 0, 0, 0, 0, 1615, 1616, 0, 1681,
	0, 0, 1621, 0, 1957, 0, 0, 0, 0, 0,
	0, 0, 1061, 117, 1095, 1095, 0, 0, 0, 1426,
	60, 0, 61, 1095, 1095, 0, 1094, 0, 0, 0,
	0, 0, 0, 0, 1640, 0, 0, 363, 1696, 0,
	648, 1647, 0, 0, 1651, 0, 0, 63, 0, 0,
	0, 1258, 648, 0, 0, 2208, 1095, 0, 0, 1691,
	1665, 0, 1094, 1094, 0, 0, 0, 0, 0, 0,
	131, 1094, 1094, 0, 1838, 0, 0, 0, 0, 638,
	122, 0, 0, 1058, 648, 0, 1006, 1838, 648, 0,
	0, 0, 1440, 1440, 1440, 0, 0, 1261, 0, 135,
	0, 0, 0, 0, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1283, 0, 565, 1058,
	1058, 0, 0, 0, 0, 0, 2048, 0, 1058, 1058,
	0, 0, 0, 1692, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	130, 0, 0, 0, 0, 0, 0, 1760, 0, 0,
	0, 1058, 1182, 0, 0, 0, 0, 0, 0, 120,
	0, 0, 131, 0, 0, 0, 1197, 0, 0, 0,
	0, 0, 122, 1480, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2079, 2080,
	1298, 135, 1095, 0, 0, 0, 0, 2089, 0, 2090,
	0, 363, 2092, 2093, 0, 1801, 2096, 363, 0, 0,
	1687, 1688, 1689, 0, 0, 1686, 1684, 1685, 1677, 1678,
	1679, 1680, 1682, 1683, 2109, 0, 648, 134, 0, 0,
	0, 0, 898, 0, 2118, 129, 0, 2120, 0, 0,
	1094, 0, 130, 0, 904, 363, 0, 1838, 0, 1838,
	1675, 1676, 0, 1693, 1694, 1695, 0, 1846, 0, 0,
	1849, 120, 0, 1850, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 1675, 1676, 1855, 1693, 1694, 1695, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 1857,
	0, 0, 1868, 0, 552, 1600, 0, 1058, 0, 666,
	0, 363, 956, 957, 1690, 976, 977, 978, 986, 987,
	988, 0, 1298, 0, 0, 1892, 0, 0, 979, 1894,
	1675, 1676, 0, 829, 829, 959, 0, 1690, 990, 2182,
	0, 0, 0, 0, 1258, 0, 0, 0, 0, 0,
	0, 0, 2189, 0, 0, 1511, 0, 0, 0, 0,
	958, 1151, 1925, 1926, 0, 0, 973, 0, 0, 1681,
	0, 1932, 1933, 1934, 72, 1516, 829, 1518, 0, 922,
	0, 0, 0, 0, 1690, 0, 666, 0, 0, 0,
	0, 0, 1681, 0, 829, 0, 0, 666, 0, 0,
	363, 0, 0, 638, 0, 1095, 0, 0, 1696, 638,
	638, 0, 0, 638, 1675, 1676, 2224, 2225, 0, 0,
	0, 964, 0, 0, 1003, 0, 1005, 0, 0, 1691,
	0, 1696, 0, 1009, 0, 0, 1095, 2239, 1583, 1681,
	0, 648, 983, 991, 363, 0, 935, 0, 0, 0,
	0, 0, 1691, 1094, 0, 935, 0, 0, 0, 1838,
	989, 0, 0, 0, 0, 0, 0, 0, 2182, 0,
	0, 363, 0, 0, 0, 981, 0, 0, 0, 0,
	0, 974, 0, 0, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 0, 0, 2024, 0, 0, 1691,
	0, 1095, 0, 1692, 0, 0, 980, 0, 2297, 2032,
	1058, 0, 0, 2035, 2036, 0, 0, 0, 2038, 0,
	0, 0, 0, 1681, 0, 2040, 1692, 2042, 0, 0,
	0, 956, 957, 0, 976, 977, 978, 986, 987, 988,
	0, 1058, 0, 2049, 0, 0, 0, 979, 0, 1094,
	0, 0, 0, 0, 959, 975, 0, 990, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 984, 0, 1692, 0, 0, 2058, 0, 552, 958,
	0, 552, 552, 1691, 0, 973, 0, 0, 0, 0,
	1687, 1688, 1689, 956, 957, 1686, 1684, 1685, 1677, 1678,
	1679, 1680, 1682, 1683, 0, 0, 1058, 72, 0, 0,
	0, 0, 0, 1687, 1688, 1689, 959, 0, 1686, 1684,
	1685, 1677, 1678, 1679, 1680, 1682, 1683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2100, 0, 0, 982,
	964, 958, 970, 971, 972, 985, 639, 969, 967, 968,
	960, 961, 962, 963, 965, 966, 1748, 1692, 0, 0,
	0, 983, 991, 2061, 0, 1686, 1684, 1685, 1677, 1678,
	1679, 1680, 1682, 1683, 0, 0, 0, 0, 0, 989,
	72, 1762, 72, 0, 0, 0, 2143, 2144, 72, 0,
	0, 1767, 0, 0, 981, 0, 0, 0, 0, 0,
	974, 0, 964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 0, 2156, 0, 0,
	0, 0, 0, 0, 0, 980, 0, 0, 0, 1363,
	0, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2172, 0, 0, 0, 956, 957, 0, 0,
	1684, 1685, 1677, 1678, 1679, 1680, 1682, 1683, 0, 0,
	0, 0, 974, 0, 0, 0, 0, 1283, 638, 959,
	0, 904, 0, 0, 975, 0, 0, 0, 0, 956,
	957, 2195, 976, 977, 978, 986, 987, 988, 0, 0,
	984, 0, 72, 0, 958, 979, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 990, 0, 0, 0, 0,
	0, 0, 956, 957, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	0, 0, 0, 973, 0, 959, 975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 964, 0, 0, 982, 0,
	958, 970, 971, 972, 985, 0, 969, 967, 968, 960,
	961, 962, 963, 965, 966, 0, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 0, 0, 964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2286, 2286, 0, 0, 0, 0, 983,
	991, 0, 0, 0, 2290, 974, 0, 0, 0, 0,
	0, 964, 0, 0, 0, 0, 0, 989, 0, 967,
	968, 960, 961, 962, 963, 965, 966, 72, 0, 2286,
	128, 0, 981, 0, 0, 0, 0, 0, 974, 0,
	0, 39, 123, 0, 0, 72, 0, 0, 72, 0,
	0, 0, 0, 0, 51, 114, 0, 0, 638, 0,
	639, 0, 0, 980, 0, 0, 639, 639, 2286, 125,
	639, 974, 0, 0, 0, 42, 0, 115, 0, 975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 0, 54, 565, 0, 0, 117, 0, 0, 126,
	0, 0, 975, 60, 0, 61, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 984, 0,
	0, 0, 0, 0, 62, 0, 0, 0, 0, 0,
	63, 0, 0, 64, 0, 975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1363, 968, 960, 961, 962, 963, 965, 966,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1005, 0, 0, 0, 982, 0, 0, 970,
	971, 972, 985, 0, 969, 967, 968, 960, 961, 962,
	963, 965, 966, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 65, 0, 0, 0, 0, 0, 66,
	0, 0, 2091, 0, 0, 0, 0, 0, 2097, 0,
	960, 961, 962, 963, 965, 966, 0, 0, 73, 74,
	67, 0, 68, 0, 69, 0, 127, 0, 1005, 0,
	0, 70, 0, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 80, 0, 0, 122, 2127, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 72,
	0, 0, 72, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 0, 0, 0, 0, 0, 0, 0,
	134, 0, 2164, 0, 0, 0, 0, 0, 129, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 72, 120, 0, 72, 0, 0, 0,
	0, 0, 0, 0, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2216, 0, 0, 0, 639, 0, 0, 0, 0,
>>>>>>> Fix build errors
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 713, 702, 703, 700, 701, 692, 0,
	0, 0, 0, 0, 0, 2245, 0, 0, 0, 147,
	148, 1389, 149, 0, 0, 0, 0, 730, 695, 0,
	0, 0, 150, 151, 152, 307, 745, 309, 746, 153,
	747, 748, 1283, 154, 313, 314, 155, 156, 157, 698,
	729, 749, 750, 317, 0, 158, 741, 0, 721, 0,
	159, 160, 161, 0, 162, 0, 163, 164, 165, 0,
	412, 166, 167, 168, 0, 722, 723, 725, 0, 724,
	726, 169, 170, 364, 171, 751, 172, 752, 753, 0,
	173, 0, 174, 0, 175, 1390, 0, 744, 177, 0,
	178, 0, 0, 0, 686, 179, 180, 181, 731, 732,
	709, 0, 0, 182, 183, 754, 755, 756, 0, 184,
	0, 185, 0, 0, 413, 186, 0, 187, 742, 0,
	329, 0, 188, 189, 190, 191, 192, 738, 740, 415,
	0, 196, 0, 193, 0, 414, 194, 757, 195, 758,
	759, 760, 761, 762, 0, 720, 0, 416, 197, 198,
	199, 417, 200, 201, 202, 0, 204, 203, 0, 743,
	418, 205, 419, 0, 206, 639, 0, 207, 0, 208,
	209, 210, 212, 340, 211, 420, 213, 214, 216, 215,
	681, 0, 710, 739, 217, 763, 218, 219, 0, 220,
	0, 72, 221, 0, 0, 222, 343, 421, 223, 422,
	733, 224, 225, 226, 227, 228, 0, 229, 734, 230,
	346, 231, 0, 232, 233, 234, 235, 236, 237, 764,
	238, 239, 0, 240, 241, 242, 243, 244, 246, 247,
	245, 248, 249, 250, 251, 0, 252, 423, 253, 254,
	687, 255, 0, 259, 260, 261, 262, 0, 264, 349,
	263, 265, 266, 727, 267, 256, 257, 268, 424, 269,
	765, 351, 270, 0, 277, 271, 272, 258, 273, 276,
	766, 274, 275, 735, 0, 278, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 354, 767, 768, 0, 0,
	286, 287, 736, 737, 708, 288, 289, 290, 291, 0,
	0, 292, 293, 294, 295, 728, 296, 0, 359, 297,
	298, 299, 360, 769, 1388, 0, 300, 0, 0, 0,
	72, 301, 302, 303, 304, 305, 682, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 678, 679, 1391,
	0, 0, 0, 0, 0, 0, 688, 1386, 0, 0,
	0, 0, 0, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1117, 0, 0, 1105, 1106, 1107, 1120, 0,
	1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101, 0,
	0, 0, 0, 2361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 72, 0, 147,
	148, 425, 149, 426, 427, 428, 429, 306, 430, 431,
	432, 433, 150, 151, 152, 307, 308, 309, 310, 153,
	311, 312, 434, 154, 313, 314, 155, 156, 157, 435,
	436, 315, 316, 317, 437, 158, 318, 438, 411, 439,
	159, 160, 161, 1005, 162, 440, 163, 164, 165, 441,
	412, 166, 167, 168, 442, 443, 445, 444, 446, 447,
	448, 169, 170, 364, 171, 319, 172, 320, 321, 449,
	173, 450, 174, 451, 175, 452, 453, 176, 177, 454,
	178, 455, 0, 456, 322, 179, 180, 181, 323, 324,
	457, 458, 459, 182, 183, 325, 326, 327, 0, 184,
	460, 185, 461, 462, 413, 186, 463, 187, 328, 464,
	329, 465, 188, 189, 190, 191, 192, 330, 331, 415,
	466, 196, 467, 193, 468, 414, 194, 332, 195, 333,
	334, 335, 336, 337, 469, 338, 470, 416, 197, 198,
	199, 417, 200, 201, 202, 471, 204, 203, 472, 339,
	418, 205, 419, 473, 206, 474, 475, 207, 0, 208,
	209, 210, 212, 340, 211, 420, 213, 214, 216, 215,
	476, 477, 478, 341, 217, 342, 218, 219, 479, 220,
	480, 481, 221, 482, 483, 222, 343, 421, 223, 422,
	344, 224, 225, 226, 227, 228, 484, 229, 345, 230,
	346, 231, 485, 232, 233, 234, 235, 236, 237, 347,
	238, 239, 486, 240, 241, 242, 243, 244, 246, 247,
	245, 248, 249, 250, 251, 487, 252, 423, 253, 254,
	348, 255, 0, 259, 260, 261, 262, 488, 264, 349,
	263, 265, 266, 489, 267, 256, 257, 268, 424, 269,
	350, 351, 270, 490, 277, 271, 272, 258, 273, 276,
	352, 274, 275, 353, 491, 278, 492, 279, 280, 281,
	282, 283, 284, 285, 493, 354, 355, 356, 494, 495,
	286, 287, 357, 358, 496, 288, 289, 290, 291, 497,
	498, 292, 293, 294, 295, 499, 296, 500, 359, 297,
	298, 299, 360, 361, 501, 502, 300, 503, 504, 505,
	506, 301, 302, 303, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 0, 1252, 0, 0, 0, 0, 0,
	0, 1253, 147, 148, 425, 149, 426, 427, 428, 429,
	306, 430, 431, 432, 433, 150, 151, 152, 307, 308,
	309, 310, 153, 311, 312, 434, 154, 313, 314, 155,
	156, 157, 435, 436, 315, 316, 317, 437, 158, 318,
	438, 411, 439, 159, 160, 161, 0, 162, 440, 163,
	164, 165, 441, 412, 166, 167, 168, 442, 443, 445,
	444, 446, 447, 448, 169, 170, 364, 171, 319, 172,
	320, 321, 449, 173, 450, 174, 451, 175, 452, 453,
	176, 177, 454, 178, 455, 0, 456, 322, 179, 180,
	181, 323, 324, 457, 458, 459, 182, 183, 325, 326,
	327, 0, 184, 460, 185, 461, 462, 413, 186, 463,
	187, 328, 464, 329, 465, 188, 189, 190, 191, 192,
	330, 331, 415, 466, 196, 467, 193, 468, 414, 194,
	332, 195, 333, 334, 335, 336, 337, 469, 338, 470,
	416, 197, 198, 199, 417, 200, 201, 202, 471, 204,
	203, 472, 339, 418, 205, 419, 473, 206, 474, 475,
	207, 0, 208, 209, 210, 212, 340, 211, 420, 213,
	214, 216, 215, 476, 477, 478, 341, 217, 342, 218,
	219, 479, 220, 480, 481, 221, 482, 483, 222, 343,
	421, 223, 422, 344, 224, 225, 226, 227, 228, 484,
	229, 345, 230, 346, 231, 485, 232, 233, 234, 235,
	236, 237, 347, 238, 239, 486, 240, 241, 242, 243,
	244, 246, 247, 245, 248, 249, 250, 251, 487, 252,
	423, 253, 254, 348, 255, 0, 259, 260, 261, 262,
	488, 264, 349, 263, 265, 266, 489, 267, 256, 257,
	268, 424, 269, 350, 351, 270, 490, 277, 271, 272,
	258, 273, 276, 352, 274, 275, 353, 491, 278, 492,
	279, 280, 281, 282, 283, 284, 285, 493, 354, 355,
	356, 494, 495, 286, 287, 357, 358, 496, 288, 289,
	290, 291, 497, 498, 292, 293, 294, 295, 499, 296,
	500, 359, 297, 298, 299, 360, 361, 501, 502, 300,
	503, 504, 505, 506, 301, 302, 303, 304, 305, 0,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 147, 148,
	425, 149, 426, 427, 428, 429, 306, 430, 431, 432,
	433, 150, 151, 152, 307, 308, 309, 310, 153, 311,
	312, 434, 154, 313, 314, 155, 156, 157, 435, 436,
	315, 316, 317, 437, 158, 318, 438, 411, 439, 159,
	160, 161, 0, 162, 440, 163, 164, 165, 441, 412,
	166, 167, 168, 442, 443, 445, 444, 446, 447, 448,
	169, 170, 364, 171, 319, 172, 320, 321, 449, 173,
	450, 174, 451, 175, 452, 453, 176, 177, 454, 178,
	455, 0, 456, 322, 179, 180, 181, 323, 324, 457,
	458, 459, 182, 183, 325, 326, 327, 0, 184, 460,
	185, 461, 462, 413, 186, 463, 187, 328, 464, 329,
	465, 188, 189, 190, 191, 192, 330, 331, 415, 466,
	196, 467, 193, 468, 414, 194, 332, 195, 333, 334,
	335, 336, 337, 469, 338, 470, 416, 197, 198, 199,
	417, 200, 201, 202, 471, 204, 203, 472, 339, 418,
	205, 419, 473, 206, 474, 475, 207, 0, 208, 209,
	210, 212, 340, 211, 420, 213, 214, 216, 215, 476,
	477, 478, 341, 217, 342, 218, 219, 479, 220, 480,
	481, 221, 482, 483, 222, 343, 421, 223, 422, 344,
	224, 225, 226, 227, 228, 484, 229, 345, 230, 346,
	231, 485, 232, 233, 234, 235, 236, 237, 347, 238,
	239, 486, 240, 241, 242, 243, 244, 246, 247, 245,
	248, 249, 250, 251, 487, 252, 423, 253, 254, 348,
	255, 0, 259, 260, 261, 262, 488, 264, 349, 263,
	265, 266, 489, 267, 256, 257, 268, 424, 269, 350,
	351, 270, 490, 277, 271, 272, 258, 273, 276, 352,
	274, 275, 353, 491, 278, 492, 279, 280, 281, 282,
	283, 284, 285, 493, 354, 355, 356, 494, 495, 286,
	287, 357, 358, 496, 288, 289, 290, 291, 497, 498,
	292, 293, 294, 295, 499, 296, 500, 359, 297, 298,
	299, 360, 361, 501, 502, 300, 503, 504, 505, 506,
	301, 302, 303, 304, 305, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 931, 0,
	0, 147, 148, 425, 149, 426, 427, 428, 429, 306,
	430, 431, 432, 433, 150, 151, 152, 307, 308, 309,
	310, 153, 311, 312, 434, 154, 313, 314, 155, 156,
	157, 435, 436, 315, 316, 317, 437, 158, 318, 438,
	411, 439, 159, 160, 161, 0, 162, 440, 163, 164,
	165, 441, 412, 166, 167, 168, 442, 443, 445, 444,
	446, 447, 448, 169, 170, 364, 171, 319, 172, 320,
	321, 449, 173, 450, 174, 451, 175, 452, 453, 176,
	177, 454, 178, 455, 0, 456, 322, 179, 180, 181,
	323, 324, 457, 458, 459, 182, 183, 325, 326, 327,
	0, 184, 460, 185, 461, 462, 413, 186, 463, 187,
	328, 464, 329, 465, 188, 189, 190, 191, 192, 330,
	331, 415, 466, 196, 467, 193, 468, 414, 194, 332,
	195, 333, 334, 335, 336, 337, 469, 338, 470, 416,
	197, 198, 199, 417, 200, 201, 202, 471, 204, 203,
	472, 339, 418, 205, 419, 473, 206, 474, 475, 207,
	0, 208, 209, 210, 212, 340, 211, 420, 213, 214,
	216, 215, 476, 477, 478, 341, 217, 342, 218, 219,
	479, 220, 480, 481, 221, 482, 483, 222, 343, 421,
	223, 422, 344, 224, 225, 226, 227, 228, 484, 229,
	345, 230, 346, 231, 485, 232, 233, 234, 235, 236,
	237, 347, 238, 239, 486, 240, 241, 242, 243, 244,
	246, 247, 245, 248, 249, 250, 251, 487, 252, 423,
	253, 254, 348, 255, 0, 259, 260, 261, 262, 488,
	264, 349, 263, 265, 266, 489, 267, 256, 257, 268,
	424, 269, 350, 351, 270, 490, 277, 271, 272, 258,
	273, 276, 352, 274, 275, 353, 491, 278, 492, 279,
	280, 281, 282, 283, 284, 285, 493, 354, 355, 356,
	494, 495, 286, 287, 357, 358, 496, 288, 289, 290,
	291, 497, 498, 292, 293, 294, 295, 499, 296, 500,
	359, 297, 298, 299, 360, 361, 501, 502, 300, 503,
	504, 505, 506, 301, 302, 303, 304, 305, 713, 702,
	703, 700, 701, 692, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 148, 0, 149, 0, 0,
	0, 0, 730, 695, 0, 0, 0, 150, 151, 152,
	307, 745, 309, 746, 153, 747, 748, 0, 154, 313,
	314, 155, 156, 157, 698, 729, 749, 750, 317, 0,
	158, 741, 0, 721, 0, 159, 160, 161, 0, 162,
	0, 163, 164, 165, 0, 412, 166, 167, 168, 0,
	722, 723, 725, 0, 724, 726, 169, 170, 364, 171,
	751, 172, 752, 753, 905, 173, 0, 174, 0, 175,
	0, 0, 744, 177, 0, 178, 0, 0, 0, 686,
	179, 180, 181, 731, 732, 709, 0, 0, 182, 183,
	754, 755, 756, 0, 184, 0, 185, 0, 0, 413,
	186, 0, 187, 742, 0, 329, 0, 188, 189, 190,
	191, 192, 738, 740, 415, 0, 196, 0, 193, 0,
	414, 194, 757, 195, 758, 759, 760, 761, 762, 0,
	720, 0, 416, 197, 198, 199, 417, 200, 201, 202,
	0, 204, 203, 0, 743, 418, 205, 419, 0, 206,
	0, 0, 207, 0, 208, 209, 210, 212, 340, 211,
	420, 213, 214, 216, 215, 681, 0, 710, 739, 217,
	763, 218, 219, 0, 220, 0, 0, 221, 0, 0,
	222, 343, 421, 223, 422, 733, 224, 225, 226, 227,
	228, 0, 229, 734, 230, 346, 231, 0, 232, 233,
	234, 235, 236, 237, 764, 238, 239, 0, 240, 241,
	242, 243, 244, 246, 247, 245, 248, 249, 250, 251,
	0, 252, 423, 253, 254, 687, 255, 0, 259, 260,
	261, 262, 131, 264, 349, 263, 265, 266, 727, 267,
	256, 257, 268, 424, 269, 765, 351, 270, 0, 277,
	271, 272, 258, 273, 276, 766, 274, 275, 735, 0,
	278, 135, 279, 280, 281, 282, 283, 284, 285, 0,
	354, 767, 768, 0, 0, 286, 287, 736, 737, 708,
	288, 289, 290, 291, 0, 0, 292, 293, 294, 295,
	728, 296, 0, 359, 297, 298, 299, 672, 769, 0,
	0, 300, 0, 0, 0, 129, 301, 302, 303, 304,
	305, 682, 130, 0, 0, 0, 0, 680, 0, 0,
	0, 0, 678, 679, 713, 702, 703, 700, 701, 692,
	0, 688, 0, 0, 0, 0, 0, 0, 691, 0,
	147, 148, 0, 149, 0, 0, 0, 0, 730, 695,
	0, 0, 0, 150, 151, 152, 307, 745, 309, 746,
	153, 747, 748, 0, 154, 313, 314, 155, 156, 157,
	698, 729, 749, 750, 317, 0, 158, 741, 0, 721,
	0, 159, 160, 161, 0, 162, 0, 163, 164, 165,
	0, 412, 166, 167, 168, 0, 722, 723, 725, 0,
	724, 726, 169, 170, 364, 171, 751, 172, 752, 753,
	0, 173, 0, 174, 0, 175, 0, 0, 744, 177,
	0, 178, 0, 0, 0, 686, 179, 180, 181, 731,
	732, 709, 0, 0, 182, 183, 754, 755, 756, 0,
	184, 0, 185, 0, 0, 413, 186, 0, 187, 742,
	0, 329, 0, 188, 189, 190, 191, 192, 738, 740,
	415, 0, 196, 0, 193, 0, 414, 194, 757, 195,
	758, 759, 760, 761, 762, 0, 720, 0, 416, 197,
	198, 199, 417, 200, 201, 202, 0, 204, 203, 0,
	743, 418, 205, 419, 0, 206, 0, 0, 207, 0,
	208, 209, 210, 212, 340, 211, 420, 213, 214, 216,
	215, 681, 0, 710, 739, 217, 763, 218, 219, 0,
	220, 0, 0, 221, 0, 0, 222, 343, 421, 223,
	422, 733, 224, 225, 226, 227, 228, 0, 229, 734,
	230, 346, 231, 0, 232, 233, 234, 235, 236, 237,
	764, 238, 239, 0, 240, 241, 242, 243, 244, 246,
	247, 245, 248, 249, 250, 251, 0, 252, 423, 253,
	254, 687, 255, 0, 259, 260, 261, 262, 131, 264,
	349, 263, 265, 266, 727, 267, 256, 257, 268, 424,
	269, 765, 351, 270, 0, 277, 271, 272, 258, 273,
	276, 766, 274, 275, 735, 0, 278, 135, 279, 280,
	281, 282, 283, 284, 285, 0, 354, 767, 768, 0,
	0, 286, 287, 736, 737, 708, 288, 289, 290, 291,
	0, 0, 292, 293, 294, 295, 728, 296, 0, 359,
	297, 298, 299, 672, 769, 0, 0, 300, 0, 0,
	0, 129, 301, 302, 303, 304, 305, 682, 130, 0,
	0, 0, 0, 680, 0, 0, 0, 0, 678, 679,
	713, 702, 703, 700, 701, 692, 0, 688, 0, 0,
	0, 0, 0, 0, 691, 0, 147, 148, 0, 149,
	0, 0, 0, 0, 730, 695, 0, 0, 0, 150,
	151, 152, 307, 745, 309, 746, 153, 747, 748, 1436,
	154, 313, 314, 155, 156, 157, 698, 729, 749, 750,
	317, 0, 158, 741, 0, 721, 0, 159, 160, 161,
	0, 162, 0, 163, 164, 165, 0, 412, 166, 167,
	168, 0, 722, 723, 725, 0, 724, 726, 169, 170,
	364, 171, 751, 172, 752, 753, 0, 173, 0, 174,
	0, 175, 0, 0, 744, 177, 0, 178, 0, 0,
	0, 686, 179, 180, 181, 731, 732, 709, 0, 0,
	182, 183, 754, 755, 756, 0, 184, 0, 185, 0,
	1441, 413, 186, 0, 187, 742, 0, 329, 0, 188,
	189, 190, 191, 192, 738, 740, 415, 0, 196, 0,
	193, 0, 414, 194, 757, 195, 758, 759, 760, 761,
	762, 0, 720, 0, 416, 197, 198, 199, 417, 200,
	201, 202, 0, 204, 203, 1437, 743, 418, 205, 419,
	0, 206, 0, 0, 207, 0, 208, 209, 210, 212,
	340, 211, 420, 213, 214, 216, 215, 681, 0, 710,
	739, 217, 763, 218, 219, 0, 220, 0, 0, 221,
	0, 0, 222, 343, 421, 223, 422, 733, 224, 225,
	226, 227, 228, 0, 229, 734, 230, 346, 231, 0,
	232, 233, 234, 235, 236, 237, 764, 238, 239, 0,
	240, 241, 242, 243, 244, 246, 247, 245, 248, 249,
	250, 251, 0, 252, 423, 253, 254, 687, 255, 0,
	259, 260, 261, 262, 0, 264, 349, 263, 265, 266,
	727, 267, 256, 257, 268, 424, 269, 765, 351, 270,
	0, 277, 271, 272, 258, 273, 276, 766, 274, 275,
	735, 0, 278, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 354, 767, 768, 0, 1438, 286, 287, 736,
	737, 708, 288, 289, 290, 291, 0, 0, 292, 293,
	294, 295, 728, 296, 0, 359, 297, 298, 299, 360,
	769, 0, 0, 300, 0, 0, 0, 0, 301, 302,
	303, 304, 305, 682, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 678, 679, 713, 702, 703, 700,
	701, 692, 0, 688, 0, 0, 0, 0, 0, 0,
	691, 0, 147, 148, 0, 149, 0, 0, 0, 0,
	730, 695, 0, 0, 0, 150, 151, 152, 307, 745,
	309, 746, 153, 747, 748, 0, 154, 313, 314, 155,
	156, 157, 698, 729, 749, 750, 317, 0, 158, 741,
	0, 721, 0, 159, 160, 161, 0, 162, 0, 163,
	164, 165, 0, 412, 166, 167, 168, 0, 722, 723,
	725, 0, 724, 726, 169, 170, 364, 171, 751, 172,
	752, 753, 0, 173, 0, 174, 0, 175, 0, 0,
	744, 177, 0, 178, 0, 0, 0, 686, 179, 180,
	181, 731, 732, 709, 0, 0, 182, 183, 754, 755,
	756, 0, 184, 0, 185, 0, 0, 413, 186, 0,
	187, 742, 0, 329, 0, 188, 189, 190, 191, 192,
	738, 740, 415, 0, 196, 0, 193, 0, 414, 194,
	757, 195, 758, 759, 760, 761, 762, 0, 720, 0,
	416, 197, 198, 199, 417, 200, 201, 202, 0, 204,
	203, 0, 743, 418, 205, 419, 0, 206, 0, 0,
	207, 0, 208, 209, 210, 212, 340, 211, 420, 213,
	214, 216, 215, 681, 1820, 710, 739, 217, 763, 218,
	219, 0, 220, 0, 0, 221, 0, 0, 222, 343,
	421, 223, 422, 733, 224, 225, 226, 227, 228, 0,
	229, 734, 230, 346, 231, 0, 232, 233, 234, 235,
	236, 237, 764, 238, 239, 0, 240, 241, 242, 243,
	244, 246, 247, 245, 248, 249, 250, 251, 0, 252,
	423, 253, 254, 687, 255, 0, 259, 260, 261, 262,
	0, 264, 349, 263, 265, 266, 727, 267, 256, 257,
	268, 424, 269, 765, 351, 270, 0, 277, 271, 272,
	258, 273, 276, 766, 274, 275, 735, 0, 278, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 354, 767,
	768, 0, 0, 286, 287, 736, 737, 708, 288, 289,
	290, 291, 0, 0, 292, 293, 294, 295, 728, 296,
	0, 359, 297, 298, 299, 360, 769, 0, 0, 300,
	0, 0, 0, 0, 301, 302, 303, 304, 305, 682,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 0,
	678, 679, 899, 713, 702, 703, 700, 701, 692, 688,
	0, 0, 0, 0, 0, 0, 691, 0, 0, 147,
	148, 0, 149, 0, 0, 0, 0, 730, 695, 0,
	0, 0, 150, 151, 152, 307, 745, 309, 746, 153,
	747, 748, 0, 154, 313, 314, 155, 156, 157, 698,
	729, 749, 750, 317, 0, 158, 741, 0, 721, 0,
	159, 160, 161, 0, 162, 0, 163, 164, 165, 0,
	412, 166, 167, 168, 0, 722, 723, 725, 0, 724,
	726, 169, 170, 364, 171, 751, 172, 752, 753, 0,
	173, 0, 174, 0, 175, 0, 0, 744, 177, 0,
	178, 0, 0, 0, 686, 179, 180, 181, 731, 732,
	709, 0, 0, 182, 183, 754, 755, 756, 0, 184,
	0, 185, 0, 0, 413, 186, 0, 187, 742, 0,
	329, 0, 188, 189, 190, 191, 192, 738, 740, 415,
	0, 196, 1184, 193, 0, 414, 194, 757, 195, 758,
	759, 760, 761, 762, 0, 720, 0, 416, 197, 198,
	199, 417, 200, 201, 202, 0, 204, 203, 0, 743,
	418, 205, 419, 0, 206, 0, 0, 207, 0, 208,
	209, 210, 212, 340, 211, 420, 213, 214, 216, 215,
	681, 0, 710, 739, 217, 763, 218, 219, 0, 220,
	0, 0, 221, 0, 0, 222, 343, 421, 223, 422,
	733, 224, 225, 226, 227, 228, 0, 229, 734, 230,
	346, 231, 1183, 232, 233, 234, 235, 236, 237, 764,
	238, 239, 0, 240, 241, 242, 243, 244, 246, 247,
	245, 248, 249, 250, 251, 0, 252, 423, 253, 254,
	687, 255, 0, 259, 260, 261, 262, 0, 264, 349,
	263, 265, 266, 727, 267, 256, 257, 268, 424, 269,
	765, 351, 270, 0, 277, 271, 272, 258, 273, 276,
	766, 274, 275, 735, 0, 278, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 354, 767, 768, 0, 0,
	286, 287, 736, 737, 708, 288, 289, 290, 291, 0,
	0, 292, 293, 294, 295, 728, 296, 0, 359, 297,
	298, 299, 360, 769, 0, 0, 300, 0, 0, 0,
	0, 301, 302, 303, 304, 305, 682, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 678, 679, 713,
	702, 703, 700, 701, 692, 0, 688, 0, 0, 0,
	0, 0, 0, 691, 0, 147, 148, 0, 149, 0,
	0, 0, 0, 730, 695, 0, 0, 0, 150, 151,
	152, 307, 745, 309, 746, 153, 747, 748, 0, 154,
	313, 314, 155, 156, 157, 698, 729, 749, 750, 317,
	0, 158, 741, 0, 721, 0, 159, 160, 161, 0,
	162, 0, 163, 164, 165, 0, 412, 166, 167, 168,
	0, 722, 723, 725, 0, 724, 726, 169, 170, 364,
	171, 751, 172, 752, 753, 0, 173, 0, 174, 0,
	175, 0, 0, 744, 177, 0, 178, 0, 0, 0,
	686, 179, 180, 181, 731, 732, 709, 0, 0, 182,
	183, 754, 755, 756, 0, 184, 0, 185, 0, 0,
	413, 186, 0, 187, 742, 0, 329, 0, 188, 189,
	190, 191, 192, 738, 740, 415, 0, 196, 0, 193,
	0, 414, 194, 757, 195, 758, 759, 760, 761, 762,
	0, 720, 0, 416, 197, 198, 199, 417, 200, 201,
	202, 0, 204, 203, 0, 743, 418, 205, 419, 0,
	206, 0, 0, 207, 0, 208, 209, 210, 212, 340,
	211, 420, 213, 214, 216, 215, 681, 0, 710, 739,
	217, 763, 218, 219, 0, 220, 0, 0, 221, 0,
	0, 222, 343, 421, 223, 422, 733, 224, 225, 226,
	227, 228, 0, 229, 734, 230, 346, 231, 0, 232,
	233, 234, 235, 236, 237, 764, 238, 239, 0, 240,
	241, 242, 243, 244, 246, 247, 245, 248, 249, 250,
	251, 0, 252, 423, 253, 254, 687, 255, 0, 259,
	260, 261, 262, 0, 264, 349, 263, 265, 266, 727,
	267, 256, 257, 268, 424, 269, 765, 351, 270, 0,
	277, 271, 272, 258, 273, 276, 766, 274, 275, 735,
	0, 278, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 354, 767, 768, 0, 0, 286, 287, 736, 737,
	708, 288, 289, 290, 291, 0, 0, 292, 293, 294,
	295, 728, 296, 0, 359, 297, 298, 299, 360, 769,
	0, 0, 300, 0, 0, 0, 0, 301, 302, 303,
	304, 305, 682, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 678, 679, 0, 0, 0, 0, 0,
	1011, 1381, 688, 713, 702, 703, 700, 701, 692, 691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	148, 0, 149, 0, 0, 0, 0, 730, 695, 0,
	0, 0, 150, 151, 152, 307, 745, 309, 746, 153,
	747, 748, 0, 154, 313, 314, 155, 156, 157, 698,
	729, 749, 750, 317, 0, 158, 741, 0, 721, 0,
	159, 160, 161, 0, 162, 0, 163, 164, 165, 0,
	412, 166, 167, 168, 0, 722, 723, 725, 0, 724,
	726, 169, 170, 364, 171, 751, 172, 752, 753, 0,
	173, 0, 174, 0, 175, 0, 0, 744, 177, 0,
	178, 0, 0, 0, 686, 179, 180, 181, 731, 732,
	709, 0, 0, 182, 183, 754, 755, 756, 0, 184,
	0, 185, 0, 0, 413, 186, 0, 187, 742, 0,
	329, 0, 188, 189, 190, 191, 192, 738, 740, 415,
	0, 196, 0, 193, 0, 414, 194, 757, 195, 758,
	759, 760, 761, 762, 0, 720, 0, 416, 197, 198,
	199, 417, 200, 201, 202, 0, 204, 203, 0, 743,
	418, 205, 419, 0, 206, 0, 0, 207, 0, 208,
	209, 210, 212, 340, 211, 420, 213, 214, 216, 215,
	681, 0, 710, 739, 217, 763, 218, 219, 0, 220,
	0, 0, 221, 0, 0, 222, 343, 421, 223, 422,
	733, 224, 225, 226, 227, 228, 0, 229, 734, 230,
	346, 231, 0, 232, 233, 234, 235, 236, 237, 764,
	238, 239, 0, 240, 241, 242, 243, 244, 246, 247,
	245, 248, 249, 250, 251, 0, 252, 423, 253, 254,
	687, 255, 0, 259, 260, 261, 262, 0, 264, 349,
	263, 265, 266, 727, 267, 256, 257, 268, 424, 269,
	765, 351, 270, 0, 277, 271, 272, 258, 273, 276,
	766, 274, 275, 735, 0, 278, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 354, 767, 768, 0, 0,
	286, 287, 736, 737, 708, 288, 289, 290, 291, 0,
	0, 292, 293, 294, 295, 728, 296, 0, 359, 297,
	298, 299, 360, 769, 0, 0, 300, 0, 0, 0,
	0, 301, 302, 303, 304, 305, 682, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 678, 679, 713,
	702, 703, 700, 701, 692, 0, 688, 1922, 0, 0,
	0, 0, 0, 691, 0, 147, 148, 0, 149, 0,
	0, 0, 0, 730, 695, 0, 0, 0, 150, 151,
	152, 307, 745, 309, 746, 153, 747, 748, 0, 154,
	313, 314, 155, 156, 157, 698, 729, 749, 750, 317,
	0, 158, 741, 0, 721, 0, 159, 160, 161, 0,
	162, 0, 163, 164, 165, 0, 412, 166, 167, 168,
	0, 722, 723, 725, 0, 724, 726, 169, 170, 364,
	171, 751, 172, 752, 753, 0, 173, 0, 174, 0,
	175, 0, 0, 744, 177, 0, 178, 0, 0, 0,
	686, 179, 180, 181, 731, 732, 709, 0, 0, 182,
	183, 754, 755, 756, 0, 184, 0, 185, 0, 0,
	413, 186, 0, 187, 742, 0, 329, 0, 188, 189,
	190, 191, 192, 738, 740, 415, 0, 196, 0, 193,
	0, 414, 194, 757, 195, 758, 759, 760, 761, 762,
	0, 720, 0, 416, 197, 198, 199, 417, 200, 201,
	202, 0, 204, 203, 0, 743, 418, 205, 419, 0,
	206, 0, 0, 207, 0, 208, 209, 210, 212, 340,
	211, 420, 213, 214, 216, 215, 681, 0, 710, 739,
	217, 763, 218, 219, 0, 220, 0, 0, 221, 0,
	0, 222, 343, 421, 223, 422, 733, 224, 225, 226,
	227, 228, 0, 229, 734, 230, 346, 231, 0, 232,
	233, 234, 235, 236, 237, 764, 238, 239, 0, 240,
	241, 242, 243, 244, 246, 247, 245, 248, 249, 250,
	251, 0, 252, 423, 253, 254, 687, 255, 0, 259,
	260, 261, 262, 0, 264, 349, 263, 265, 266, 727,
	267, 256, 257, 268, 424, 269, 765, 351, 270, 0,
	277, 271, 272, 258, 273, 276, 766, 274, 275, 735,
	0, 278, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 354, 767, 768, 0, 0, 286, 287, 736, 737,
	708, 288, 289, 290, 291, 0, 0, 292, 293, 294,
	295, 728, 296, 0, 359, 297, 298, 299, 360, 769,
	1871, 0, 300, 0, 0, 0, 0, 301, 302, 303,
	304, 305, 682, 0, 0, 0, 0, 0, 680, 0,
	0, 0, 0, 678, 679, 713, 702, 703, 700, 701,
	692, 0, 688, 0, 0, 0, 0, 0, 0, 691,
	0, 147, 148, 0, 149, 0, 0, 0, 0, 730,
	695, 0, 0, 0, 150, 151, 152, 307, 745, 309,
	746, 153, 747, 748, 0, 154, 313, 314, 155, 156,
	157, 698, 729, 749, 750, 317, 0, 158, 741, 0,
	721, 0, 159, 160, 161, 0, 162, 0, 163, 164,
	165, 0, 412, 166, 167, 168, 0, 722, 723, 725,
	0, 724, 726, 169, 170, 364, 171, 751, 172, 752,
	753, 0, 173, 0, 174, 0, 175, 0, 0, 744,
	177, 0, 178, 0, 0, 0, 686, 179, 180, 181,
	731, 732, 709, 0, 0, 182, 183, 754, 755, 756,
	0, 184, 0, 185, 0, 0, 413, 186, 0, 187,
	742, 0, 329, 0, 188, 189, 190, 191, 192, 738,
	740, 415, 0, 196, 0, 193, 0, 414, 194, 757,
	195, 758, 759, 760, 761, 762, 0, 720, 0, 416,
	197, 198, 199, 417, 200, 201, 202, 0, 204, 203,
	0, 743, 418, 205, 419, 0, 206, 0, 0, 207,
	0, 208, 209, 210, 212, 340, 211, 420, 213, 214,
	216, 215, 681, 0, 710, 739, 217, 763, 218, 219,
	0, 220, 0, 0, 221, 0, 0, 222, 343, 421,
	223, 422, 733, 224, 225, 226, 227, 228, 0, 229,
	734, 230, 346, 231, 0, 232, 233, 234, 235, 236,
	237, 764, 238, 239, 0, 240, 241, 242, 243, 244,
	246, 247, 245, 248, 249, 250, 251, 0, 252, 423,
	253, 254, 687, 255, 0, 259, 260, 261, 262, 0,
	264, 349, 263, 265, 266, 727, 267, 256, 257, 268,
	424, 269, 765, 351, 270, 0, 277, 271, 272, 258,
	273, 276, 766, 274, 275, 735, 0, 278, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 354, 767, 768,
	0, 0, 286, 287, 736, 737, 708, 288, 289, 290,
	291, 0, 0, 292, 293, 294, 295, 728, 296, 0,
	359, 297, 298, 299, 360, 769, 0, 0, 300, 0,
	0, 0, 0, 301, 302, 303, 304, 305, 682, 0,
	0, 0, 0, 0, 680, 0, 0, 0, 0, 678,
	679, 713, 702, 703, 700, 701, 692, 0, 688, 1861,
	0, 0, 0, 0, 0, 691, 0, 147, 148, 0,
	149, 0, 0, 0, 0, 730, 695, 0, 0, 0,
	150, 151, 152, 307, 745, 309, 746, 153, 747, 748,
	0, 154, 313, 314, 155, 156, 157, 698, 729, 749,
	750, 317, 0, 158, 741, 0, 721, 0, 159, 160,
	161, 0, 162, 0, 163, 164, 165, 0, 412, 166,
	167, 168, 0, 722, 723, 725, 0, 724, 726, 169,
	170, 364, 171, 751, 172, 752, 753, 905, 173, 0,
	174, 0, 175, 0, 0, 744, 177, 0, 178, 0,
	0, 0, 686, 179, 180, 181, 731, 732, 709, 0,
	0, 182, 183, 754, 755, 756, 0, 184, 0, 185,
	0, 0, 413, 186, 0, 187, 742, 0, 329, 0,
	188, 189, 190, 191, 192, 738, 740, 415, 0, 196,
	0, 193, 0, 414, 194, 757, 195, 758, 759, 760,
	761, 762, 0, 720, 0, 416, 197, 198, 199, 417,
	200, 201, 202, 0, 204, 203, 0, 743, 418, 205,
	419, 0, 206, 0, 0, 207, 0, 208, 209, 210,
	212, 340, 211, 420, 213, 214, 216, 215, 681, 0,
	710, 739, 217, 763, 218, 219, 0, 220, 0, 0,
	221, 0, 0, 222, 343, 421, 223, 422, 733, 224,
	225, 226, 227, 228, 0, 229, 734, 230, 346, 231,
	0, 232, 233, 234, 235, 236, 237, 764, 238, 239,
	0, 240, 241, 242, 243, 244, 246, 247, 245, 248,
	249, 250, 251, 0, 252, 423, 253, 254, 687, 255,
	0, 259, 260, 261, 262, 0, 264, 349, 263, 265,
	266, 727, 267, 256, 257, 268, 424, 269, 765, 351,
	270, 0, 277, 271, 272, 258, 273, 276, 766, 274,
	275, 735, 0, 278, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 354, 767, 768, 0, 0, 286, 287,
	736, 737, 708, 288, 289, 290, 291, 0, 0, 292,
	293, 294, 295, 728, 296, 0, 359, 297, 298, 299,
	360, 769, 0, 0, 300, 0, 0, 0, 0, 301,
	302, 303, 304, 305, 682, 0, 0, 0, 0, 0,
	680, 0, 0, 0, 0, 678, 679, 713, 702, 703,
	700, 701, 692, 0, 688, 0, 0, 0, 0, 0,
	0, 691, 0, 147, 148, 0, 149, 0, 0, 0,
	0, 730, 695, 0, 0, 0, 150, 151, 152, 307,
	745, 309, 746, 153, 747, 748, 0, 154, 313, 314,
	155, 156, 157, 698, 729, 749, 750, 317, 0, 158,
	741, 0, 721, 0, 159, 160, 161, 0, 162, 0,
	163, 164, 165, 0, 412, 166, 167, 168, 0, 722,
	723, 725, 0, 724, 726, 169, 170, 364, 171, 751,
	172, 752, 753, 0, 173, 0, 174, 0, 175, 0,
	0, 744, 177, 0, 178, 0, 0, 0, 686, 179,
	180, 181, 731, 732, 709, 0, 0, 182, 183, 754,
	755, 756, 0, 184, 0, 185, 0, 1441, 413, 186,
	0, 187, 742, 0, 329, 0, 188, 189, 190, 191,
	192, 738, 740, 415, 0, 196, 0, 193, 0, 414,
	194, 757, 195, 758, 759, 760, 761, 762, 0, 720,
	0, 416, 197, 198, 199, 417, 200, 201, 202, 0,
	204, 203, 0, 743, 418, 205, 419, 0, 206, 0,
	0, 207, 0, 208, 209, 210, 212, 340, 211, 420,
	213, 214, 216, 215, 681, 0, 710, 739, 217, 763,
	218, 219, 0, 220, 0, 0, 221, 0, 0, 222,
	343, 421, 223, 422, 733, 224, 225, 226, 227, 228,
	0, 229, 734, 230, 346, 231, 0, 232, 233, 234,
	235, 236, 237, 764, 238, 239, 0, 240, 241, 242,
	243, 244, 246, 247, 245, 248, 249, 250, 251, 0,
	252, 423, 253, 254, 687, 255, 0, 259, 260, 261,
	262, 0, 264, 349, 263, 265, 266, 727, 267, 256,
	257, 268, 424, 269, 765, 351, 270, 0, 277, 271,
	272, 258, 273, 276, 766, 274, 275, 735, 0, 278,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 354,
	767, 768, 0, 0, 286, 287, 736, 737, 708, 288,
	289, 290, 291, 0, 0, 292, 293, 294, 295, 728,
	296, 0, 359, 297, 298, 299, 360, 769, 0, 0,
	300, 0, 0, 0, 0, 301, 302, 303, 304, 305,
	682, 0, 0, 0, 0, 0, 680, 0, 0, 0,
	0, 678, 679, 713, 702, 703, 700, 701, 692, 0,
	688, 0, 0, 0, 0, 0, 0, 691, 0, 147,
	148, 0, 149, 0, 0, 0, 0, 730, 695, 0,
	0, 0, 150, 151, 152, 307, 745, 309, 746, 153,
	747, 748, 0, 154, 313, 314, 155, 156, 157, 698,
	729, 749, 750, 317, 0, 158, 741, 0, 721, 0,
	159, 160, 161, 0, 162, 0, 163, 164, 165, 0,
	412, 166, 167, 168, 0, 722, 723, 725, 0, 724,
	726, 169, 170, 364, 171, 751, 172, 752, 753, 0,
	173, 0, 174, 0, 175, 0, 0, 744, 177, 0,
	178, 0, 0, 0, 686, 179, 180, 181, 731, 732,
	709, 0, 0, 182, 183, 754, 755, 756, 0, 184,
	0, 185, 0, 0, 413, 186, 0, 187, 742, 0,
	329, 0, 188, 189, 190, 191, 192, 738, 740, 415,
	0, 196, 0, 193, 0, 414, 194, 757, 195, 758,
	759, 760, 761, 762, 0, 720, 0, 416, 197, 198,
	199, 417, 200, 201, 202, 0, 204, 203, 0, 743,
	418, 205, 419, 0, 206, 0, 0, 207, 0, 208,
	209, 210, 212, 340, 211, 420, 213, 214, 216, 215,
	681, 0, 710, 739, 217, 763, 218, 219, 0, 220,
	0, 0, 221, 0, 0, 222, 343, 421, 223, 422,
	733, 224, 225, 226, 227, 228, 0, 229, 734, 230,
	346, 231, 0, 232, 233, 234, 235, 236, 237, 764,
	238, 239, 0, 240, 241, 242, 243, 244, 246, 247,
	245, 248, 249, 250, 251, 0, 252, 423, 253, 254,
	687, 255, 0, 259, 260, 261, 262, 0, 264, 349,
	263, 265, 266, 727, 267, 256, 257, 268, 424, 269,
	765, 351, 270, 0, 277, 271, 272, 258, 273, 276,
	766, 274, 275, 735, 0, 278, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 354, 767, 768, 0, 0,
	286, 287, 736, 737, 708, 288, 289, 290, 291, 0,
	0, 292, 293, 294, 295, 728, 296, 0, 359, 297,
	298, 299, 360, 769, 0, 0, 300, 0, 0, 0,
	0, 301, 302, 303, 304, 305, 682, 0, 0, 0,
	0, 0, 680, 0, 0, 0, 0, 678, 679, 899,
	713, 702, 703, 700, 701, 692, 688, 0, 0, 0,
	0, 0, 0, 691, 0, 0, 147, 148, 0, 149,
	0, 0, 0, 0, 730, 695, 0, 0, 0, 150,
	151, 152, 307, 745, 309, 746, 153, 747, 748, 0,
	154, 313, 314, 155, 156, 157, 698, 729, 749, 750,
	317, 0, 158, 741, 0, 721, 0, 159, 160, 161,
	0, 162, 0, 163, 164, 165, 0, 412, 166, 167,
	168, 0, 722, 723, 725, 0, 724, 726, 169, 170,
	364, 171, 751, 172, 752, 753, 0, 173, 0, 174,
	0, 175, 0, 0, 744, 177, 0, 178, 0, 0,
	0, 686, 179, 180, 181, 731, 732, 709, 0, 0,
	182, 183, 754, 755, 756, 0, 184, 0, 185, 0,
	0, 413, 186, 0, 187, 742, 0, 329, 0, 188,
	189, 190, 191, 192, 738, 740, 415, 0, 196, 0,
	193, 0, 414, 194, 757, 195, 758, 759, 760, 761,
	762, 0, 720, 0, 416, 197, 198, 199, 417, 200,
	201, 202, 0, 204, 203, 0, 743, 418, 205, 419,
	0, 206, 0, 0, 207, 0, 208, 209, 210, 212,
	340, 211, 420, 213, 214, 216, 215, 681, 0, 710,
	739, 217, 763, 218, 219, 0, 220, 0, 0, 221,
	0, 0, 222, 343, 421, 223, 422, 733, 224, 225,
	226, 227, 228, 0, 229, 734, 230, 346, 231, 0,
	232, 233, 234, 235, 236, 237, 764, 238, 239, 0,
	240, 241, 242, 243, 244, 246, 247, 245, 248, 249,
	250, 251, 0, 252, 423, 253, 254, 687, 255, 0,
	259, 260, 261, 262, 0, 264, 349, 263, 265, 266,
	727, 267, 256, 257, 268, 424, 269, 765, 351, 270,
	0, 277, 271, 272, 258, 273, 276, 766, 274, 275,
	735, 0, 278, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 354, 767, 768, 0, 0, 286, 287, 736,
	737, 708, 288, 289, 290, 291, 0, 0, 292, 293,
	294, 295, 728, 296, 0, 359, 297, 298, 299, 360,
	769, 0, 0, 300, 0, 0, 0, 0, 301, 302,
	303, 304, 305, 682, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 678, 679, 713, 702, 703, 700,
	701, 692, 0, 688, 1376, 0, 0, 0, 0, 0,
	691, 0, 147, 148, 1171, 149, 0, 0, 0, 0,
	730, 695, 0, 0, 0, 150, 151, 152, 307, 745,
	309, 746, 153, 747, 748, 0, 154, 313, 314, 155,
	156, 157, 698, 729, 749, 750, 317, 0, 158, 741,
	0, 721, 0, 159, 160, 161, 0, 162, 0, 163,
	164, 165, 0, 412, 166, 167, 168, 0, 722, 723,
	725, 0, 724, 726, 169, 170, 364, 171, 751, 172,
	752, 753, 0, 173, 0, 174, 0, 175, 0, 0,
	744, 177, 0, 178, 0, 0, 0, 686, 179, 180,
	181, 731, 732, 709, 0, 0, 182, 183, 754, 755,
	756, 0, 184, 0, 185, 0, 0, 413, 186, 0,
	187, 742, 0, 329, 0, 188, 189, 190, 191, 192,
	738, 740, 415, 0, 196, 0, 193, 0, 414, 194,
	757, 195, 758, 759, 760, 761, 762, 0, 720, 0,
	416, 197, 198, 199, 417, 200, 201, 202, 0, 204,
	203, 0, 743, 418, 205, 419, 0, 206, 0, 0,
	207, 0, 208, 209, 210, 212, 340, 211, 420, 213,
	214, 216, 215, 681, 0, 710, 739, 217, 763, 218,
	219, 0, 220, 0, 0, 221, 0, 0, 222, 343,
	421, 223, 422, 733, 224, 225, 226, 227, 228, 0,
	229, 734, 230, 346, 231, 0, 232, 233, 234, 235,
	236, 237, 764, 238, 239, 0, 240, 241, 242, 243,
	244, 246, 247, 245, 248, 249, 250, 251, 0, 252,
	423, 253, 254, 687, 255, 0, 259, 260, 261, 262,
	0, 264, 349, 263, 265, 266, 727, 267, 256, 257,
	268, 424, 269, 765, 351, 270, 0, 277, 271, 272,
	258, 273, 276, 766, 274, 275, 735, 0, 278, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 354, 767,
	768, 0, 0, 286, 287, 736, 737, 708, 288, 289,
	290, 291, 0, 0, 292, 293, 294, 295, 728, 296,
	0, 359, 297, 298, 299, 360, 769, 0, 0, 300,
	0, 0, 0, 0, 301, 302, 303, 304, 305, 682,
	0, 0, 0, 0, 0, 680, 0, 0, 0, 0,
	678, 679, 713, 702, 703, 700, 701, 692, 0, 688,
	0, 0, 0, 0, 0, 0, 691, 0, 147, 148,
	0, 149, 0, 0, 0, 0, 730, 695, 0, 0,
	0, 150, 151, 152, 307, 745, 309, 746, 153, 747,
	748, 0, 154, 313, 314, 155, 156, 157, 698, 729,
	749, 750, 317, 0, 158, 741, 0, 721, 0, 159,
	160, 161, 0, 162, 0, 163, 164, 165, 0, 412,
	166, 167, 2285, 0, 722, 723, 725, 0, 724, 726,
	169, 170, 364, 171, 751, 172, 752, 753, 0, 173,
	0, 174, 0, 175, 0, 0, 744, 177, 0, 178,
	0, 0, 0, 686, 179, 180, 181, 731, 732, 709,
	0, 0, 182, 183, 754, 755, 756, 0, 184, 0,
	185, 0, 0, 413, 186, 0, 187, 742, 0, 329,
	0, 188, 189, 190, 191, 192, 738, 740, 415, 0,
	196, 0, 193, 0, 414, 194, 757, 195, 758, 759,
	760, 761, 762, 0, 720, 0, 416, 197, 198, 199,
	417, 200, 201, 202, 0, 204, 203, 0, 743, 418,
	205, 419, 0, 206, 0, 0, 207, 0, 208, 209,
	210, 212, 340, 211, 420, 213, 214, 216, 215, 681,
	0, 710, 739, 217, 763, 218, 219, 0, 220, 0,
	0, 221, 0, 0, 222, 343, 421, 223, 422, 733,
	224, 225, 226, 227, 228, 0, 229, 734, 230, 346,
	231, 0, 232, 233, 234, 235, 236, 237, 764, 238,
	239, 0, 240, 241, 242, 243, 244, 246, 247, 245,
	248, 249, 250, 251, 0, 252, 423, 253, 254, 687,
	255, 0, 259, 260, 261, 262, 0, 264, 349, 263,
	265, 266, 727, 267, 256, 257, 268, 424, 269, 765,
	351, 270, 0, 277, 271, 272, 258, 273, 276, 766,
	274, 275, 735, 0, 278, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 354, 767, 768, 0, 0, 286,
	287, 736, 737, 708, 288, 289, 2284, 291, 0, 0,
	292, 293, 294, 295, 728, 296, 0, 359, 297, 298,
	299, 360, 769, 0, 0, 300, 0, 0, 0, 0,
	301, 302, 303, 304, 305, 682, 0, 0, 0, 0,
	0, 680, 0, 0, 0, 0, 678, 679, 713, 702,
	703, 700, 701, 692, 0, 688, 0, 0, 0, 0,
	0, 0, 691, 0, 147, 148, 0, 149, 0, 0,
	0, 0, 730, 695, 0, 0, 0, 150, 151, 152,
	307, 745, 309, 746, 153, 747, 748, 0, 154, 313,
	314, 155, 156, 157, 698, 729, 749, 750, 317, 0,
	158, 741, 0, 721, 0, 159, 160, 161, 0, 162,
	0, 163, 164, 165, 0, 412, 166, 167, 168, 0,
	722, 723, 725, 0, 724, 726, 169, 170, 364, 171,
	751, 172, 752, 753, 0, 173, 0, 174, 0, 175,
	0, 0, 744, 177, 0, 178, 0, 0, 0, 686,
	179, 180, 181, 731, 732, 709, 0, 0, 182, 183,
	754, 755, 756, 0, 184, 0, 185, 0, 0, 413,
	186, 0, 187, 742, 0, 329, 0, 188, 189, 190,
	191, 192, 738, 740, 415, 0, 196, 0, 193, 0,
	414, 194, 757, 195, 758, 759, 760, 761, 762, 0,
	720, 0, 416, 197, 198, 199, 417, 200, 201, 202,
	0, 204, 203, 0, 743, 418, 205, 419, 0, 206,
	0, 0, 207, 0, 208, 209, 210, 212, 340, 211,
	420, 213, 214, 216, 215, 681, 0, 710, 739, 217,
	763, 218, 219, 0, 220, 0, 0, 221, 0, 0,
	222, 343, 421, 223, 422, 733, 224, 225, 226, 227,
	228, 0, 229, 734, 230, 346, 231, 0, 232, 233,
	234, 235, 236, 237, 764, 238, 239, 0, 240, 241,
	242, 243, 244, 246, 247, 245, 248, 249, 250, 251,
	0, 252, 423, 253, 254, 687, 255, 0, 259, 260,
	261, 262, 0, 264, 349, 263, 265, 266, 727, 267,
	256, 257, 268, 424, 269, 765, 351, 270, 0, 277,
	271, 272, 258, 273, 276, 766, 274, 275, 735, 0,
	278, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	354, 767, 768, 0, 0, 286, 287, 736, 737, 708,
	288, 289, 290, 291, 0, 0, 292, 293, 294, 295,
	728, 296, 0, 359, 297, 298, 299, 360, 769, 0,
	0, 300, 0, 0, 0, 0, 301, 302, 303, 304,
	305, 682, 0, 0, 0, 0, 0, 680, 0, 0,
	0, 0, 678, 679, 713, 702, 703, 700, 701, 692,
	0, 688, 0, 0, 0, 0, 0, 0, 691, 0,
	147, 148, 0, 149, 0, 0, 0, 0, 730, 695,
	0, 0, 0, 150, 151, 152, 2283, 745, 309, 746,
	153, 747, 748, 0, 154, 313, 314, 155, 156, 157,
	698, 729, 749, 750, 317, 0, 158, 741, 0, 721,
	0, 159, 160, 161, 0, 162, 0, 163, 164, 165,
	0, 412, 166, 167, 2285, 0, 722, 723, 725, 0,
	724, 726, 169, 170, 364, 171, 751, 172, 752, 753,
	0, 173, 0, 174, 0, 175, 0, 0, 744, 177,
	0, 178, 0, 0, 0, 686, 179, 180, 181, 731,
	732, 709, 0, 0, 182, 183, 754, 755, 756, 0,
	184, 0, 185, 0, 0, 413, 186, 0, 187, 742,
	0, 329, 0, 188, 189, 190, 191, 192, 738, 740,
	415, 0, 196, 0, 193, 0, 414, 194, 757, 195,
	758, 759, 760, 761, 762, 0, 720, 0, 416, 197,
	198, 199, 417, 200, 201, 202, 0, 204, 203, 0,
	743, 418, 205, 419, 0, 206, 0, 0, 207, 0,
	208, 209, 210, 212, 340, 211, 420, 213, 214, 216,
	215, 681, 0, 710, 739, 217, 763, 218, 219, 0,
	220, 0, 0, 221, 0, 0, 222, 343, 421, 223,
	422, 733, 224, 225, 226, 227, 228, 0, 229, 734,
	230, 346, 231, 0, 232, 233, 234, 235, 236, 237,
	764, 238, 239, 0, 240, 241, 242, 243, 244, 246,
	247, 245, 248, 249, 250, 251, 0, 252, 423, 253,
	254, 687, 255, 0, 259, 260, 261, 262, 0, 264,
	349, 263, 265, 266, 727, 267, 256, 257, 268, 424,
	269, 765, 351, 270, 0, 277, 271, 272, 258, 273,
	276, 766, 274, 275, 735, 0, 278, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 354, 767, 768, 0,
	0, 286, 287, 736, 737, 708, 288, 289, 2284, 291,
	0, 0, 292, 293, 294, 295, 728, 296, 0, 359,
	297, 298, 299, 360, 769, 0, 0, 300, 0, 0,
	0, 0, 301, 302, 303, 304, 305, 682, 0, 0,
	0, 0, 0, 680, 0, 0, 0, 0, 678, 679,
	1413, 702, 703, 700, 701, 692, 0, 688, 0, 0,
	0, 0, 0, 0, 691, 0, 147, 148, 0, 149,
	0, 0, 0, 0, 730, 695, 0, 0, 0, 150,
	151, 152, 307, 745, 309, 746, 153, 747, 748, 0,
	154, 313, 314, 155, 156, 157, 698, 729, 749, 750,
	317, 0, 158, 741, 0, 721, 0, 159, 160, 161,
	0, 162, 0, 163, 164, 165, 0, 412, 166, 167,
	168, 0, 722, 723, 725, 0, 724, 726, 169, 170,
	364, 171, 751, 1416, 752, 753, 0, 173, 0, 174,
	0, 175, 0, 0, 744, 177, 0, 178, 0, 0,
	0, 686, 179, 180, 181, 731, 732, 709, 0, 0,
	182, 183, 754, 755, 756, 0, 184, 0, 185, 0,
	0, 413, 186, 0, 187, 742, 0, 329, 0, 188,
	189, 1417, 191, 192, 738, 740, 415, 0, 196, 0,
	193, 0, 414, 194, 757, 195, 758, 759, 760, 761,
	762, 0, 720, 0, 416, 197, 198, 199, 417, 200,
	201, 202, 0, 204, 203, 0, 743, 418, 205, 419,
	0, 206, 0, 0, 207, 0, 208, 1418, 1415, 212,
	340, 211, 420, 213, 214, 216, 215, 681, 0, 710,
	739, 217, 763, 218, 219, 0, 220, 0, 0, 221,
	0, 0, 222, 343, 421, 223, 422, 733, 224, 225,
	226, 227, 228, 0, 229, 734, 230, 346, 231, 0,
	232, 233, 234, 235, 236, 237, 764, 238, 239, 0,
	240, 241, 242, 243, 244, 246, 247, 245, 248, 249,
	250, 251, 0, 252, 423, 253, 254, 687, 255, 0,
	259, 260, 261, 1419, 0, 264, 349, 263, 265, 266,
	727, 267, 256, 257, 268, 424, 269, 765, 351, 270,
	0, 277, 271, 272, 258, 273, 276, 766, 274, 275,
	735, 0, 278, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 354, 767, 768, 0, 0, 286, 287, 736,
	737, 708, 288, 289, 290, 291, 0, 0, 292, 293,
	294, 295, 728, 296, 0, 359, 297, 298, 299, 360,
	769, 0, 0, 300, 0, 0, 0, 0, 301, 302,
	303, 1414, 305, 682, 0, 0, 0, 0, 0, 680,
	0, 0, 0, 0, 678, 679, 713, 702, 703, 700,
	701, 692, 0, 688, 0, 0, 0, 0, 0, 0,
	691, 0, 147, 148, 0, 149, 0, 0, 0, 0,
	730, 695, 0, 0, 0, 150, 151, 152, 307, 745,
	309, 746, 153, 747, 748, 0, 154, 313, 314, 155,
	156, 157, 698, 729, 749, 750, 317, 0, 158, 741,
	0, 721, 0, 159, 160, 161, 0, 162, 0, 163,
	164, 165, 0, 412, 166, 167, 168, 0, 722, 723,
	725, 0, 724, 726, 169, 170, 364, 171, 751, 172,
	752, 753, 0, 173, 0, 174, 0, 175, 0, 0,
	744, 177, 0, 178, 0, 0, 0, 686, 179, 180,
	181, 731, 732, 709, 0, 0, 182, 183, 754, 755,
	756, 0, 184, 0, 185, 0, 0, 413, 186, 0,
	187, 742, 0, 329, 0, 188, 189, 190, 191, 192,
	738, 740, 415, 0, 196, 0, 193, 0, 414, 194,
	757, 195, 758, 759, 760, 761, 762, 0, 720, 0,
	416, 197, 198, 199, 417, 200, 201, 202, 0, 204,
	203, 0, 743, 418, 205, 419, 0, 206, 0, 0,
	207, 0, 208, 209, 210, 212, 340, 211, 420, 213,
	214, 216, 215, 0, 0, 710, 739, 217, 763, 218,
	219, 0, 220, 0, 0, 221, 0, 0, 222, 343,
	421, 223, 422, 733, 224, 225, 226, 227, 228, 0,
	229, 734, 230, 346, 231, 0, 232, 233, 234, 235,
	236, 237, 764, 238, 239, 0, 240, 241, 242, 243,
	244, 246, 247, 245, 248, 249, 250, 251, 0, 252,
	423, 253, 254, 1431, 255, 0, 259, 260, 261, 262,
	0, 264, 349, 263, 265, 266, 727, 267, 256, 257,
	268, 424, 269, 765, 351, 270, 0, 277, 271, 272,
	258, 273, 276, 766, 274, 275, 735, 0, 278, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 354, 767,
	768, 0, 0, 286, 287, 736, 737, 708, 288, 289,
	290, 291, 0, 0, 292, 293, 294, 295, 728, 296,
	0, 359, 297, 298, 299, 360, 769, 0, 0, 300,
	0, 0, 0, 0, 301, 302, 303, 304, 305, 713,
	702, 703, 700, 701, 692, 1429, 0, 0, 0, 0,
	1427, 1428, 0, 0, 0, 147, 148, 0, 149, 1430,
	0, 0, 0, 730, 695, 0, 691, 0, 150, 151,
	152, 307, 745, 309, 746, 153, 747, 748, 0, 154,
	313, 314, 155, 156, 157, 0, 729, 749, 750, 317,
	0, 158, 741, 0, 721, 0, 159, 160, 161, 0,
	162, 0, 163, 164, 165, 0, 412, 166, 167, 168,
	0, 722, 723, 725, 0, 724, 726, 169, 170, 364,
	171, 751, 172, 752, 753, 0, 173, 0, 174, 0,
	175, 0, 0, 744, 177, 0, 178, 0, 0, 0,
	322, 179, 180, 181, 731, 732, 709, 0, 0, 182,
	183, 754, 755, 756, 0, 184, 0, 185, 0, 0,
	413, 186, 0, 187, 742, 0, 329, 0, 188, 189,
	190, 191, 192, 738, 740, 415, 0, 196, 0, 193,
	0, 414, 194, 757, 195, 758, 759, 760, 761, 762,
	0, 720, 0, 416, 197, 198, 199, 417, 200, 201,
	202, 0, 204, 203, 0, 743, 418, 205, 419, 0,
	206, 0, 0, 207, 0, 208, 209, 210, 212, 340,
	211, 420, 213, 214, 216, 215, 0, 0, 710, 739,
	217, 763, 218, 219, 0, 220, 0, 0, 221, 0,
	0, 222, 343, 421, 223, 422, 733, 224, 225, 226,
	227, 228, 0, 229, 734, 230, 346, 231, 0, 232,
	233, 234, 235, 236, 237, 764, 238, 239, 0, 240,
	241, 242, 243, 244, 246, 247, 245, 248, 249, 250,
	251, 0, 252, 423, 253, 254, 1431, 255, 0, 259,
	260, 261, 262, 0, 264, 349, 263, 265, 266, 727,
	267, 256, 257, 268, 424, 269, 765, 351, 270, 0,
	277, 271, 272, 258, 273, 276, 766, 274, 275, 735,
	0, 278, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 354, 767, 768, 0, 0, 286, 287, 736, 737,
	708, 288, 289, 290, 291, 0, 0, 292, 293, 294,
	295, 728, 296, 0, 359, 297, 298, 299, 360, 769,
	0, 0, 300, 0, 0, 0, 0, 301, 302, 303,
	304, 305, 713, 702, 703, 700, 701, 692, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 148,
	0, 149, 1430, 0, 0, 0, 730, 695, 0, 691,
	0, 150, 151, 152, 0, 745, 309, 746, 153, 747,
	748, 0, 154, 313, 314, 155, 156, 157, 698, 729,
	749, 750, 317, 0, 158, 741, 0, 721, 0, 159,
	160, 161, 0, 162, 0, 163, 164, 165, 0, 412,
	166, 167, 2285, 0, 722, 723, 725, 0, 724, 726,
	169, 170, 364, 171, 751, 172, 752, 753, 0, 173,
	0, 174, 0, 175, 0, 0, 744, 177, 0, 178,
	0, 0, 0, 686, 179, 180, 181, 731, 732, 709,
	0, 0, 182, 183, 754, 755, 756, 0, 184, 0,
	185, 0, 0, 413, 186, 0, 187, 742, 0, 329,
	0, 188, 189, 190, 191, 192, 738, 740, 0, 0,
	196, 0, 193, 0, 414, 194, 757, 195, 758, 759,
	760, 761, 762, 0, 720, 0, 0, 197, 198, 199,
	417, 200, 201, 202, 0, 204, 203, 0, 743, 418,
	205, 0, 0, 206, 0, 0, 207, 0, 208, 209,
	210, 212, 340, 211, 420, 213, 214, 216, 215, 681,
	0, 710, 739, 217, 763, 218, 219, 0, 220, 0,
	0, 221, 0, 0, 222, 343, 421, 223, 422, 733,
	224, 225, 226, 227, 228, 0, 229, 734, 230, 346,
	231, 0, 232, 233, 234, 235, 236, 237, 764, 238,
	239, 0, 240, 241, 242, 243, 244, 246, 247, 245,
	248, 249, 250, 251, 0, 252, 423, 253, 254, 687,
	255, 0, 259, 260, 261, 262, 0, 264, 349, 263,
	265, 266, 727, 267, 256, 257, 268, 0, 269, 765,
	351, 270, 0, 277, 271, 272, 258, 273, 276, 766,
	274, 275, 735, 0, 278, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 354, 767, 768, 0, 0, 286,
	287, 736, 737, 708, 288, 289, 2284, 291, 0, 0,
	292, 293, 294, 295, 728, 296, 0, 359, 297, 298,
	299, 360, 769, 0, 0, 300, 0, 0, 0, 0,
	301, 302, 303, 304, 305, 713, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 678, 679, 0, 0,
	0, 147, 148, 0, 149, 688, 0, 0, 0, 730,
	0, 0, 691, 0, 150, 151, 152, 307, 308, 309,
	310, 153, 311, 312, 0, 154, 313, 314, 155, 156,
	157, 0, 729, 315, 316, 317, 0, 158, 741, 0,
	721, 0, 159, 160, 161, 0, 162, 0, 163, 164,
	165, 0, 412, 166, 167, 168, 0, 722, 723, 725,
	0, 724, 726, 169, 170, 364, 171, 319, 172, 320,
	321, 0, 173, 0, 174, 0, 175, 0, 0, 176,
	177, 0, 178, 0, 0, 0, 322, 179, 180, 181,
	731, 732, 0, 0, 0, 182, 183, 325, 326, 327,
	0, 184, 0, 185, 0, 0, 413, 186, 0, 187,
	742, 0, 329, 0, 188, 189, 190, 191, 192, 738,
	740, 415, 0, 196, 0, 193, 0, 414, 194, 332,
	195, 333, 334, 335, 336, 337, 0, 338, 0, 416,
	197, 198, 199, 417, 200, 201, 202, 0, 204, 203,
	0, 743, 418, 205, 419, 0, 206, 0, 0, 207,
	0, 208, 209, 210, 212, 340, 211, 420, 213, 214,
	216, 215, 0, 0, 0, 739, 217, 342, 218, 219,
	0, 220, 0, 0, 221, 0, 0, 222, 343, 421,
	223, 422, 733, 224, 225, 226, 227, 228, 0, 229,
	734, 230, 346, 231, 0, 232, 233, 234, 235, 236,
	237, 347, 238, 239, 0, 240, 241, 242, 243, 244,
	246, 247, 245, 248, 249, 250, 251, 0, 252, 423,
	253, 254, 348, 255, 0, 259, 260, 261, 262, 0,
	264, 349, 263, 265, 266, 727, 267, 256, 257, 268,
	424, 269, 350, 351, 270, 0, 277, 271, 272, 258,
	273, 276, 352, 274, 275, 735, 0, 278, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 354, 355, 356,
	0, 0, 286, 287, 736, 737, 0, 288, 289, 290,
	291, 0, 0, 292, 293, 294, 295, 728, 296, 0,
	359, 297, 298, 299, 360, 361, 0, 0, 300, 0,
	582, 0, 0, 301, 302, 303, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 148, 0, 149,
	0, 0, 0, 0, 306, 0, 0, 0, 1840, 150,
	151, 152, 307, 308, 309, 310, 153, 311, 312, 0,
	154, 313, 314, 155, 156, 157, 0, 0, 315, 316,
	317, 0, 158, 318, 0, 411, 0, 159, 160, 161,
	0, 162, 0, 163, 164, 165, 0, 412, 166, 167,
	168, 0, 0, 0, 0, 0, 0, 0, 169, 170,
	364, 171, 319, 172, 320, 321, 0, 173, 0, 174,
	0, 175, 0, 0, 176, 177, 0, 178, 0, 0,
	0, 322, 179, 180, 181, 323, 324, 0, 0, 0,
	182, 183, 325, 326, 327, 0, 184, 0, 185, 0,
	0, 413, 186, 0, 187, 328, 0, 329, 0, 188,
	189, 190, 191, 192, 330, 331, 415, 0, 196, 0,
	193, 0, 414, 194, 332, 195, 333, 334, 335, 336,
	337, 0, 338, 0, 416, 197, 198, 199, 417, 200,
	201, 202, 0, 204, 203, 0, 339, 418, 205, 419,
	0, 206, 0, 0, 207, 0, 208, 209, 210, 212,
	340, 211, 420, 213, 214, 216, 215, 0, 0, 0,
	341, 217, 342, 218, 219, 0, 220, 0, 0, 221,
	0, 0, 222, 343, 421, 223, 422, 344, 224, 225,
	226, 227, 228, 0, 229, 345, 230, 346, 231, 0,
	232, 233, 234, 235, 236, 237, 347, 238, 239, 0,
	240, 241, 242, 243, 244, 246, 247, 245, 248, 249,
	250, 251, 0, 252, 423, 253, 254, 348, 255, 0,
	259, 260, 261, 262, 131, 264, 349, 263, 265, 266,
	0, 267, 256, 257, 268, 424, 269, 350, 351, 270,
	0, 277, 271, 272, 258, 273, 276, 352, 274, 275,
	353, 0, 278, 135, 279, 280, 281, 282, 283, 284,
	285, 0, 354, 355, 356, 0, 0, 286, 287, 357,
	358, 0, 288, 289, 290, 291, 0, 0, 292, 293,
	294, 295, 0, 296, 0, 359, 297, 298, 299, 672,
	361, 0, 0, 300, 0, 0, 0, 129, 301, 302,
	303, 304, 305, 0, 130, 582, 579, 0, 580, 575,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 148, 120, 149, 0, 0, 0, 0, 306,
	0, 0, 0, 0, 150, 151, 152, 307, 308, 309,
	310, 153, 311, 312, 0, 154, 313, 314, 155, 156,
	157, 0, 0, 315, 316, 317, 0, 158, 318, 0,
	411, 0, 159, 160, 161, 0, 162, 0, 163, 164,
	165, 0, 412, 166, 167, 168, 0, 0, 0, 0,
	0, 0, 0, 169, 170, 364, 171, 319, 172, 320,
	321, 1133, 173, 0, 174, 0, 175, 0, 0, 176,
	177, 0, 178, 0, 0, 0, 322, 179, 180, 181,
	323, 324, 572, 0, 0, 182, 183, 325, 326, 327,
	0, 184, 0, 185, 0, 0, 413, 186, 0, 187,
	328, 0, 329, 0, 188, 189, 190, 191, 192, 330,
	331, 415, 0, 196, 0, 193, 0, 414, 194, 332,
	195, 333, 334, 335, 336, 337, 0, 338, 0, 416,
	197, 198, 199, 417, 200, 201, 202, 0, 204, 203,
	0, 339, 418, 205, 419, 0, 206, 0, 0, 207,
	0, 208, 209, 210, 212, 340, 211, 420, 213, 214,
	216, 215, 0, 0, 0, 341, 217, 342, 218, 219,
	0, 220, 573, 0, 221, 0, 0, 222, 343, 421,
	223, 422, 344, 224, 225, 226, 227, 228, 0, 229,
	345, 230, 346, 231, 0, 232, 233, 234, 235, 236,
	237, 347, 238, 239, 0, 240, 241, 242, 243, 244,
	246, 247, 245, 248, 249, 250, 251, 0, 252, 423,
	253, 254, 348, 255, 0, 259, 260, 261, 262, 0,
	264, 349, 263, 265, 266, 0, 267, 256, 257, 268,
	424, 269, 350, 351, 270, 0, 277, 271, 272, 258,
	273, 276, 352, 274, 275, 353, 0, 278, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 354, 355, 356,
	0, 0, 286, 287, 357, 358, 571, 288, 289, 290,
	291, 0, 0, 292, 293, 294, 295, 0, 296, 0,
	359, 297, 298, 299, 360, 361, 0, 0, 300, 0,
	0, 0, 0, 301, 302, 303, 304, 305, 582, 579,
	0, 580, 575, 570, 0, 0, 0, 0, 0, 581,
	576, 0, 0, 0, 147, 148, 0, 149, 0, 0,
	0, 0, 306, 0, 0, 0, 0, 150, 151, 152,
	307, 308, 309, 310, 153, 311, 312, 0, 154, 313,
	314, 155, 156, 157, 0, 0, 315, 316, 317, 0,
	158, 318, 0, 411, 0, 159, 160, 161, 0, 162,
	0, 163, 164, 165, 0, 412, 166, 167, 168, 0,
	0, 0, 0, 0, 0, 0, 169, 170, 364, 171,
	319, 172, 320, 321, 1130, 173, 0, 174, 0, 175,
	0, 0, 176, 177, 0, 178, 0, 0, 0, 322,
	179, 180, 181, 323, 324, 572, 0, 0, 182, 183,
	325, 326, 327, 0, 184, 0, 185, 0, 0, 413,
	186, 0, 187, 328, 0, 329, 0, 188, 189, 190,
	191, 192, 330, 331, 415, 0, 196, 0, 193, 0,
	414, 194, 332, 195, 333, 334, 335, 336, 337, 0,
	338, 0, 416, 197, 198, 199, 417, 200, 201, 202,
	0, 204, 203, 0, 339, 418, 205, 419, 0, 206,
	0, 0, 207, 0, 208, 209, 210, 212, 340, 211,
	420, 213, 214, 216, 215, 0, 0, 0, 341, 217,
	342, 218, 219, 0, 220, 573, 0, 221, 0, 0,
	222, 343, 421, 223, 422, 344, 224, 225, 226, 227,
	228, 0, 229, 345, 230, 346, 231, 0, 232, 233,
	234, 235, 236, 237, 347, 238, 239, 0, 240, 241,
	242, 243, 244, 246, 247, 245, 248, 249, 250, 251,
	0, 252, 423, 253, 254, 348, 255, 0, 259, 260,
	261, 262, 0, 264, 349, 263, 265, 266, 0, 267,
	256, 257, 268, 424, 269, 350, 351, 270, 0, 277,
	271, 272, 258, 273, 276, 352, 274, 275, 353, 0,
	278, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	354, 355, 356, 0, 0, 286, 287, 357, 358, 571,
	288, 289, 290, 291, 0, 0, 292, 293, 294, 295,
	0, 296, 0, 359, 297, 298, 299, 360, 361, 0,
	0, 300, 0, 0, 0, 0, 301, 302, 303, 304,
	305, 582, 579, 0, 580, 575, 570, 0, 0, 0,
	0, 0, 581, 576, 0, 0, 0, 147, 148, 0,
	149, 0, 0, 0, 0, 306, 0, 0, 0, 0,
	150, 151, 152, 307, 308, 309, 310, 153, 311, 312,
	0, 154, 313, 314, 155, 156, 157, 0, 0, 315,
	316, 317, 0, 158, 318, 0, 411, 0, 159, 160,
	161, 0, 162, 0, 163, 164, 165, 0, 412, 166,
	167, 168, 0, 0, 0, 0, 0, 0, 0, 169,
	170, 364, 171, 319, 172, 320, 321, 804, 173, 0,
	174, 0, 175, 0, 0, 176, 177, 0, 178, 0,
	0, 0, 322, 179, 180, 181, 323, 324, 572, 0,
	0, 182, 183, 325, 326, 327, 0, 184, 0, 185,
	0, 0, 413, 186, 0, 187, 328, 0, 329, 0,
	188, 189, 190, 191, 192, 330, 331, 415, 0, 196,
	0, 193, 0, 414, 194, 332, 195, 333, 334, 335,
	336, 337, 0, 338, 0, 416, 197, 198, 199, 417,
	200, 201, 202, 0, 204, 203, 0, 339, 418, 205,
	419, 0, 206, 0, 0, 207, 0, 208, 209, 210,
	212, 340, 211, 420, 213, 214, 216, 215, 0, 0,
	0, 341, 217, 342, 218, 219, 0, 220, 573, 0,
	221, 0, 0, 222, 343, 421, 223, 422, 344, 224,
	225, 226, 227, 228, 0, 229, 345, 230, 346, 231,
	0, 232, 233, 234, 235, 236, 237, 347, 238, 239,
	0, 240, 241, 242, 243, 244, 246, 247, 245, 248,
	249, 250, 251, 0, 252, 423, 253, 254, 348, 255,
	0, 259, 260, 261, 262, 0, 264, 349, 263, 265,
	266, 0, 267, 256, 257, 268, 424, 269, 350, 351,
	270, 0, 277, 271, 272, 258, 273, 276, 352, 274,
	275, 353, 0, 278, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 354, 355, 356, 0, 0, 286, 287,
	357, 358, 571, 288, 289, 290, 291, 0, 0, 292,
	293, 294, 295, 0, 296, 0, 359, 297, 298, 299,
	360, 361, 0, 0, 300, 0, 0, 0, 0, 301,
	302, 303, 304, 305, 582, 579, 0, 580, 575, 570,
	0, 0, 0, 0, 0, 581, 576, 0, 0, 0,
	147, 148, 0, 149, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 150, 151, 152, 307, 308, 309, 310,
	153, 311, 312, 0, 154, 313, 314, 155, 156, 157,
	0, 0, 315, 316, 317, 0, 158, 318, 0, 411,
	0, 159, 160, 161, 0, 162, 0, 163, 164, 165,
	0, 412, 166, 167, 168, 0, 0, 0, 0, 0,
	0, 0, 169, 170, 364, 171, 319, 172, 320, 321,
	0, 173, 0, 174, 0, 175, 0, 0, 176, 177,
	0, 178, 0, 0, 0, 322, 179, 180, 181, 323,
	324, 572, 0, 0, 182, 183, 325, 326, 327, 0,
	184, 0, 185, 0, 0, 413, 186, 0, 187, 328,
	0, 329, 0, 188, 189, 190, 191, 192, 330, 331,
	415, 0, 196, 0, 193, 0, 414, 194, 332, 195,
	333, 334, 335, 336, 337, 0, 338, 0, 416, 197,
	198, 199, 417, 200, 201, 202, 0, 204, 203, 0,
	339, 418, 205, 419, 0, 206, 0, 0, 207, 0,
	208, 209, 210, 212, 340, 211, 420, 213, 214, 216,
	215, 0, 0, 0, 341, 217, 342, 218, 219, 0,
	220, 573, 0, 221, 0, 0, 222, 343, 421, 223,
	422, 344, 224, 225, 226, 227, 228, 0, 229, 345,
	230, 346, 231, 0, 232, 233, 234, 235, 236, 237,
	347, 238, 239, 0, 240, 241, 242, 243, 244, 246,
	247, 245, 248, 249, 250, 251, 0, 252, 423, 253,
	254, 348, 255, 0, 259, 260, 261, 262, 0, 264,
	349, 263, 265, 266, 0, 267, 256, 257, 268, 424,
	269, 350, 351, 270, 0, 277, 271, 272, 258, 273,
	276, 352, 274, 275, 353, 0, 278, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 354, 355, 356, 0,
	0, 286, 287, 357, 358, 571, 288, 289, 290, 291,
	0, 0, 292, 293, 294, 295, 0, 296, 0, 359,
	297, 298, 299, 360, 361, 0, 144, 300, 0, 0,
	0, 0, 301, 302, 303, 304, 305, 0, 0, 0,
	0, 0, 147, 148, 0, 149, 0, 0, 581, 576,
	306, 0, 0, 0, 0, 150, 151, 152, 307, 308,
	309, 310, 153, 311, 312, 0, 154, 313, 314, 155,
	156, 157, 0, 0, 315, 316, 317, 0, 158, 318,
	0, 0, 0, 159, 160, 161, 0, 162, 0, 163,
	164, 165, 0, 0, 166, 167, 168, 0, 0, 0,
	0, 0, 0, 0, 169, 170, 364, 171, 319, 172,
	320, 321, 0, 173, 0, 174, 0, 175, 0, 0,
	176, 177, 0, 178, 0, 0, 0, 322, 179, 180,
	181, 323, 324, 0, 0, 0, 182, 183, 325, 326,
	327, 0, 184, 0, 185, 0, 0, 0, 186, 0,
	187, 328, 0, 329, 0, 188, 189, 190, 191, 192,
	330, 331, 0, 0, 196, 0, 193, 0, 0, 194,
	332, 195, 333, 334, 335, 336, 337, 0, 338, 0,
	0, 197, 198, 199, 0, 200, 201, 202, 0, 204,
	203, 0, 339, 0, 205, 0, 0, 206, 0, 0,
	207, 0, 208, 209, 210, 212, 340, 211, 0, 213,
	214, 216, 215, 0, 0, 0, 341, 217, 342, 218,
	219, 0, 220, 0, 642, 221, 0, 0, 222, 343,
	0, 223, 0, 344, 224, 225, 226, 227, 228, 0,
	229, 345, 230, 346, 231, 0, 232, 233, 234, 235,
	236, 237, 347, 238, 239, 0, 240, 241, 242, 243,
	244, 246, 247, 245, 248, 249, 250, 251, 0, 252,
	0, 253, 254, 348, 255, 0, 259, 260, 261, 262,
	131, 264, 349, 263, 265, 266, 0, 267, 256, 257,
	268, 0, 269, 350, 351, 270, 0, 277, 271, 272,
	258, 273, 276, 352, 274, 275, 353, 0, 278, 135,
	279, 280, 281, 282, 283, 284, 285, 0, 354, 355,
	356, 0, 0, 286, 287, 357, 358, 0, 288, 289,
	290, 291, 0, 0, 292, 293, 294, 295, 0, 296,
	0, 359, 297, 298, 299, 672, 361, 0, 0, 300,
	0, 144, 0, 129, 301, 302, 303, 304, 305, 0,
	130, 0, 0, 0, 0, 0, 0, 147, 148, 0,
	149, 0, 0, 0, 0, 306, 0, 636, 0, 641,
	150, 151, 152, 307, 308, 309, 310, 153, 311, 312,
	0, 154, 313, 314, 155, 156, 157, 0, 0, 315,
	316, 317, 0, 158, 318, 0, 0, 0, 159, 160,
	161, 0, 162, 0, 163, 164, 165, 0, 0, 166,
	167, 168, 0, 0, 0, 0, 0, 0, 0, 169,
	170, 364, 171, 319, 172, 320, 321, 0, 173, 0,
	174, 0, 175, 0, 0, 176, 177, 0, 178, 0,
	0, 0, 322, 179, 180, 181, 323, 324, 0, 0,
	0, 182, 183, 325, 326, 327, 0, 184, 0, 185,
	0, 0, 0, 186, 0, 187, 328, 0, 329, 0,
	188, 189, 190, 191, 192, 330, 331, 0, 0, 196,
	0, 193, 0, 0, 194, 332, 195, 333, 334, 335,
	336, 337, 0, 338, 0, 0, 197, 198, 199, 0,
	200, 201, 202, 0, 204, 203, 0, 339, 0, 205,
	0, 0, 206, 0, 0, 207, 0, 208, 209, 210,
	212, 340, 211, 0, 213, 214, 216, 215, 0, 0,
	0, 341, 217, 342, 218, 219, 0, 220, 0, 0,
	221, 0, 0, 222, 343, 0, 223, 0, 344, 224,
	225, 226, 227, 228, 0, 229, 345, 230, 346, 231,
	0, 232, 233, 234, 235, 236, 237, 347, 238, 239,
	0, 240, 241, 242, 243, 244, 246, 247, 245, 248,
	249, 250, 251, 0, 252, 0, 253, 254, 348, 255,
	0, 259, 260, 261, 262, 131, 264, 349, 263, 265,
	266, 0, 267, 256, 257, 268, 0, 269, 350, 351,
	270, 0, 277, 271, 272, 258, 273, 276, 352, 274,
	275, 353, 0, 278, 135, 279, 280, 281, 282, 283,
	284, 285, 0, 354, 355, 356, 0, 0, 286, 287,
	357, 358, 0, 288, 289, 290, 291, 0, 0, 292,
	293, 294, 295, 0, 296, 0, 359, 297, 298, 299,
	672, 361, 0, 0, 300, 0, 144, 0, 129, 301,
	302, 303, 304, 305, 0, 130, 0, 0, 0, 0,
	0, 0, 147, 148, 0, 149, 0, 0, 0, 0,
	306, 0, 0, 0, 120, 150, 151, 152, 307, 308,
	309, 310, 153, 311, 312, 0, 154, 313, 314, 155,
	156, 157, 0, 0, 315, 316, 317, 0, 158, 318,
	0, 0, 0, 159, 160, 161, 0, 162, 0, 163,
	164, 165, 0, 0, 166, 167, 168, 0, 0, 0,
	0, 0, 0, 0, 169, 170, 364, 171, 319, 172,
	320, 321, 0, 173, 0, 174, 0, 175, 0, 0,
	176, 177, 0, 178, 0, 0, 0, 322, 179, 180,
	181, 323, 324, 0, 0, 0, 182, 183, 325, 326,
	327, 0, 184, 0, 185, 0, 0, 0, 186, 0,
	187, 328, 0, 329, 0, 188, 189, 190, 191, 192,
	330, 331, 0, 0, 196, 0, 193, 0, 0, 194,
	332, 195, 333, 334, 335, 336, 337, 0, 338, 0,
	0, 197, 198, 199, 0, 200, 201, 202, 0, 204,
	203, 0, 339, 0, 205, 0, 0, 206, 0, 0,
	207, 0, 208, 209, 210, 212, 340, 211, 0, 213,
	214, 216, 215, 0, 0, 0, 341, 217, 342, 218,
	219, 0, 220, 0, 642, 221, 0, 0, 222, 343,
	0, 223, 0, 344, 224, 225, 226, 227, 228, 0,
	229, 345, 230, 346, 231, 0, 232, 233, 234, 235,
	236, 237, 347, 238, 239, 0, 240, 241, 242, 243,
	244, 246, 247, 245, 248, 249, 250, 251, 0, 252,
	0, 253, 254, 348, 255, 0, 259, 260, 261, 262,
	0, 264, 349, 263, 265, 266, 0, 267, 256, 257,
	268, 0, 269, 350, 351, 270, 0, 277, 271, 272,
	258, 273, 276, 352, 274, 275, 353, 0, 278, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 354, 355,
	356, 0, 0, 286, 287, 357, 358, 0, 288, 289,
	290, 291, 0, 0, 292, 293, 294, 295, 0, 296,
	0, 359, 297, 298, 299, 360, 361, 0, 0, 300,
	0, 144, 0, 0, 301, 302, 303, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 148, 0,
	149, 0, 0, 0, 0, 306, 0, 636, 0, 641,
	150, 151, 152, 307, 308, 309, 310, 153, 311, 312,
	0, 154, 313, 314, 155, 156, 157, 0, 0, 315,
	316, 317, 0, 158, 318, 0, 0, 0, 159, 160,
	161, 0, 162, 0, 163, 164, 165, 0, 0, 166,
	167, 168, 0, 0, 0, 0, 0, 0, 0, 169,
	170, 364, 171, 319, 172, 320, 321, 0, 173, 0,
	174, 0, 175, 0, 0, 176, 177, 0, 178, 0,
	0, 0, 322, 179, 180, 181, 323, 324, 0, 0,
	0, 182, 183, 325, 326, 327, 0, 184, 0, 185,
	0, 0, 0, 186, 0, 187, 328, 0, 329, 0,
	188, 189, 190, 191, 192, 330, 331, 0, 0, 196,
	0, 193, 0, 0, 194, 332, 195, 333, 334, 335,
	336, 337, 0, 338, 0, 0, 197, 198, 199, 0,
	200, 201, 202, 0, 204, 203, 0, 339, 0, 205,
	0, 0, 206, 0, 0, 207, 0, 208, 209, 210,
	212, 340, 211, 0, 213, 214, 216, 215, 0, 0,
	0, 341, 217, 342, 218, 219, 0, 220, 0, 0,
	221, 0, 0, 222, 343, 0, 223, 0, 344, 224,
	225, 226, 227, 228, 0, 229, 345, 230, 346, 231,
	0, 232, 233, 234, 235, 236, 237, 347, 238, 239,
	0, 240, 241, 242, 243, 244, 246, 247, 245, 248,
	249, 250, 251, 0, 252, 0, 253, 254, 348, 255,
	0, 259, 260, 261, 262, 0, 264, 349, 263, 265,
	266, 0, 267, 256, 257, 268, 0, 269, 350, 351,
	270, 0, 277, 271, 272, 258, 273, 276, 352, 274,
	275, 353, 0, 278, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 354, 355, 356, 0, 0, 286, 287,
	357, 358, 0, 288, 289, 290, 291, 0, 0, 292,
	293, 294, 295, 0, 296, 0, 359, 297, 298, 299,
	360, 361, 0, 0, 300, 0, 0, 144, 0, 301,
	302, 303, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 148, 0, 149, 0, 0, 0,
	0, 306, 0, 0, 0, 933, 150, 151, 152, 307,
	308, 309, 310, 153, 311, 312, 0, 154, 313, 314,
	155, 156, 157, 0, 0, 315, 316, 317, 0, 158,
	318, 0, 0, 0, 159, 160, 161, 0, 162, 0,
	163, 164, 165, 0, 0, 166, 167, 168, 0, 0,
	0, 0, 0, 0, 0, 169, 170, 364, 171, 319,
	172, 320, 321, 0, 173, 0, 174, 0, 175, 0,
	0, 176, 177, 0, 178, 0, 0, 0, 322, 179,
	180, 181, 323, 324, 0, 0, 0, 182, 183, 325,
	326, 327, 0, 184, 0, 185, 0, 0, 0, 186,
	0, 187, 328, 0, 329, 0, 188, 189, 190, 191,
	192, 330, 331, 0, 0, 196, 0, 193, 0, 0,
	194, 332, 195, 333, 334, 335, 336, 337, 0, 338,
	0, 0, 197, 198, 199, 0, 200, 201, 202, 0,
	204, 203, 0, 339, 0, 205, 0, 0, 206, 0,
	0, 207, 0, 208, 209, 210, 212, 340, 211, 0,
	213, 214, 216, 215, 0, 0, 0, 341, 217, 342,
	218, 219, 0, 220, 0, 0, 221, 0, 0, 222,
	343, 0, 223, 0, 344, 224, 225, 226, 227, 228,
	0, 229, 345, 230, 346, 231, 0, 232, 233, 234,
	235, 236, 237, 347, 238, 239, 0, 240, 241, 242,
	243, 244, 246, 247, 245, 248, 249, 250, 251, 0,
	252, 0, 253, 254, 348, 255, 0, 259, 260, 261,
	262, 0, 264, 349, 263, 265, 266, 0, 267, 256,
	257, 268, 0, 269, 350, 351, 270, 0, 277, 271,
	272, 258, 273, 276, 352, 274, 275, 353, 0, 278,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 354,
	355, 356, 0, 0, 286, 287, 357, 358, 0, 288,
	289, 290, 291, 0, 0, 292, 293, 294, 295, 0,
	296, 0, 359, 297, 298, 299, 360, 361, 0, 0,
	300, 0, 144, 0, 0, 301, 302, 303, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 148,
	0, 149, 0, 0, 0, 0, 306, 0, 0, 0,
	1284, 150, 151, 152, 307, 308, 309, 310, 153, 311,
	312, 0, 154, 313, 314, 155, 156, 157, 0, 0,
	315, 316, 317, 0, 158, 318, 0, 0, 0, 159,
	160, 161, 0, 162, 0, 163, 164, 165, 0, 0,
	166, 167, 168, 0, 0, 0, 0, 0, 0, 0,
	169, 170, 364, 171, 319, 172, 320, 321, 0, 173,
	0, 174, 0, 175, 0, 0, 176, 177, 0, 178,
	0, 0, 0, 322, 179, 180, 181, 323, 324, 0,
	0, 0, 182, 183, 325, 326, 327, 0, 184, 0,
	185, 0, 0, 0, 186, 0, 187, 328, 0, 329,
	0, 188, 189, 190, 191, 192, 330, 331, 0, 0,
	196, 0, 193, 0, 0, 194, 332, 195, 333, 334,
	335, 336, 337, 0, 338, 0, 0, 197, 198, 199,
	0, 200, 201, 202, 0, 204, 203, 0, 339, 0,
	205, 0, 0, 206, 0, 0, 207, 0, 208, 209,
	210, 212, 340, 211, 0, 213, 214, 216, 215, 0,
	0, 0, 341, 217, 342, 218, 219, 0, 220, 0,
	0, 221, 0, 0, 222, 343, 0, 223, 0, 344,
	224, 225, 226, 227, 228, 0, 229, 345, 230, 346,
	231, 0, 232, 233, 234, 235, 236, 237, 347, 238,
	239, 0, 240, 241, 242, 243, 244, 246, 247, 245,
	248, 249, 250, 251, 0, 252, 0, 253, 254, 348,
	255, 0, 259, 260, 261, 262, 0, 264, 349, 263,
	265, 266, 0, 267, 256, 257, 268, 0, 269, 350,
	351, 270, 0, 277, 271, 272, 258, 273, 276, 352,
	274, 275, 353, 0, 278, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 354, 355, 356, 0, 0, 286,
	287, 357, 358, 0, 288, 289, 290, 291, 0, 0,
	292, 293, 294, 295, 0, 296, 0, 359, 297, 298,
	299, 360, 361, 0, 0, 300, 0, 144, 0, 0,
	301, 302, 303, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 148, 0, 149, 0, 0, 0,
	0, 306, 0, 0, 0, 1886, 150, 151, 152, 307,
	308, 309, 310, 153, 311, 312, 0, 154, 313, 314,
	155, 156, 157, 0, 0, 315, 316, 317, 0, 158,
	318, 0, 0, 0, 159, 160, 161, 0, 162, 0,
	163, 164, 165, 0, 0, 166, 167, 168, 0, 0,
	0, 0, 0, 0, 0, 169, 170, 364, 171, 319,
	172, 320, 321, 0, 173, 0, 174, 0, 175, 0,
	0, 176, 177, 0, 178, 0, 0, 0, 322, 179,
	180, 181, 323, 324, 0, 0, 0, 182, 183, 325,
	326, 327, 0, 184, 0, 185, 0, 0, 0, 186,
	0, 187, 328, 0, 329, 0, 188, 189, 190, 191,
	192, 330, 331, 0, 0, 196, 0, 193, 0, 0,
	194, 332, 195, 333, 334, 335, 336, 337, 0, 338,
	0, 0, 197, 198, 199, 0, 200, 201, 202, 0,
	204, 203, 0, 339, 0, 205, 0, 0, 206, 0,
	0, 207, 0, 208, 209, 210, 212, 340, 211, 0,
	213, 214, 216, 215, 0, 0, 0, 341, 217, 342,
	218, 219, 0, 220, 0, 0, 221, 0, 0, 222,
	343, 0, 223, 0, 344, 224, 225, 226, 227, 228,
	0, 229, 345, 230, 346, 231, 0, 232, 233, 234,
	235, 236, 237, 347, 238, 239, 0, 240, 241, 242,
	243, 244, 246, 247, 245, 248, 249, 250, 251, 0,
	252, 0, 253, 254, 348, 255, 0, 259, 260, 261,
	262, 0, 264, 349, 263, 265, 266, 0, 267, 256,
	257, 268, 0, 269, 350, 351, 270, 0, 277, 271,
	272, 258, 273, 276, 352, 274, 275, 353, 0, 278,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 354,
	355, 356, 0, 0, 286, 287, 357, 358, 0, 288,
	289, 290, 291, 0, 0, 292, 293, 294, 295, 0,
	296, 0, 359, 297, 298, 299, 360, 361, 0, 0,
	300, 0, 0, 0, 0, 301, 302, 303, 304, 305,
	713, 702, 703, 700, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 148, 0, 149,
	926, 0, 0, 0, 306, 0, 0, 0, 0, 150,
	151, 152, 307, 745, 309, 746, 153, 747, 748, 0,
	154, 313, 314, 155, 156, 157, 0, 0, 749, 750,
	317, 0, 158, 318, 0, 411, 0, 159, 160, 161,
	0, 162, 0, 163, 164, 165, 0, 412, 166, 167,
	168, 0, 0, 0, 0, 0, 0, 0, 169, 170,
	364, 171, 751, 172, 752, 753, 0, 173, 0, 174,
	0, 175, 0, 0, 744, 177, 0, 178, 0, 0,
	0, 322, 179, 180, 181, 323, 324, 709, 0, 0,
	182, 183, 754, 755, 756, 0, 184, 0, 185, 0,
	0, 413, 186, 0, 187, 328, 0, 329, 0, 188,
	189, 190, 191, 192, 330, 331, 415, 0, 196, 0,
	193, 0, 414, 194, 757, 195, 758, 759, 760, 761,
	762, 0, 720, 0, 416, 197, 198, 199, 417, 200,
	201, 202, 0, 204, 203, 0, 339, 418, 205, 419,
	0, 206, 0, 0, 207, 0, 208, 209, 210, 212,
	340, 211, 420, 213, 214, 216, 215, 0, 0, 710,
	341, 217, 763, 218, 219, 0, 220, 0, 0, 221,
	0, 0, 222, 343, 421, 223, 422, 344, 224, 225,
	226, 227, 228, 0, 229, 345, 230, 346, 231, 0,
	232, 233, 234, 235, 236, 237, 764, 238, 239, 0,
	240, 241, 242, 243, 244, 246, 247, 245, 248, 249,
	250, 251, 0, 252, 423, 253, 254, 348, 255, 0,
	259, 260, 261, 262, 0, 264, 349, 263, 265, 266,
	0, 267, 256, 257, 268, 424, 269, 765, 351, 270,
	0, 277, 271, 272, 258, 273, 276, 766, 274, 275,
	353, 0, 278, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 354, 767, 768, 0, 0, 286, 287, 357,
	358, 708, 288, 289, 290, 291, 0, 0, 292, 293,
	294, 295, 0, 296, 0, 359, 297, 298, 299, 360,
	769, 582, 579, 300, 0, 0, 854, 0, 301, 302,
	303, 304, 305, 0, 0, 0, 0, 147, 148, 0,
	149, 0, 0, 0, 0, 306, 0, 0, 0, 0,
	150, 151, 152, 307, 308, 309, 310, 153, 311, 312,
	0, 154, 313, 314, 155, 156, 157, 0, 0, 315,
	316, 317, 0, 158, 318, 0, 411, 0, 159, 160,
	161, 0, 162, 0, 163, 164, 165, 0, 412, 166,
	167, 168, 0, 0, 0, 0, 0, 0, 0, 169,
	170, 364, 171, 319, 172, 320, 321, 0, 173, 0,
	174, 0, 175, 0, 0, 176, 177, 0, 178, 0,
	0, 0, 322, 179, 180, 181, 323, 324, 0, 0,
	0, 182, 183, 325, 326, 327, 0, 184, 0, 185,
	0, 0, 413, 186, 0, 187, 328, 0, 329, 0,
	188, 189, 190, 191, 192, 330, 331, 415, 0, 196,
	0, 193, 0, 414, 194, 332, 195, 333, 334, 335,
	336, 337, 0, 338, 0, 416, 197, 198, 199, 417,
	200, 201, 202, 0, 204, 203, 0, 339, 418, 205,
	419, 0, 206, 0, 0, 207, 0, 208, 209, 210,
	212, 340, 211, 420, 213, 214, 216, 215, 0, 0,
	0, 341, 217, 342, 218, 219, 0, 220, 0, 0,
	221, 0, 0, 222, 343, 421, 223, 422, 344, 224,
	225, 226, 227, 228, 0, 229, 345, 230, 346, 231,
	0, 232, 233, 234, 235, 236, 237, 347, 238, 239,
	0, 240, 241, 242, 243, 244, 246, 247, 245, 248,
	249, 250, 251, 0, 252, 423, 253, 254, 348, 255,
	0, 259, 260, 261, 262, 0, 264, 349, 263, 265,
	266, 0, 267, 256, 257, 268, 424, 269, 350, 351,
	270, 0, 277, 271, 272, 258, 273, 276, 352, 274,
	275, 353, 0, 278, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 354, 355, 356, 0, 0, 286, 287,
	357, 358, 0, 288, 289, 290, 291, 0, 0, 292,
	293, 294, 295, 0, 296, 0, 359, 297, 298, 299,
	360, 361, 144, 0, 300, 0, 0, 0, 0, 301,
	302, 303, 304, 305, 0, 0, 0, 0, 147, 148,
	0, 149, 0, 0, 0, 0, 306, 0, 0, 0,
	0, 150, 151, 152, 307, 308, 309, 310, 153, 311,
	312, 0, 154, 313, 314, 155, 156, 157, 0, 0,
	315, 316, 317, 0, 158, 318, 0, 0, 0, 159,
	160, 161, 0, 162, 0, 163, 164, 165, 0, 0,
	166, 167, 168, 0, 0, 0, 0, 0, 0, 0,
	169, 170, 140, 171, 319, 172, 320, 321, 0, 173,
	0, 174, 0, 175, 0, 0, 176, 177, 0, 178,
	0, 0, 0, 322, 179, 180, 181, 323, 324, 0,
	0, 0, 182, 183, 325, 326, 327, 0, 184, 0,
	185, 0, 0, 0, 186, 0, 187, 328, 0, 329,
	0, 188, 189, 190, 191, 192, 330, 331, 0, 0,
	196, 0, 193, 0, 0, 194, 332, 195, 333, 334,
	335, 336, 337, 0, 338, 0, 0, 197, 198, 199,
	0, 200, 201, 202, 0, 204, 203, 0, 339, 0,
	205, 0, 0, 206, 0, 0, 207, 0, 208, 209,
	210, 212, 340, 211, 0, 213, 214, 216, 215, 0,
	0, 0, 341, 217, 342, 218, 219, 0, 220, 0,
	0, 221, 0, 0, 222, 343, 0, 223, 0, 344,
	224, 225, 226, 227, 228, 0, 229, 345, 230, 346,
	231, 0, 232, 233, 234, 235, 236, 237, 347, 238,
	239, 0, 240, 241, 242, 243, 244, 246, 247, 245,
	248, 249, 250, 251, 0, 252, 0, 253, 254, 348,
	255, 0, 259, 260, 261, 262, 0, 264, 349, 263,
	265, 266, 0, 267, 256, 257, 268, 0, 269, 350,
	351, 270, 0, 277, 271, 272, 258, 273, 276, 352,
	274, 275, 353, 0, 278, 139, 279, 280, 281, 282,
	283, 284, 285, 0, 354, 355, 356, 0, 0, 286,
	287, 357, 358, 0, 288, 289, 290, 291, 0, 0,
	292, 293, 294, 295, 0, 296, 0, 359, 297, 298,
	299, 360, 361, 582, 579, 300, 0, 0, 0, 0,
	301, 302, 303, 304, 305, 0, 0, 0, 0, 147,
	148, 0, 149, 0, 0, 0, 0, 306, 143, 0,
	0, 0, 150, 151, 152, 307, 308, 309, 310, 153,
	311, 312, 0, 154, 313, 314, 155, 156, 157, 0,
	0, 315, 316, 317, 0, 158, 318, 0, 411, 0,
	159, 160, 161, 0, 162, 0, 163, 164, 165, 0,
	412, 166, 167, 168, 0, 0, 0, 0, 0, 0,
	0, 169, 170, 364, 171, 319, 172, 320, 321, 0,
	173, 0, 174, 0, 175, 0, 0, 176, 177, 0,
	178, 0, 0, 0, 322, 179, 180, 181, 323, 324,
	0, 0, 0, 182, 183, 325, 326, 327, 0, 184,
	0, 185, 0, 0, 413, 186, 0, 187, 328, 0,
	329, 0, 188, 189, 190, 191, 192, 330, 331, 415,
	0, 196, 0, 193, 0, 414, 194, 332, 195, 333,
	334, 335, 336, 337, 0, 338, 0, 416, 197, 198,
	199, 417, 200, 201, 202, 0, 204, 203, 0, 339,
	418, 205, 419, 0, 206, 0, 0, 207, 0, 208,
	209, 210, 212, 340, 211, 420, 213, 214, 216, 215,
	0, 0, 0, 341, 217, 342, 218, 219, 0, 220,
	0, 0, 221, 0, 0, 222, 343, 421, 223, 422,
	344, 224, 225, 226, 227, 228, 0, 229, 345, 230,
	346, 231, 0, 232, 233, 234, 235, 236, 237, 347,
	238, 239, 0, 240, 241, 242, 243, 244, 246, 247,
	245, 248, 249, 250, 251, 0, 252, 423, 253, 254,
	348, 255, 0, 259, 260, 261, 262, 0, 264, 349,
	263, 265, 266, 0, 267, 256, 257, 268, 424, 269,
	350, 351, 270, 0, 277, 271, 272, 258, 273, 276,
	352, 274, 275, 353, 0, 278, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 354, 355, 356, 0, 0,
	286, 287, 357, 358, 0, 288, 289, 290, 291, 0,
	0, 292, 293, 294, 295, 0, 296, 0, 359, 297,
	298, 299, 360, 361, 144, 0, 300, 0, 0, 0,
	0, 301, 302, 303, 304, 305, 0, 0, 0, 0,
	147, 148, 0, 149, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 150, 151, 152, 307, 308, 309, 310,
	153, 311, 312, 0, 154, 313, 314, 155, 156, 157,
	0, 0, 315, 316, 317, 0, 158, 318, 0, 0,
	0, 159, 160, 161, 0, 162, 0, 163, 164, 165,
	0, 0, 166, 167, 168, 0, 0, 0, 0, 0,
	0, 0, 169, 170, 364, 171, 319, 172, 320, 321,
	0, 173, 0, 174, 0, 175, 0, 0, 176, 177,
	0, 178, 0, 0, 0, 322, 179, 180, 181, 323,
	324, 0, 0, 0, 182, 183, 325, 326, 327, 0,
	184, 0, 185, 0, 0, 0, 186, 0, 187, 328,
	0, 329, 0, 188, 189, 190, 191, 192, 330, 331,
	0, 0, 196, 0, 193, 0, 0, 194, 332, 195,
	333, 334, 335, 336, 337, 0, 338, 0, 0, 197,
	198, 199, 0, 200, 201, 202, 0, 204, 203, 0,
	339, 0, 205, 0, 0, 206, 0, 0, 207, 0,
	208, 209, 210, 212, 340, 211, 0, 213, 214, 216,
	215, 0, 0, 0, 341, 217, 342, 218, 219, 0,
	220, 0, 0, 221, 0, 0, 222, 343, 0, 223,
	0, 344, 224, 225, 226, 227, 228, 0, 229, 345,
	230, 346, 231, 0, 232, 233, 234, 235, 236, 237,
	347, 238, 239, 0, 240, 241, 242, 243, 244, 246,
	247, 245, 248, 249, 250, 251, 0, 252, 0, 253,
	254, 348, 255, 0, 259, 260, 261, 262, 0, 264,
	349, 263, 265, 266, 0, 267, 256, 257, 268, 0,
	269, 350, 351, 270, 0, 277, 271, 272, 258, 273,
	276, 352, 274, 275, 353, 0, 278, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 354, 355, 356, 0,
	0, 286, 287, 357, 358, 0, 288, 289, 290, 291,
	0, 0, 292, 293, 294, 295, 0, 296, 0, 359,
	297, 298, 299, 360, 361, 582, 0, 300, 0, 0,
	0, 0, 301, 302, 303, 304, 305, 0, 0, 0,
	0, 147, 148, 0, 149, 0, 0, 0, 0, 306,
	143, 0, 0, 0, 150, 151, 152, 307, 308, 309,
	310, 153, 311, 312, 0, 154, 313, 314, 155, 156,
	157, 0, 0, 315, 316, 317, 0, 158, 318, 0,
	411, 0, 159, 160, 161, 0, 162, 0, 163, 164,
	165, 0, 412, 166, 167, 168, 0, 0, 0, 0,
	0, 0, 0, 169, 170, 364, 171, 319, 172, 320,
	321, 0, 173, 0, 174, 0, 175, 0, 0, 176,
	177, 0, 178, 0, 0, 0, 322, 179, 180, 181,
	323, 324, 0, 0, 0, 182, 183, 325, 326, 327,
	0, 184, 0, 185, 0, 0, 413, 186, 0, 187,
	328, 0, 329, 0, 188, 189, 190, 191, 192, 330,
	331, 415, 0, 196, 0, 193, 0, 414, 194, 332,
	195, 333, 334, 335, 336, 337, 0, 338, 0, 416,
	197, 198, 199, 417, 200, 201, 202, 0, 204, 203,
	0, 339, 418, 205, 419, 0, 206, 0, 0, 207,
	0, 208, 209, 210, 212, 340, 211, 420, 213, 214,
	216, 215, 0, 0, 0, 341, 217, 342, 218, 219,
	0, 220, 0, 0, 221, 0, 0, 222, 343, 421,
	223, 422, 344, 224, 225, 226, 227, 228, 0, 229,
	345, 230, 346, 231, 0, 232, 233, 234, 235, 236,
	237, 347, 238, 239, 0, 240, 241, 242, 243, 244,
	246, 247, 245, 248, 249, 250, 251, 0, 252, 423,
	253, 254, 348, 255, 0, 259, 260, 261, 262, 0,
	264, 349, 263, 265, 266, 0, 267, 256, 257, 268,
	424, 269, 350, 351, 270, 0, 277, 271, 272, 258,
	273, 276, 352, 274, 275, 353, 0, 278, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 354, 355, 356,
	0, 0, 286, 287, 357, 358, 0, 288, 289, 290,
	291, 0, 0, 292, 293, 294, 295, 0, 296, 0,
	359, 297, 298, 299, 360, 361, 144, 0, 300, 0,
	0, 0, 0, 301, 302, 303, 304, 305, 0, 0,
	0, 0, 147, 148, 0, 149, 0, 0, 0, 0,
	306, 0, 0, 0, 0, 150, 151, 152, 307, 308,
	309, 310, 153, 311, 312, 0, 154, 313, 314, 155,
	156, 157, 0, 0, 315, 316, 317, 1304, 158, 318,
	0, 0, 0, 159, 160, 161, 0, 162, 1302, 163,
	164, 165, 0, 0, 166, 167, 168, 0, 0, 0,
	0, 0, 0, 0, 169, 170, 364, 171, 319, 172,
	320, 321, 0, 173, 0, 174, 0, 175, 0, 0,
	176, 177, 0, 178, 0, 0, 0, 322, 179, 180,
	181, 323, 324, 0, 1301, 0, 182, 183, 325, 326,
	327, 0, 184, 0, 185, 1306, 0, 0, 186, 0,
	187, 328, 0, 329, 0, 188, 189, 190, 191, 192,
	330, 331, 0, 0, 196, 1299, 193, 0, 0, 194,
	332, 195, 333, 334, 335, 336, 337, 0, 338, 0,
	0, 197, 198, 199, 0, 200, 201, 202, 0, 204,
	203, 0, 339, 0, 205, 0, 0, 206, 0, 0,
	207, 0, 208, 209, 210, 212, 340, 211, 0, 213,
	214, 216, 215, 0, 0, 0, 341, 217, 342, 218,
	219, 0, 220, 0, 0, 221, 0, 0, 222, 343,
	0, 223, 0, 344, 224, 225, 226, 227, 228, 0,
	229, 345, 230, 346, 231, 1305, 232, 233, 234, 235,
	236, 237, 347, 238, 239, 0, 240, 241, 242, 243,
	244, 246, 247, 245, 248, 249, 250, 251, 0, 252,
	0, 253, 254, 348, 255, 0, 259, 260, 261, 262,
	0, 264, 349, 263, 265, 266, 0, 267, 256, 257,
	268, 0, 269, 350, 351, 270, 0, 277, 271, 272,
	258, 273, 276, 352, 274, 275, 353, 0, 278, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 354, 355,
	356, 0, 0, 286, 287, 357, 358, 0, 288, 289,
	290, 291, 0, 1300, 292, 293, 294, 295, 0, 296,
	0, 359, 297, 298, 299, 360, 361, 144, 0, 300,
	0, 0, 0, 0, 301, 302, 303, 304, 305, 0,
	0, 0, 0, 147, 148, 0, 149, 0, 0, 0,
	0, 306, 0, 0, 0, 0, 150, 151, 152, 307,
	308, 309, 310, 153, 311, 312, 0, 154, 313, 314,
	155, 156, 157, 0, 0, 315, 316, 317, 1304, 158,
	318, 0, 0, 1526, 159, 160, 161, 0, 162, 1302,
	163, 164, 165, 0, 0, 166, 167, 168, 0, 0,
	0, 0, 0, 0, 0, 169, 170, 364, 171, 319,
	172, 320, 321, 0, 173, 0, 174, 0, 175, 0,
	0, 176, 177, 0, 178, 0, 0, 0, 322, 179,
	180, 181, 323, 324, 0, 0, 0, 182, 183, 325,
	326, 327, 0, 184, 0, 185, 1306, 0, 0, 186,
	0, 187, 328, 0, 329, 0, 188, 189, 190, 191,
	192, 1525, 331, 0, 0, 196, 0, 193, 0, 0,
	194, 332, 195, 333, 334, 335, 336, 337, 0, 338,
	0, 0, 197, 198, 199, 0, 200, 201, 202, 0,
	204, 203, 0, 339, 0, 205, 0, 0, 206, 0,
	0, 207, 0, 208, 209, 210, 212, 340, 211, 0,
	213, 214, 216, 215, 0, 0, 0, 341, 217, 342,
	218, 219, 0, 220, 0, 0, 221, 0, 0, 222,
	343, 0, 223, 0, 344, 224, 225, 226, 227, 228,
	0, 229, 345, 230, 346, 231, 1305, 232, 233, 234,
	235, 236, 237, 347, 238, 239, 0, 240, 241, 242,
	243, 244, 246, 247, 245, 248, 249, 250, 251, 0,
	252, 0, 253, 254, 348, 255, 0, 259, 260, 261,
	262, 0, 264, 349, 263, 265, 266, 0, 267, 256,
	257, 268, 0, 269, 350, 351, 270, 0, 277, 271,
	272, 258, 273, 276, 352, 274, 275, 353, 0, 278,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 354,
	355, 356, 0, 0, 286, 287, 357, 358, 0, 288,
	289, 290, 291, 0, 1528, 292, 293, 294, 295, 0,
	296, 0, 359, 297, 298, 299, 360, 361, 144, 0,
	300, 0, 0, 0, 0, 301, 302, 303, 304, 305,
	0, 0, 0, 0, 147, 148, 0, 149, 0, 0,
	0, 0, 306, 0, 1257, 0, 0, 150, 151, 152,
	307, 308, 309, 310, 153, 311, 312, 0, 154, 313,
	314, 155, 156, 157, 0, 0, 315, 316, 317, 0,
	158, 318, 0, 0, 0, 159, 160, 161, 0, 162,
	0, 163, 164, 165, 0, 0, 166, 167, 168, 0,
	0, 0, 0, 0, 0, 0, 169, 170, 364, 171,
	319, 172, 320, 321, 0, 173, 0, 174, 0, 175,
	0, 0, 176, 177, 0, 178, 0, 0, 0, 322,
	179, 180, 181, 323, 324, 0, 0, 0, 182, 183,
	325, 326, 327, 0, 184, 0, 185, 0, 0, 0,
	186, 0, 187, 328, 0, 329, 0, 188, 189, 190,
	191, 192, 330, 331, 0, 0, 196, 0, 193, 0,
	0, 194, 332, 195, 333, 334, 335, 336, 337, 0,
	338, 0, 0, 197, 198, 199, 0, 200, 201, 202,
	0, 204, 203, 0, 339, 0, 205, 0, 0, 206,
	0, 0, 207, 0, 208, 209, 210, 212, 340, 211,
	0, 213, 214, 216, 215, 0, 0, 0, 341, 217,
	342, 218, 219, 0, 220, 0, 0, 221, 0, 0,
	222, 343, 0, 223, 0, 344, 224, 225, 226, 227,
	228, 0, 229, 345, 230, 346, 231, 0, 232, 233,
	234, 235, 236, 237, 347, 238, 239, 0, 240, 241,
	242, 243, 244, 246, 247, 245, 248, 249, 250, 251,
	0, 252, 0, 253, 254, 348, 255, 0, 259, 260,
	261, 262, 0, 264, 349, 263, 265, 266, 0, 267,
	256, 257, 268, 0, 269, 350, 351, 270, 0, 277,
	271, 272, 258, 273, 276, 352, 274, 275, 353, 0,
	278, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	354, 355, 356, 0, 0, 286, 287, 357, 358, 0,
	288, 289, 290, 291, 0, 0, 292, 293, 294, 295,
	0, 296, 0, 359, 297, 298, 299, 360, 361, 144,
	0, 300, 0, 0, 0, 0, 301, 302, 303, 304,
	305, 0, 0, 0, 0, 147, 148, 0, 149, 0,
	0, 0, 0, 306, 0, 0, 0, 0, 150, 151,
	152, 307, 308, 309, 310, 153, 311, 312, 0, 154,
	313, 314, 155, 156, 157, 0, 0, 315, 316, 317,
	0, 158, 318, 0, 0, 0, 159, 160, 161, 0,
	162, 0, 163, 164, 165, 0, 0, 166, 167, 168,
	0, 0, 0, 0, 0, 0, 0, 169, 170, 364,
	171, 319, 172, 320, 321, 0, 173, 0, 174, 0,
	175, 0, 0, 176, 177, 0, 178, 0, 0, 0,
	322, 179, 180, 181, 323, 324, 0, 0, 0, 182,
	183, 325, 326, 327, 0, 184, 0, 185, 0, 0,
	0, 186, 0, 187, 328, 0, 329, 0, 188, 189,
	190, 191, 192, 330, 331, 0, 0, 196, 0, 193,
	0, 0, 194, 332, 195, 333, 334, 335, 336, 337,
	0, 338, 0, 0, 197, 198, 199, 0, 200, 201,
	202, 0, 204, 203, 0, 339, 0, 205, 0, 0,
	206, 0, 0, 207, 0, 208, 209, 210, 212, 340,
	211, 0, 213, 214, 216, 215, 0, 0, 0, 341,
	217, 342, 218, 219, 0, 220, 0, 642, 221, 0,
	0, 222, 343, 0, 223, 0, 344, 224, 225, 226,
	227, 228, 0, 229, 345, 230, 346, 231, 0, 232,
	233, 234, 235, 236, 237, 347, 238, 239, 0, 240,
	241, 242, 243, 244, 246, 247, 245, 248, 249, 250,
	251, 0, 252, 0, 253, 254, 348, 255, 0, 259,
	260, 261, 262, 0, 264, 349, 263, 265, 266, 0,
	267, 256, 257, 268, 0, 269, 350, 351, 270, 0,
	277, 271, 272, 258, 273, 276, 352, 274, 275, 353,
	0, 278, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 354, 355, 356, 0, 0, 286, 287, 357, 358,
	0, 288, 289, 290, 291, 0, 0, 292, 293, 294,
	295, 0, 296, 0, 359, 297, 298, 299, 360, 361,
	144, 0, 300, 0, 0, 0, 0, 301, 302, 303,
	304, 305, 0, 0, 0, 0, 147, 148, 1186, 149,
	0, 0, 0, 0, 306, 0, 0, 0, 0, 150,
	151, 152, 307, 308, 309, 310, 153, 311, 312, 0,
	154, 313, 314, 155, 156, 157, 0, 0, 315, 316,
	317, 0, 158, 318, 0, 0, 0, 159, 160, 161,
	0, 162, 0, 163, 164, 165, 0, 0, 166, 167,
	168, 0, 0, 0, 0, 0, 0, 0, 169, 170,
	364, 171, 319, 172, 320, 321, 0, 173, 0, 174,
	0, 175, 0, 0, 176, 177, 0, 178, 0, 0,
	0, 322, 179, 180, 181, 323, 324, 0, 0, 0,
	182, 183, 325, 326, 327, 0, 184, 0, 185, 0,
	0, 0, 186, 0, 187, 328, 0, 329, 0, 188,
	189, 190, 191, 192, 330, 331, 0, 0, 196, 0,
	193, 0, 0, 194, 332, 195, 333, 334, 335, 336,
	337, 0, 338, 0, 0, 197, 198, 199, 0, 200,
	201, 202, 0, 204, 203, 0, 339, 0, 205, 0,
	0, 206, 0, 0, 207, 0, 208, 209, 210, 212,
	340, 211, 0, 213, 214, 216, 215, 0, 0, 0,
	341, 217, 342, 218, 219, 0, 220, 0, 0, 221,
	0, 0, 222, 343, 0, 223, 0, 344, 224, 225,
	226, 227, 228, 0, 229, 345, 230, 346, 231, 0,
	232, 233, 234, 235, 236, 237, 347, 238, 239, 0,
	240, 241, 242, 243, 244, 246, 247, 245, 248, 249,
	250, 251, 0, 252, 0, 253, 254, 348, 255, 0,
	259, 260, 261, 262, 0, 264, 349, 263, 265, 266,
	0, 267, 256, 257, 268, 0, 269, 350, 351, 270,
	0, 277, 271, 272, 258, 273, 276, 352, 274, 275,
	353, 0, 278, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 354, 355, 356, 0, 0, 286, 287, 357,
	358, 0, 288, 289, 290, 291, 0, 0, 292, 293,
	294, 295, 0, 296, 0, 359, 297, 298, 299, 360,
	361, 144, 0, 300, 0, 0, 0, 0, 301, 302,
	303, 304, 305, 0, 0, 0, 0, 147, 148, 0,
	149, 0, 0, 0, 0, 306, 0, 0, 0, 0,
	150, 151, 152, 307, 308, 309, 310, 153, 311, 312,
	0, 154, 313, 314, 155, 156, 157, 0, 0, 315,
	316, 317, 0, 158, 318, 0, 0, 0, 159, 160,
	161, 0, 162, 0, 163, 164, 165, 0, 0, 166,
	167, 168, 0, 0, 0, 0, 0, 0, 0, 169,
	170, 364, 171, 319, 172, 320, 321, 0, 173, 0,
	174, 0, 175, 0, 0, 176, 177, 0, 178, 0,
	0, 0, 322, 179, 180, 181, 323, 324, 0, 0,
	0, 182, 183, 325, 326, 327, 0, 184, 0, 185,
	0, 0, 0, 186, 0, 187, 328, 0, 329, 0,
	188, 189, 190, 191, 192, 891, 331, 0, 0, 196,
	0, 193, 0, 0, 194, 332, 195, 333, 334, 335,
	336, 337, 0, 338, 0, 0, 197, 198, 199, 0,
	200, 201, 202, 0, 204, 203, 0, 339, 0, 205,
	0, 0, 206, 0, 0, 207, 0, 208, 209, 210,
	212, 340, 211, 0, 213, 214, 216, 215, 0, 0,
	0, 341, 217, 342, 218, 219, 0, 220, 0, 642,
	221, 0, 0, 222, 343, 0, 223, 0, 344, 224,
	225, 226, 227, 228, 0, 229, 345, 230, 346, 231,
	0, 232, 233, 234, 235, 236, 237, 347, 238, 239,
	0, 240, 241, 242, 243, 244, 246, 247, 245, 248,
	249, 250, 251, 0, 252, 0, 253, 254, 348, 255,
	0, 259, 260, 261, 262, 0, 264, 349, 263, 265,
	266, 0, 267, 256, 257, 268, 0, 269, 350, 351,
	270, 0, 277, 271, 272, 258, 273, 276, 352, 274,
	275, 353, 0, 278, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 354, 355, 356, 0, 0, 286, 287,
	357, 358, 0, 288, 289, 290, 291, 0, 0, 292,
	293, 294, 295, 0, 296, 0, 359, 297, 298, 299,
	360, 361, 144, 0, 300, 0, 0, 0, 0, 301,
	302, 303, 304, 305, 0, 0, 0, 0, 147, 148,
	0, 149, 0, 0, 0, 0, 306, 0, 0, 0,
	0, 150, 151, 152, 307, 308, 309, 310, 153, 311,
	312, 0, 154, 313, 314, 155, 156, 157, 0, 0,
	315, 316, 317, 0, 158, 318, 0, 0, 0, 159,
	160, 161, 0, 162, 0, 163, 164, 165, 0, 0,
	166, 167, 168, 0, 0, 0, 0, 0, 0, 0,
	169, 170, 364, 171, 319, 172, 320, 321, 0, 173,
	0, 174, 0, 175, 0, 0, 176, 177, 0, 178,
	0, 0, 0, 322, 179, 180, 181, 323, 324, 0,
	0, 0, 182, 183, 325, 326, 327, 0, 184, 0,
	185, 0, 0, 0, 186, 0, 187, 328, 0, 329,
	0, 188, 189, 190, 191, 192, 885, 331, 0, 0,
	196, 0, 193, 0, 0, 194, 332, 195, 333, 334,
	335, 336, 337, 0, 338, 0, 0, 197, 198, 199,
	0, 200, 201, 202, 0, 204, 203, 0, 339, 0,
	205, 0, 0, 206, 0, 0, 207, 0, 208, 209,
	210, 212, 340, 211, 0, 213, 214, 216, 215, 0,
	0, 0, 341, 217, 342, 218, 219, 0, 220, 0,
	642, 221, 0, 0, 222, 343, 0, 223, 0, 344,
	224, 225, 226, 227, 228, 0, 229, 345, 230, 346,
	231, 0, 232, 233, 234, 235, 236, 237, 347, 238,
	239, 0, 240, 241, 242, 243, 244, 246, 247, 245,
	248, 249, 250, 251, 0, 252, 0, 253, 254, 348,
	255, 0, 259, 260, 261, 262, 0, 264, 349, 263,
	265, 266, 0, 267, 256, 257, 268, 0, 269, 350,
	351, 270, 0, 277, 271, 272, 258, 273, 276, 352,
	274, 275, 353, 0, 278, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 354, 355, 356, 0, 0, 286,
	287, 357, 358, 0, 288, 289, 290, 291, 0, 0,
	292, 293, 294, 295, 0, 296, 0, 359, 297, 298,
	299, 360, 361, 144, 0, 300, 0, 0, 0, 0,
	301, 302, 303, 304, 305, 0, 0, 0, 0, 147,
	148, 660, 149, 0, 0, 0, 0, 306, 0, 0,
	0, 0, 150, 151, 152, 307, 308, 309, 310, 153,
	311, 312, 0, 154, 313, 314, 155, 156, 157, 0,
	0, 315, 316, 317, 0, 158, 318, 0, 0, 0,
	159, 160, 161, 0, 162, 0, 163, 164, 165, 0,
	0, 166, 167, 168, 0, 0, 0, 0, 0, 0,
	0, 169, 170, 364, 171, 319, 172, 320, 321, 0,
	173, 0, 174, 0, 175, 0, 0, 176, 177, 0,
	178, 0, 0, 0, 322, 179, 180, 181, 323, 324,
	0, 0, 0, 182, 183, 325, 326, 327, 0, 184,
	0, 185, 0, 0, 0, 186, 0, 187, 328, 0,
	329, 0, 188, 189, 190, 191, 192, 330, 331, 0,
	0, 196, 0, 193, 0, 0, 194, 332, 195, 333,
	334, 335, 336, 337, 0, 338, 0, 0, 197, 198,
	199, 0, 200, 201, 202, 0, 204, 203, 0, 339,
	0, 205, 0, 0, 206, 0, 0, 207, 0, 208,
	209, 210, 212, 340, 211, 0, 213, 214, 216, 215,
	0, 0, 0, 341, 217, 342, 218, 219, 0, 220,
	0, 0, 221, 0, 0, 222, 343, 0, 223, 0,
	344, 224, 225, 226, 227, 228, 0, 229, 345, 230,
	346, 231, 0, 232, 233, 234, 235, 236, 237, 347,
	238, 239, 0, 240, 241, 242, 243, 244, 246, 247,
	245, 248, 249, 250, 251, 0, 252, 0, 253, 254,
	348, 255, 0, 259, 260, 261, 262, 0, 264, 349,
	263, 265, 266, 0, 267, 256, 257, 268, 0, 269,
	350, 351, 270, 0, 277, 271, 272, 258, 273, 276,
	352, 274, 275, 353, 0, 278, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 354, 355, 356, 0, 0,
	286, 287, 357, 358, 0, 288, 289, 290, 291, 0,
	0, 292, 293, 294, 295, 0, 296, 0, 359, 297,
	298, 299, 360, 361, 144, 0, 300, 0, 0, 0,
	0, 301, 302, 303, 304, 305, 0, 0, 0, 0,
	147, 148, 368, 149, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 150, 151, 152, 307, 308, 309, 310,
	153, 311, 312, 0, 154, 313, 314, 155, 156, 157,
	0, 0, 315, 316, 317, 0, 158, 318, 0, 0,
	0, 159, 160, 161, 0, 162, 0, 163, 164, 165,
	0, 0, 166, 167, 168, 0, 0, 0, 0, 0,
	0, 0, 169, 170, 364, 171, 319, 172, 320, 321,
	0, 173, 0, 174, 0, 175, 0, 0, 176, 177,
	0, 178, 0, 0, 0, 322, 179, 180, 181, 323,
	324, 0, 0, 0, 182, 183, 325, 326, 327, 0,
	184, 0, 185, 0, 0, 0, 186, 0, 187, 328,
	0, 329, 0, 188, 189, 190, 191, 192, 330, 331,
	0, 0, 196, 0, 193, 0, 0, 194, 332, 195,
	333, 334, 335, 336, 337, 0, 338, 0, 0, 197,
	198, 199, 0, 200, 201, 202, 0, 204, 203, 0,
	339, 0, 205, 0, 0, 206, 0, 0, 207, 0,
	208, 209, 210, 212, 340, 211, 0, 213, 214, 216,
	215, 0, 0, 0, 341, 217, 342, 218, 219, 0,
	220, 0, 0, 221, 0, 0, 222, 343, 0, 223,
	0, 344, 224, 225, 226, 227, 228, 0, 229, 345,
	230, 346, 367, 0, 232, 233, 234, 235, 236, 237,
	347, 238, 239, 0, 240, 241, 242, 243, 244, 246,
	247, 245, 248, 249, 250, 251, 0, 252, 0, 253,
	254, 348, 255, 0, 259, 260, 261, 262, 0, 264,
	349, 263, 265, 266, 0, 267, 256, 257, 268, 0,
	269, 350, 351, 270, 0, 277, 271, 272, 258, 273,
	276, 352, 274, 275, 353, 0, 278, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 354, 355, 356, 0,
	0, 286, 287, 357, 358, 0, 288, 289, 290, 291,
	0, 0, 292, 293, 294, 295, 0, 296, 0, 359,
	297, 298, 299, 360, 361, 144, 0, 300, 0, 0,
	0, 0, 301, 302, 303, 304, 305, 0, 0, 0,
	0, 147, 148, 0, 149, 0, 0, 0, 0, 306,
	0, 0, 0, 0, 150, 151, 152, 307, 308, 309,
	310, 153, 311, 312, 0, 154, 313, 314, 155, 156,
	157, 0, 0, 315, 316, 317, 0, 158, 318, 0,
	0, 0, 159, 160, 161, 0, 162, 0, 163, 164,
	165, 0, 0, 166, 167, 168, 0, 0, 0, 0,
	0, 0, 0, 169, 170, 364, 171, 319, 172, 320,
	321, 0, 173, 0, 174, 0, 175, 0, 0, 176,
	177, 0, 178, 0, 0, 0, 322, 179, 180, 181,
	323, 324, 0, 0, 0, 182, 183, 325, 326, 327,
	0, 184, 0, 185, 0, 0, 0, 186, 0, 187,
	328, 0, 329, 0, 188, 189, 190, 191, 192, 330,
	331, 0, 0, 196, 0, 193, 0, 0, 194, 332,
	195, 333, 334, 335, 336, 337, 0, 338, 0, 0,
	197, 198, 199, 0, 200, 201, 202, 0, 204, 203,
	0, 339, 0, 205, 0, 0, 206, 0, 0, 207,
	0, 208, 209, 210, 212, 340, 211, 0, 213, 214,
	216, 215, 0, 0, 0, 341, 217, 342, 218, 219,
	0, 220, 0, 0, 221, 0, 0, 222, 343, 0,
	223, 0, 344, 224, 225, 226, 227, 228, 0, 229,
	345, 230, 346, 231, 0, 232, 233, 234, 235, 236,
	237, 347, 238, 239, 0, 240, 241, 242, 243, 244,
	246, 247, 245, 248, 249, 250, 251, 0, 252, 0,
	253, 254, 348, 255, 0, 259, 260, 261, 262, 0,
	264, 349, 263, 265, 266, 0, 267, 256, 257, 268,
	0, 269, 350, 351, 270, 0, 277, 271, 272, 258,
	273, 276, 352, 274, 275, 353, 0, 278, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 354, 355, 356,
	0, 0, 286, 287, 357, 358, 0, 288, 289, 290,
	291, 0, 0, 292, 293, 294, 295, 0, 296, 0,
	359, 297, 298, 299, 360, 361, 144, 0, 300, 0,
	0, 0, 0, 301, 302, 303, 304, 305, 0, 0,
	0, 0, 147, 148, 0, 149, 0, 0, 0, 0,
	306, 0, 0, 0, 0, 150, 151, 152, 307, 308,
	309, 310, 153, 311, 312, 0, 154, 313, 314, 155,
	156, 157, 0, 0, 315, 316, 317, 0, 158, 318,
	0, 0, 0, 159, 160, 161, 0, 162, 0, 163,
	164, 165, 0, 0, 166, 167, 168, 0, 0, 0,
	0, 0, 0, 0, 169, 170, 364, 171, 319, 172,
	320, 321, 0, 173, 0, 174, 0, 175, 0, 0,
	176, 177, 0, 178, 0, 0, 0, 322, 179, 180,
	181, 323, 324, 0, 0, 0, 182, 183, 325, 326,
	327, 0, 184, 0, 185, 0, 0, 0, 186, 0,
	187, 328, 0, 329, 0, 188, 189, 190, 191, 192,
	1779, 331, 0, 0, 196, 0, 193, 0, 0, 194,
	332, 195, 333, 334, 335, 336, 337, 0, 338, 0,
	0, 197, 198, 199, 0, 200, 201, 202, 0, 204,
	203, 0, 339, 0, 205, 0, 0, 206, 0, 0,
	207, 0, 208, 209, 210, 212, 340, 211, 0, 213,
	214, 216, 215, 0, 0, 0, 341, 217, 342, 218,
	219, 0, 220, 0, 0, 221, 0, 0, 222, 343,
	0, 223, 0, 344, 224, 225, 226, 227, 228, 0,
	229, 345, 230, 346, 231, 0, 232, 233, 234, 235,
	236, 237, 347, 238, 239, 0, 240, 241, 242, 243,
	244, 246, 247, 245, 248, 249, 250, 251, 0, 252,
	0, 253, 254, 348, 255, 0, 259, 260, 261, 262,
	0, 264, 349, 263, 265, 266, 0, 267, 256, 257,
	268, 0, 269, 350, 351, 270, 0, 277, 271, 272,
	258, 273, 276, 352, 274, 275, 353, 0, 278, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 354, 355,
	356, 0, 0, 286, 287, 357, 358, 0, 288, 289,
	290, 291, 0, 0, 292, 293, 294, 295, 0, 296,
	0, 359, 297, 298, 299, 360, 361, 144, 0, 300,
	0, 0, 0, 0, 301, 302, 303, 304, 305, 0,
	0, 0, 0, 147, 148, 0, 149, 0, 0, 0,
	0, 306, 0, 0, 0, 0, 150, 151, 152, 307,
	308, 309, 310, 153, 311, 312, 0, 154, 313, 314,
	155, 156, 157, 0, 0, 315, 316, 317, 0, 158,
	318, 0, 0, 0, 159, 160, 161, 0, 162, 0,
	163, 164, 165, 0, 0, 166, 167, 168, 0, 0,
	0, 0, 0, 0, 0, 169, 170, 364, 171, 319,
	172, 320, 321, 0, 173, 0, 174, 0, 175, 0,
	0, 176, 177, 0, 178, 0, 0, 0, 322, 179,
	180, 181, 323, 324, 0, 0, 0, 182, 183, 325,
	326, 327, 0, 184, 0, 185, 0, 0, 0, 186,
	0, 187, 328, 0, 329, 0, 188, 189, 190, 191,
	192, 1777, 331, 0, 0, 196, 0, 193, 0, 0,
	194, 332, 195, 333, 334, 335, 336, 337, 0, 338,
	0, 0, 197, 198, 199, 0, 200, 201, 202, 0,
	204, 203, 0, 339, 0, 205, 0, 0, 206, 0,
	0, 207, 0, 208, 209, 210, 212, 340, 211, 0,
	213, 214, 216, 215, 0, 0, 0, 341, 217, 342,
	218, 219, 0, 220, 0, 0, 221, 0, 0, 222,
	343, 0, 223, 0, 344, 224, 225, 226, 227, 228,
	0, 229, 345, 230, 346, 231, 0, 232, 233, 234,
	235, 236, 237, 347, 238, 239, 0, 240, 241, 242,
	243, 244, 246, 247, 245, 248, 249, 250, 251, 0,
	252, 0, 253, 254, 348, 255, 0, 259, 260, 261,
	262, 0, 264, 349, 263, 265, 266, 0, 267, 256,
	257, 268, 0, 269, 350, 351, 270, 0, 277, 271,
	272, 258, 273, 276, 352, 274, 275, 353, 0, 278,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 354,
	355, 356, 0, 0, 286, 287, 357, 358, 0, 288,
	289, 290, 291, 0, 0, 292, 293, 294, 295, 0,
	296, 0, 359, 297, 298, 299, 360, 361, 144, 0,
	300, 0, 0, 0, 0, 301, 302, 303, 304, 305,
	0, 0, 0, 0, 147, 148, 0, 149, 0, 0,
	0, 0, 306, 0, 0, 0, 0, 150, 151, 152,
	307, 308, 309, 310, 153, 311, 312, 0, 154, 313,
	314, 155, 156, 157, 0, 0, 315, 316, 317, 0,
	158, 318, 0, 0, 0, 159, 160, 161, 0, 162,
	0, 163, 164, 165, 0, 0, 166, 167, 168, 0,
	0, 0, 0, 0, 0, 0, 169, 170, 364, 171,
	319, 172, 320, 321, 0, 173, 0, 174, 0, 175,
	0, 0, 176, 177, 0, 178, 0, 0, 0, 322,
	179, 180, 181, 323, 324, 0, 0, 0, 182, 183,
	325, 326, 327, 0, 184, 0, 185, 0, 0, 0,
	186, 0, 187, 328, 0, 329, 0, 188, 189, 190,
	191, 192, 1772, 331, 0, 0, 196, 0, 193, 0,
	0, 194, 332, 195, 333, 334, 335, 336, 337, 0,
	338, 0, 0, 197, 198, 199, 0, 200, 201, 202,
	0, 204, 203, 0, 339, 0, 205, 0, 0, 206,
	0, 0, 207, 0, 208, 209, 210, 212, 340, 211,
	0, 213, 214, 216, 215, 0, 0, 0, 341, 217,
	342, 218, 219, 0, 220, 0, 0, 221, 0, 0,
	222, 343, 0, 223, 0, 344, 224, 225, 226, 227,
	228, 0, 229, 345, 230, 346, 231, 0, 232, 233,
	234, 235, 236, 237, 347, 238, 239, 0, 240, 241,
	242, 243, 244, 246, 247, 245, 248, 249, 250, 251,
	0, 252, 0, 253, 254, 348, 255, 0, 259, 260,
	261, 262, 0, 264, 349, 263, 265, 266, 0, 267,
	256, 257, 268, 0, 269, 350, 351, 270, 0, 277,
	271, 272, 258, 273, 276, 352, 274, 275, 353, 0,
	278, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	354, 355, 356, 0, 0, 286, 287, 357, 358, 0,
	288, 289, 290, 291, 0, 0, 292, 293, 294, 295,
	0, 296, 0, 359, 297, 298, 299, 360, 361, 144,
	0, 300, 0, 0, 0, 0, 301, 302, 303, 304,
	305, 0, 0, 0, 0, 147, 148, 0, 149, 0,
	0, 0, 0, 306, 0, 0, 0, 0, 150, 151,
	152, 307, 308, 309, 310, 153, 311, 312, 0, 154,
	313, 314, 155, 156, 157, 0, 0, 315, 316, 317,
	0, 158, 318, 0, 0, 0, 159, 160, 161, 0,
	162, 0, 163, 164, 165, 0, 0, 166, 167, 168,
	0, 0, 0, 0, 0, 0, 0, 169, 170, 364,
	171, 319, 172, 320, 321, 0, 173, 0, 174, 0,
	175, 0, 0, 176, 177, 0, 178, 0, 0, 0,
	322, 179, 180, 181, 323, 324, 0, 0, 0, 182,
	183, 325, 326, 327, 0, 184, 0, 185, 0, 0,
	0, 186, 0, 187, 328, 0, 329, 0, 188, 189,
	190, 191, 192, 330, 331, 0, 0, 196, 0, 193,
	0, 0, 194, 332, 195, 333, 334, 335, 336, 337,
	0, 338, 0, 0, 197, 198, 199, 0, 200, 201,
	202, 0, 204, 203, 0, 339, 0, 205, 0, 0,
	206, 0, 0, 207, 0, 208, 209, 210, 212, 340,
	211, 0, 213, 214, 216, 215, 0, 0, 0, 341,
	217, 342, 218, 219, 0, 220, 0, 0, 221, 0,
	0, 222, 343, 0, 223, 0, 344, 224, 225, 226,
	227, 228, 0, 229, 345, 230, 346, 231, 0, 232,
	233, 234, 235, 236, 237, 347, 238, 239, 0, 240,
	241, 242, 243, 244, 246, 247, 245, 248, 249, 250,
	251, 0, 252, 0, 253, 254, 348, 255, 0, 514,
	260, 261, 262, 0, 264, 349, 263, 265, 266, 0,
	267, 256, 257, 268, 0, 269, 350, 351, 270, 0,
	277, 271, 272, 258, 273, 276, 352, 274, 275, 353,
	0, 278, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 354, 355, 356, 0, 0, 286, 287, 357, 358,
	0, 288, 289, 290, 291, 0, 0, 292, 293, 294,
	295, 0, 296, 0, 359, 297, 298, 299, 360, 361,
	144, 0, 300, 0, 0, 0, 0, 301, 302, 303,
	304, 305, 0, 0, 0, 0, 147, 148, 0, 149,
	0, 0, 0, 0, 306, 0, 0, 0, 0, 150,
	151, 152, 307, 308, 309, 310, 153, 311, 312, 0,
	154, 313, 314, 155, 156, 157, 0, 0, 315, 316,
	317, 0, 158, 318, 0, 0, 0, 159, 160, 161,
	0, 162, 0, 163, 164, 165, 0, 0, 166, 167,
	168, 0, 0, 0, 0, 0, 0, 0, 169, 170,
	364, 171, 319, 172, 320, 321, 0, 173, 0, 174,
	0, 175, 0, 0, 176, 177, 0, 178, 0, 0,
	0, 322, 179, 180, 181, 323, 324, 0, 0, 0,
	182, 183, 325, 326, 327, 0, 184, 0, 185, 0,
	0, 0, 186, 0, 187, 328, 0, 329, 0, 188,
	189, 190, 191, 192, 1150, 331, 0, 0, 196, 0,
	193, 0, 0, 194, 332, 195, 333, 334, 335, 336,
	337, 0, 338, 0, 0, 197, 198, 199, 0, 200,
	201, 202, 0, 204, 203, 0, 339, 0, 205, 0,
	0, 206, 0, 0, 207, 0, 208, 209, 210, 212,
	340, 211, 0, 213, 214, 216, 215, 0, 0, 0,
	341, 217, 342, 218, 219, 0, 220, 0, 0, 221,
	0, 0, 222, 343, 0, 223, 0, 344, 224, 225,
	226, 227, 228, 0, 229, 345, 230, 346, 231, 0,
	232, 233, 234, 235, 236, 237, 347, 238, 239, 0,
	240, 241, 242, 243, 244, 246, 247, 245, 248, 249,
	250, 251, 0, 252, 0, 253, 254, 348, 255, 0,
	259, 260, 261, 262, 0, 264, 349, 263, 265, 266,
	0, 267, 256, 257, 268, 0, 269, 350, 351, 270,
	0, 277, 271, 272, 258, 273, 276, 352, 274, 275,
	353, 0, 278, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 354, 355, 356, 0, 0, 286, 287, 357,
	358, 0, 288, 289, 290, 291, 0, 0, 292, 293,
	294, 295, 0, 296, 0, 359, 297, 298, 299, 360,
	361, 144, 0, 300, 0, 0, 0, 0, 301, 302,
	303, 304, 305, 0, 0, 0, 0, 147, 148, 0,
	149, 0, 0, 0, 0, 306, 0, 947, 0, 0,
	150, 151, 152, 307, 308, 309, 310, 153, 311, 312,
	0, 154, 313, 314, 155, 156, 157, 0, 0, 315,
	316, 317, 0, 158, 318, 0, 0, 0, 159, 160,
	161, 0, 162, 0, 163, 164, 165, 0, 0, 166,
	167, 168, 0, 0, 0, 0, 0, 0, 0, 169,
	170, 364, 171, 319, 172, 320, 321, 0, 173, 0,
	174, 0, 175, 0, 0, 176, 177, 0, 178, 0,
	0, 0, 322, 179, 180, 181, 323, 324, 0, 0,
	0, 182, 183, 325, 326, 327, 0, 184, 0, 185,
	0, 0, 0, 186, 0, 187, 328, 0, 329, 0,
	188, 189, 190, 191, 192, 330, 331, 0, 0, 196,
	0, 193, 0, 0, 194, 332, 195, 333, 334, 335,
	336, 337, 0, 338, 0, 0, 197, 198, 199, 0,
	200, 201, 202, 0, 204, 203, 0, 339, 0, 205,
	0, 0, 206, 0, 0, 207, 0, 208, 209, 210,
	212, 340, 211, 0, 213, 214, 216, 215, 0, 0,
	0, 341, 217, 342, 218, 219, 0, 220, 0, 0,
	221, 0, 0, 222, 343, 0, 223, 0, 344, 224,
	225, 226, 227, 228, 0, 229, 345, 230, 346, 231,
	0, 232, 233, 234, 235, 236, 237, 347, 238, 239,
	0, 240, 241, 242, 243, 244, 246, 247, 245, 248,
	249, 250, 251, 0, 252, 0, 253, 254, 348, 255,
	0, 259, 260, 261, 262, 0, 264, 349, 263, 265,
	266, 0, 0, 256, 257, 268, 0, 269, 350, 351,
	270, 0, 277, 271, 272, 258, 273, 276, 352, 274,
	275, 353, 0, 278, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 354, 355, 356, 0, 0, 286, 287,
	357, 358, 0, 288, 289, 290, 291, 0, 0, 292,
	293, 294, 295, 0, 296, 0, 359, 297, 298, 299,
	360, 361, 144, 0, 300, 0, 0, 0, 0, 301,
	302, 303, 304, 305, 0, 0, 0, 0, 147, 148,
	0, 149, 0, 0, 0, 0, 306, 0, 0, 0,
	0, 150, 151, 152, 307, 308, 309, 310, 153, 311,
	312, 0, 154, 313, 314, 155, 156, 157, 0, 0,
	315, 316, 317, 0, 158, 318, 0, 0, 0, 159,
	160, 161, 0, 162, 0, 163, 164, 165, 0, 0,
	166, 167, 168, 0, 0, 0, 0, 0, 0, 0,
	169, 170, 364, 171, 319, 172, 320, 321, 0, 173,
	0, 174, 0, 175, 0, 0, 176, 177, 0, 178,
	0, 0, 0, 322, 179, 180, 181, 323, 324, 0,
	0, 0, 182, 183, 325, 326, 327, 0, 184, 0,
	185, 0, 0, 0, 186, 0, 187, 328, 0, 329,
	0, 188, 189, 190, 191, 192, 888, 331, 0, 0,
	196, 0, 193, 0, 0, 194, 332, 195, 333, 334,
	335, 336, 337, 0, 338, 0, 0, 197, 198, 199,
	0, 200, 201, 202, 0, 204, 203, 0, 339, 0,
	205, 0, 0, 206, 0, 0, 207, 0, 208, 209,
	210, 212, 340, 211, 0, 213, 214, 216, 215, 0,
	0, 0, 341, 217, 342, 218, 219, 0, 220, 0,
	0, 221, 0, 0, 222, 343, 0, 223, 0, 344,
	224, 225, 226, 227, 228, 0, 229, 345, 230, 346,
	231, 0, 232, 233, 234, 235, 236, 237, 347, 238,
	239, 0, 240, 241, 242, 243, 244, 246, 247, 245,
	248, 249, 250, 251, 0, 252, 0, 253, 254, 348,
	255, 0, 259, 260, 261, 262, 0, 264, 349, 263,
	265, 266, 0, 267, 256, 257, 268, 0, 269, 350,
	351, 270, 0, 277, 271, 272, 258, 273, 276, 352,
	274, 275, 353, 0, 278, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 354, 355, 356, 0, 0, 286,
	287, 357, 358, 0, 288, 289, 290, 291, 0, 0,
	292, 293, 294, 295, 0, 296, 0, 359, 297, 298,
	299, 360, 361, 144, 0, 300, 0, 0, 0, 0,
	301, 302, 303, 304, 305, 0, 0, 0, 0, 147,
	148, 0, 149, 0, 0, 0, 0, 306, 0, 0,
	0, 0, 150, 151, 152, 307, 308, 309, 310, 153,
	311, 312, 0, 154, 313, 314, 155, 156, 157, 0,
	0, 315, 316, 317, 0, 158, 318, 0, 0, 0,
	159, 160, 161, 0, 162, 0, 163, 164, 165, 0,
	0, 166, 167, 168, 0, 0, 0, 0, 0, 0,
	0, 169, 170, 364, 171, 319, 172, 320, 321, 0,
	173, 0, 174, 0, 175, 0, 0, 176, 177, 0,
	178, 0, 0, 0, 322, 179, 180, 181, 323, 324,
	0, 0, 0, 182, 183, 325, 326, 327, 0, 184,
	0, 185, 0, 0, 0, 186, 0, 187, 328, 0,
	329, 0, 188, 189, 190, 191, 192, 833, 331, 0,
	0, 196, 0, 193, 0, 0, 194, 332, 195, 333,
	334, 335, 336, 337, 0, 338, 0, 0, 197, 198,
	199, 0, 200, 201, 202, 0, 204, 203, 0, 339,
	0, 205, 0, 0, 206, 0, 0, 207, 0, 208,
	209, 210, 212, 340, 211, 0, 213, 214, 216, 215,
	0, 0, 0, 341, 217, 342, 218, 219, 0, 220,
	0, 0, 221, 0, 0, 222, 343, 0, 223, 0,
	344, 224, 225, 226, 227, 228, 0, 229, 345, 230,
	346, 231, 0, 232, 233, 234, 235, 236, 237, 347,
	238, 239, 0, 240, 241, 242, 243, 244, 246, 247,
	245, 248, 249, 250, 251, 0, 252, 0, 253, 254,
	348, 255, 0, 259, 260, 261, 262, 0, 264, 349,
	263, 265, 266, 0, 267, 256, 257, 268, 0, 269,
	350, 351, 270, 0, 277, 271, 272, 258, 273, 276,
	352, 274, 275, 353, 0, 278, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 354, 355, 356, 0, 0,
	286, 287, 357, 358, 0, 288, 289, 290, 291, 0,
	0, 292, 293, 294, 295, 0, 296, 0, 359, 297,
	298, 299, 360, 361, 144, 0, 300, 0, 0, 0,
	0, 301, 302, 303, 304, 305, 0, 0, 0, 0,
	147, 148, 0, 149, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 150, 151, 152, 307, 308, 309, 310,
	153, 311, 312, 0, 154, 313, 314, 155, 156, 157,
	0, 0, 315, 316, 317, 0, 158, 318, 0, 0,
	0, 159, 160, 161, 0, 162, 0, 163, 164, 165,
	0, 0, 166, 167, 168, 0, 0, 0, 0, 0,
	0, 0, 169, 170, 364, 171, 319, 172, 320, 321,
	0, 173, 0, 174, 0, 175, 0, 0, 176, 177,
	0, 178, 0, 0, 0, 322, 179, 180, 181, 323,
	324, 0, 0, 0, 182, 183, 325, 326, 327, 0,
	184, 0, 185, 0, 0, 0, 186, 0, 187, 328,
	0, 329, 0, 188, 189, 190, 191, 192, 831, 331,
	0, 0, 196, 0, 193, 0, 0, 194, 332, 195,
	333, 334, 335, 336, 337, 0, 338, 0, 0, 197,
	198, 199, 0, 200, 201, 202, 0, 204, 203, 0,
	339, 0, 205, 0, 0, 206, 0, 0, 207, 0,
	208, 209, 210, 212, 340, 211, 0, 213, 214, 216,
	215, 0, 0, 0, 341, 217, 342, 218, 219, 0,
	220, 0, 0, 221, 0, 0, 222, 343, 0, 223,
	0, 344, 224, 225, 226, 227, 228, 0, 229, 345,
	230, 346, 231, 0, 232, 233, 234, 235, 236, 237,
	347, 238, 239, 0, 240, 241, 242, 243, 244, 246,
	247, 245, 248, 249, 250, 251, 0, 252, 0, 253,
	254, 348, 255, 0, 259, 260, 261, 262, 0, 264,
	349, 263, 265, 266, 0, 267, 256, 257, 268, 0,
	269, 350, 351, 270, 0, 277, 271, 272, 258, 273,
	276, 352, 274, 275, 353, 0, 278, 0, 279, 280,
	281, 282, 283, 284, 285, 0, 354, 355, 356, 0,
	0, 286, 287, 357, 358, 0, 288, 289, 290, 291,
	0, 0, 292, 293, 294, 295, 0, 296, 0, 359,
	297, 298, 299, 360, 361, 144, 0, 300, 0, 0,
	0, 0, 301, 302, 303, 304, 305, 0, 0, 0,
	0, 147, 148, 0, 149, 0, 0, 0, 0, 306,
	0, 0, 0, 0, 150, 151, 152, 307, 308, 309,
	310, 153, 311, 312, 0, 154, 313, 314, 155, 156,
	157, 0, 0, 315, 316, 317, 0, 158, 318, 0,
	0, 0, 159, 160, 161, 0, 162, 0, 163, 164,
	165, 0, 0, 166, 167, 168, 0, 0, 0, 0,
	0, 0, 0, 169, 170, 364, 171, 319, 172, 320,
	321, 0, 173, 0, 174, 0, 175, 0, 0, 176,
	177, 0, 178, 0, 0, 0, 322, 179, 180, 181,
	323, 324, 0, 0, 0, 182, 183, 325, 326, 327,
	0, 184, 0, 185, 0, 0, 0, 186, 0, 187,
	328, 0, 329, 0, 188, 189, 190, 191, 192, 827,
	331, 0, 0, 196, 0, 193, 0, 0, 194, 332,
	195, 333, 334, 335, 336, 337, 0, 338, 0, 0,
	197, 198, 199, 0, 200, 201, 202, 0, 204, 203,
	0, 339, 0, 205, 0, 0, 206, 0, 0, 207,
	0, 208, 209, 210, 212, 340, 211, 0, 213, 214,
	216, 215, 0, 0, 0, 341, 217, 342, 218, 219,
	0, 220, 0, 0, 221, 0, 0, 222, 343, 0,
	223, 0, 344, 224, 225, 226, 227, 228, 0, 229,
	345, 230, 346, 231, 0, 232, 233, 234, 235, 236,
	237, 347, 238, 239, 0, 240, 241, 242, 243, 244,
	246, 247, 245, 248, 249, 250, 251, 0, 252, 0,
	253, 254, 348, 255, 0, 259, 260, 261, 262, 0,
	264, 349, 263, 265, 266, 0, 267, 256, 257, 268,
	0, 269, 350, 351, 270, 0, 277, 271, 272, 258,
	273, 276, 352, 274, 275, 353, 0, 278, 0, 279,
	280, 281, 282, 283, 284, 285, 0, 354, 355, 356,
	0, 0, 286, 287, 357, 358, 0, 288, 289, 290,
	291, 0, 0, 292, 293, 294, 295, 0, 296, 0,
	359, 297, 298, 299, 360, 361, 144, 0, 300, 0,
	0, 0, 0, 301, 302, 303, 304, 305, 0, 0,
	0, 0, 147, 148, 0, 149, 0, 0, 0, 0,
	306, 0, 0, 0, 0, 150, 151, 152, 307, 308,
	309, 310, 153, 311, 312, 0, 154, 313, 314, 155,
	156, 157, 0, 0, 315, 316, 317, 0, 158, 318,
	0, 0, 0, 159, 160, 161, 0, 162, 0, 163,
	164, 165, 0, 0, 166, 167, 168, 0, 0, 0,
	0, 0, 0, 0, 169, 170, 364, 171, 319, 172,
	320, 321, 0, 173, 0, 174, 0, 175, 0, 0,
	176, 177, 0, 178, 0, 0, 0, 322, 179, 180,
	181, 323, 324, 0, 0, 0, 182, 183, 325, 326,
	327, 0, 184, 0, 185, 0, 0, 0, 186, 0,
	187, 328, 0, 329, 0, 188, 189, 190, 191, 192,
	825, 331, 0, 0, 196, 0, 193, 0, 0, 194,
	332, 195, 333, 334, 335, 336, 337, 0, 338, 0,
	0, 197, 198, 199, 0, 200, 201, 202, 0, 204,
	203, 0, 339, 0, 205, 0, 0, 206, 0, 0,
	207, 0, 208, 209, 210, 212, 340, 211, 0, 213,
	214, 216, 215, 0, 0, 0, 341, 217, 342, 218,
	219, 0, 220, 0, 0, 221, 0, 0, 222, 343,
	0, 223, 0, 344, 224, 225, 226, 227, 228, 0,
	229, 345, 230, 346, 231, 0, 232, 233, 234, 235,
	236, 237, 347, 238, 239, 0, 240, 241, 242, 243,
	244, 246, 247, 245, 248, 249, 250, 251, 0, 252,
	0, 253, 254, 348, 255, 0, 259, 260, 261, 262,
	0, 264, 349, 263, 265, 266, 0, 267, 256, 257,
	268, 0, 269, 350, 351, 270, 0, 277, 271, 272,
	258, 273, 276, 352, 274, 275, 353, 0, 278, 0,
	279, 280, 281, 282, 283, 284, 285, 0, 354, 355,
	356, 0, 0, 286, 287, 357, 358, 0, 288, 289,
	290, 291, 0, 0, 292, 293, 294, 295, 0, 296,
	0, 359, 297, 298, 299, 360, 361, 144, 0, 300,
	0, 0, 0, 0, 301, 302, 303, 304, 305, 0,
	0, 0, 0, 147, 148, 0, 149, 0, 0, 0,
	0, 306, 0, 0, 0, 0, 150, 151, 152, 307,
	308, 309, 310, 153, 311, 312, 0, 154, 313, 314,
	155, 156, 157, 0, 0, 315, 316, 317, 0, 158,
	318, 0, 0, 0, 159, 160, 161, 0, 162, 0,
	163, 164, 165, 0, 0, 166, 167, 168, 0, 0,
	0, 0, 0, 0, 0, 169, 170, 364, 171, 319,
	172, 320, 321, 0, 173, 0, 174, 0, 175, 0,
	0, 176, 177, 0, 178, 0, 0, 0, 322, 179,
	180, 181, 323, 324, 0, 0, 0, 182, 183, 325,
	326, 327, 0, 184, 0, 185, 0, 0, 0, 186,
	0, 187, 328, 0, 329, 0, 188, 189, 190, 191,
	192, 822, 331, 0, 0, 196, 0, 193, 0, 0,
	194, 332, 195, 333, 334, 335, 336, 337, 0, 338,
	0, 0, 197, 198, 199, 0, 200, 201, 202, 0,
	204, 203, 0, 339, 0, 205, 0, 0, 206, 0,
	0, 207, 0, 208, 209, 210, 212, 340, 211, 0,
	213, 214, 216, 215, 0, 0, 0, 341, 217, 342,
	218, 219, 0, 220, 0, 0, 221, 0, 0, 222,
	343, 0, 223, 0, 344, 224, 225, 226, 227, 228,
	0, 229, 345, 230, 346, 231, 0, 232, 233, 234,
	235, 236, 237, 347, 238, 239, 0, 240, 241, 242,
	243, 244, 246, 247, 245, 248, 249, 250, 251, 0,
	252, 0, 253, 254, 348, 255, 0, 259, 260, 261,
	262, 0, 264, 349, 263, 265, 266, 0, 267, 256,
	257, 268, 0, 269, 350, 351, 270, 0, 277, 271,
	272, 258, 273, 276, 352, 274, 275, 353, 0, 278,
	0, 279, 280, 281, 282, 283, 284, 285, 0, 354,
	355, 356, 0, 0, 286, 287, 357, 358, 0, 288,
	289, 290, 291, 0, 0, 292, 293, 294, 295, 0,
	296, 0, 359, 297, 298, 299, 360, 361, 144, 0,
	300, 0, 0, 0, 0, 301, 302, 303, 304, 305,
	0, 0, 0, 0, 147, 148, 0, 149, 0, 0,
	0, 0, 306, 0, 0, 0, 0, 150, 151, 152,
	307, 308, 309, 310, 153, 311, 312, 0, 154, 313,
	314, 155, 156, 157, 0, 0, 315, 316, 317, 0,
	158, 318, 0, 0, 0, 159, 160, 161, 0, 162,
	0, 163, 164, 165, 0, 0, 166, 167, 168, 0,
	0, 0, 0, 0, 0, 0, 169, 170, 364, 171,
	319, 172, 320, 321, 0, 173, 0, 174, 0, 175,
	0, 0, 176, 177, 0, 178, 0, 0, 0, 322,
	179, 180, 181, 323, 324, 0, 0, 0, 182, 183,
	325, 326, 327, 0, 184, 0, 185, 0, 0, 0,
	186, 0, 187, 328, 0, 329, 0, 188, 189, 190,
	191, 192, 817, 331, 0, 0, 196, 0, 193, 0,
	0, 194, 332, 195, 333, 334, 335, 336, 337, 0,
	338, 0, 0, 197, 198, 199, 0, 200, 201, 202,
	0, 204, 203, 0, 339, 0, 205, 0, 0, 206,
	0, 0, 207, 0, 208, 209, 210, 212, 340, 211,
	0, 213, 214, 216, 215, 0, 0, 0, 341, 217,
	342, 218, 219, 0, 220, 0, 0, 221, 0, 0,
	222, 343, 0, 223, 0, 344, 224, 225, 226, 227,
	228, 0, 229, 345, 230, 346, 231, 0, 232, 233,
	234, 235, 236, 237, 347, 238, 239, 0, 240, 241,
	242, 243, 244, 246, 247, 245, 248, 249, 250, 251,
	0, 252, 0, 253, 254, 348, 255, 0, 259, 260,
	261, 262, 0, 264, 349, 263, 265, 266, 0, 267,
	256, 257, 268, 0, 269, 350, 351, 270, 0, 277,
	271, 272, 258, 273, 276, 352, 274, 275, 353, 0,
	278, 0, 279, 280, 281, 282, 283, 284, 285, 0,
	354, 355, 356, 0, 0, 286, 287, 357, 358, 0,
	288, 289, 290, 291, 0, 0, 292, 293, 294, 295,
	0, 296, 0, 359, 297, 298, 299, 360, 361, 144,
	0, 300, 0, 0, 0, 0, 301, 302, 303, 304,
	305, 0, 0, 0, 0, 147, 148, 0, 149, 0,
	0, 0, 0, 306, 0, 0, 0, 0, 150, 151,
	152, 307, 308, 309, 310, 153, 311, 312, 0, 154,
	313, 314, 155, 156, 157, 0, 0, 315, 316, 317,
	0, 158, 318, 0, 0, 0, 159, 160, 161, 0,
	162, 0, 163, 164, 165, 0, 0, 166, 167, 168,
	0, 0, 0, 0, 0, 0, 0, 169, 170, 364,
	171, 319, 172, 320, 321, 0, 173, 0, 174, 0,
	175, 0, 0, 176, 177, 0, 178, 0, 0, 0,
	322, 179, 180, 181, 323, 324, 0, 0, 0, 182,
	183, 325, 326, 327, 0, 184, 0, 185, 0, 0,
	0, 186, 0, 187, 328, 0, 329, 0, 188, 189,
	190, 191, 192, 812, 331, 0, 0, 196, 0, 193,
	0, 0, 194, 332, 195, 333, 334, 335, 336, 337,
	0, 338, 0, 0, 197, 198, 199, 0, 200, 201,
	202, 0, 204, 203, 0, 339, 0, 205, 0, 0,
	206, 0, 0, 207, 0, 208, 209, 210, 212, 340,
	211, 0, 213, 214, 216, 215, 0, 0, 0, 341,
	217, 342, 218, 219, 0, 220, 0, 0, 221, 0,
	0, 222, 343, 0, 223, 0, 344, 224, 225, 226,
	227, 228, 0, 229, 345, 230, 346, 231, 0, 232,
	233, 234, 235, 236, 237, 347, 238, 239, 0, 240,
	241, 242, 243, 244, 246, 247, 245, 248, 249, 250,
	251, 0, 252, 0, 253, 254, 348, 255, 0, 259,
	260, 261, 262, 0, 264, 349, 263, 265, 266, 0,
	267, 256, 257, 268, 0, 269, 350, 351, 270, 0,
	277, 271, 272, 258, 273, 276, 352, 274, 275, 353,
	0, 278, 0, 279, 280, 281, 282, 283, 284, 285,
	0, 354, 355, 356, 0, 0, 286, 287, 357, 358,
	0, 288, 289, 290, 291, 0, 0, 292, 293, 294,
	295, 0, 296, 0, 359, 297, 298, 299, 360, 361,
	144, 0, 300, 0, 0, 0, 0, 301, 302, 303,
	304, 305, 0, 0, 0, 0, 147, 148, 0, 149,
	0, 0, 0, 0, 306, 0, 0, 0, 0, 150,
	151, 152, 307, 308, 309, 310, 153, 311, 312, 0,
	154, 313, 314, 155, 156, 157, 0, 0, 315, 316,
	788, 0, 158, 318, 0, 0, 0, 159, 160, 161,
	0, 162, 0, 163, 164, 165, 0, 0, 166, 167,
	168, 0, 0, 0, 0, 0, 0, 0, 169, 170,
	364, 171, 319, 172, 320, 321, 0, 173, 0, 174,
	0, 175, 0, 0, 176, 177, 0, 178, 0, 0,
	0, 322, 179, 180, 181, 323, 324, 0, 0, 0,
	182, 183, 325, 326, 327, 0, 184, 0, 185, 0,
	0, 0, 186, 0, 187, 328, 0, 329, 0, 188,
	189, 190, 191, 192, 330, 331, 0, 0, 196, 0,
	193, 0, 0, 194, 332, 195, 333, 334, 335, 336,
	337, 0, 338, 0, 0, 197, 198, 199, 0, 200,
	201, 202, 0, 204, 203, 0, 339, 0, 205, 0,
	0, 206, 0, 0, 207, 0, 208, 209, 210, 212,
	340, 536, 0, 213, 214, 216, 215, 0, 0, 0,
	341, 217, 342, 218, 219, 0, 220, 0, 0, 221,
	0, 0, 222, 343, 0, 223, 0, 344, 224, 225,
	226, 227, 228, 0, 229, 345, 230, 346, 231, 0,
	232, 233, 234, 235, 236, 237, 347, 238, 239, 0,
	240, 241, 242, 243, 244, 246, 247, 245, 248, 249,
	250, 251, 0, 252, 0, 253, 254, 348, 255, 0,
	259, 260, 261, 262, 0, 264, 349, 263, 265, 266,
	0, 267, 256, 257, 268, 0, 269, 350, 351, 270,
	0, 277, 271, 272, 258, 273, 276, 352, 274, 275,
	353, 0, 278, 0, 279, 280, 281, 282, 283, 284,
	285, 0, 532, 355, 356, 0, 0, 286, 789, 357,
	358, 0, 288, 289, 290, 291, 0, 0, 292, 293,
	294, 295, 0, 296, 0, 359, 297, 298, 299, 360,
	361, 144, 0, 300, 0, 0, 0, 0, 301, 302,
	303, 304, 305, 0, 0, 0, 0, 147, 148, 0,
	149, 0, 0, 0, 0, 306, 0, 0, 0, 0,
	150, 151, 152, 307, 308, 309, 310, 153, 311, 312,
	0, 154, 313, 314, 155, 156, 157, 0, 0, 315,
	316, 317, 0, 158, 318, 0, 0, 0, 159, 160,
	161, 0, 162, 0, 163, 164, 165, 0, 0, 166,
	167, 168, 0, 0, 0, 0, 0, 0, 0, 169,
	170, 364, 171, 319, 172, 320, 321, 0, 173, 0,
	174, 0, 175, 0, 0, 176, 177, 0, 178, 0,
	0, 0, 322, 179, 180, 181, 323, 324, 0, 0,
	0, 182, 183, 325, 326, 327, 0, 184, 0, 185,
	0, 0, 0, 186, 0, 187, 328, 0, 329, 0,
	188, 189, 190, 191, 192, 330, 331, 0, 0, 196,
	0, 193, 0, 0, 194, 332, 195, 333, 334, 335,
	336, 337, 0, 338, 0, 0, 197, 198, 199, 0,
	200, 201, 202, 0, 204, 203, 0, 339, 0, 205,
	0, 0, 206, 0, 0, 207, 0, 208, 209, 210,
	212, 340, 211, 0, 213, 214, 216, 215, 0, 0,
	0, 341, 217, 342, 218, 219, 0, 220, 0, 0,
	221, 0, 0, 222, 343, 0, 223, 0, 344, 224,
	225, 226, 227, 228, 0, 229, 345, 230, 346, 231,
	0, 232, 233, 234, 235, 236, 237, 347, 624, 239,
	0, 240, 241, 242, 243, 244, 246, 247, 245, 248,
	249, 250, 251, 0, 252, 0, 253, 254, 348, 255,
	0, 259, 260, 261, 262, 0, 264, 349, 263, 265,
	266, 0, 267, 256, 257, 268, 0, 269, 350, 351,
	270, 0, 277, 271, 272, 258, 273, 276, 352, 274,
	275, 353, 0, 278, 0, 279, 280, 281, 282, 283,
	284, 285, 0, 354, 355, 356, 0, 0, 286, 287,
	357, 358, 0, 288, 289, 290, 291, 0, 0, 292,
	293, 294, 295, 0, 296, 0, 359, 297, 298, 299,
	360, 361, 144, 0, 300, 0, 0, 0, 0, 301,
	302, 303, 304, 305, 0, 0, 0, 0, 147, 148,
	0, 149, 0, 0, 0, 0, 306, 0, 0, 0,
	0, 150, 151, 152, 307, 308, 309, 310, 153, 311,
	312, 0, 154, 313, 314, 155, 156, 157, 0, 0,
	315, 316, 317, 0, 526, 318, 0, 0, 0, 159,
	160, 161, 0, 162, 0, 163, 164, 165, 0, 0,
	166, 167, 168, 0, 0, 0, 0, 0, 0, 0,
	169, 170, 364, 171, 319, 172, 320, 321, 0, 173,
	0, 174, 0, 175, 0, 0, 176, 177, 0, 178,
	0, 0, 0, 322, 179, 180, 181, 323, 324, 0,
	0, 0, 182, 183, 325, 326, 327, 0, 184, 0,
	185, 0, 0, 0, 186, 0, 187, 328, 0, 329,
	0, 188, 189, 190, 191, 192, 330, 331, 0, 0,
	196, 0, 193, 0, 0, 194, 332, 195, 333, 334,
	335, 336, 337, 0, 338, 0, 0, 197, 198, 199,
	0, 200, 201, 202, 0, 204, 203, 0, 339, 0,
	205, 0, 0, 525, 0, 0, 207, 0, 208, 209,
	210, 212, 340, 536, 0, 213, 214, 216, 215, 0,
	0, 0, 341, 217, 342, 218, 219, 0, 220, 0,
	0, 221, 0, 0, 222, 343, 0, 223, 0, 344,
	224, 225, 226, 227, 228, 0, 229, 345, 230, 346,
	231, 0, 232, 233, 234, 235, 236, 237, 347, 238,
	239, 0, 240, 241, 242, 243, 244, 246, 247, 245,
	248, 249, 250, 251, 0, 252, 0, 253, 254, 527,
	255, 0, 259, 260, 261, 262, 0, 264, 349, 263,
	528, 266, 0, 267, 256, 257, 268, 0, 269, 350,
	351, 270, 0, 277, 271, 272, 258, 273, 276, 352,
	274, 275, 353, 0, 278, 0, 279, 280, 281, 282,
	283, 284, 285, 0, 532, 355, 356, 0, 0, 286,
	530, 357, 358, 0, 288, 289, 290, 291, 0, 0,
	292, 293, 294, 295, 0, 296, 0, 359, 297, 298,
	299, 360, 361, 144, 0, 300, 0, 0, 0, 0,
	301, 302, 303, 304, 305, 0, 0, 0, 0, 147,
	148, 0, 149, 0, 0, 0, 0, 306, 0, 0,
	0, 0, 150, 151, 152, 307, 308, 309, 310, 153,
	311, 312, 0, 154, 313, 314, 155, 156, 157, 0,
	0, 315, 316, 317, 0, 158, 318, 0, 0, 0,
	159, 160, 161, 0, 162, 0, 163, 164, 165, 0,
	0, 166, 167, 168, 0, 0, 0, 0, 0, 0,
	0, 169, 170, 364, 171, 319, 172, 320, 321, 0,
	173, 0, 174, 0, 175, 0, 0, 176, 177, 0,
	178, 0, 0, 0, 322, 179, 180, 181, 323, 324,
	0, 0, 0, 182, 183, 325, 326, 327, 0, 184,
	0, 185, 0, 0, 0, 186, 0, 187, 328, 0,
	329, 0, 188, 189, 190, 191, 192, 330, 331, 0,
	0, 196, 0, 193, 0, 0, 194, 332, 195, 333,
	334, 335, 336, 337, 0, 338, 0, 0, 197, 198,
	199, 0, 200, 201, 202, 0, 204, 203, 0, 339,
	0, 205, 0, 0, 206, 0, 0, 207, 0, 208,
	209, 210, 212, 340, 211, 0, 213, 214, 216, 215,
	0, 0, 0, 341, 217, 342, 218, 219, 0, 220,
	0, 0, 221, 0, 0, 222, 343, 0, 223, 0,
	344, 224, 225, 0, 227, 228, 0, 229, 345, 230,
	346, 231, 0, 232, 233, 234, 235, 0, 237, 347,
	238, 239, 0, 240, 241, 242, 243, 244, 246, 247,
	245, 248, 249, 250, 251, 0, 252, 0, 253, 254,
	348, 0, 0, 259, 260, 261, 262, 0, 264, 349,
	263, 265, 266, 0, 267, 256, 257, 268, 0, 269,
	350, 351, 270, 0, 277, 271, 272, 258, 273, 276,
	352, 274, 275, 353, 0, 278, 0, 279, 280, 281,
	282, 283, 284, 285, 0, 354, 355, 356, 0, 0,
	286, 287, 357, 358, 0, 288, 289, 290, 291, 0,
	0, 292, 293, 294, 295, 0, 296, 0, 359, 297,
	298, 299, 360, 361, 0, 0, 300, 0, 0, 0,
	0, 301, 302, 303, 304, 305, 956, 957, 0, 976,
	977, 978, 986, 987, 988, 0, 0, 0, 0, 0,
	0, 0, 979, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 990, 956, 957, 0, 976, 977, 978, 986,
	987, 988, 0, 0, 0, 0, 0, 0, 0, 979,
	0, 0, 0, 0, 958, 0, 959, 0, 0, 990,
	973, 0, 956, 957, 0, 976, 977, 978, 986, 987,
	988, 0, 0, 0, 0, 0, 0, 0, 979, 0,
	0, 958, 0, 0, 0, 959, 0, 973, 990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 470, 74, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2324, 0, 177, 178,
	489, 179, 490, 491, 492, 493, 335, 494, 495, 496,
	497, 180, 181, 182, 336, 337, 338, 339, 183, 340,
	341, 498, 184, 342, 343, 185, 186, 499, 500, 344,
	345, 346, 501, 187, 347, 502, 475, 503, 188, 189,
	190, 0, 191, 504, 192, 193, 194, 505, 476, 195,
	196, 197, 506, 507, 509, 508, 510, 511, 512, 198,
	199, 398, 200, 348, 201, 349, 350, 513, 202, 514,
	203, 515, 204, 516, 517, 205, 206, 518, 207, 519,
	1141, 520, 351, 208, 209, 210, 352, 353, 521, 522,
	523, 211, 212, 354, 355, 356, 0, 213, 524, 214,
	525, 526, 477, 215, 527, 216, 357, 528, 358, 529,
	217, 218, 219, 220, 221, 359, 360, 479, 530, 225,
	531, 222, 532, 478, 223, 361, 224, 362, 363, 364,
	365, 366, 533, 367, 534, 480, 226, 227, 228, 481,
	229, 230, 231, 535, 233, 232, 536, 368, 482, 234,
	483, 537, 235, 538, 539, 236, 0, 237, 238, 239,
	241, 369, 240, 484, 242, 243, 245, 244, 540, 541,
	542, 370, 246, 371, 247, 248, 543, 249, 544, 545,
	250, 546, 547, 251, 372, 485, 252, 486, 373, 253,
	254, 255, 256, 257, 548, 258, 374, 259, 375, 260,
	549, 261, 262, 263, 264, 265, 266, 376, 267, 268,
	550, 269, 270, 271, 272, 273, 275, 276, 274, 277,
	278, 279, 280, 551, 281, 487, 282, 283, 377, 284,
	0, 288, 289, 290, 291, 552, 293, 378, 292, 294,
	295, 553, 296, 285, 286, 297, 488, 298, 379, 380,
	299, 554, 306, 300, 301, 287, 302, 305, 381, 303,
	304, 382, 555, 307, 556, 308, 309, 310, 311, 312,
	313, 314, 557, 383, 384, 385, 558, 559, 315, 316,
	386, 387, 560, 317, 318, 319, 320, 561, 562, 321,
	322, 323, 324, 563, 325, 564, 388, 326, 327, 328,
	389, 390, 565, 566, 329, 567, 568, 569, 570, 330,
	331, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 0,
	0, 1395, 177, 178, 489, 179, 490, 491, 492, 493,
	335, 494, 495, 496, 497, 180, 181, 182, 336, 337,
	338, 339, 183, 340, 341, 498, 184, 342, 343, 185,
	186, 499, 500, 344, 345, 346, 501, 187, 347, 502,
	475, 503, 188, 189, 190, 0, 191, 504, 192, 193,
	194, 505, 476, 195, 196, 197, 506, 507, 509, 508,
	510, 511, 512, 198, 199, 398, 200, 348, 201, 349,
	350, 513, 202, 514, 203, 515, 204, 516, 517, 205,
	206, 518, 207, 519, 0, 520, 351, 208, 209, 210,
	352, 353, 521, 522, 523, 211, 212, 354, 355, 356,
	0, 213, 524, 214, 525, 526, 477, 215, 527, 216,
	357, 528, 358, 529, 217, 218, 219, 220, 221, 359,
	360, 479, 530, 225, 531, 222, 532, 478, 223, 361,
	224, 362, 363, 364, 365, 366, 533, 367, 534, 480,
	226, 227, 228, 481, 229, 230, 231, 535, 233, 232,
	536, 368, 482, 234, 483, 537, 235, 538, 539, 236,
	0, 237, 238, 239, 241, 369, 240, 484, 242, 243,
	245, 244, 540, 541, 542, 370, 246, 371, 247, 248,
	543, 249, 544, 545, 250, 546, 547, 251, 372, 485,
	252, 486, 373, 253, 254, 255, 256, 257, 548, 258,
	374, 259, 375, 260, 549, 261, 262, 263, 264, 265,
	266, 376, 267, 268, 550, 269, 270, 271, 272, 273,
	275, 276, 274, 277, 278, 279, 280, 551, 281, 487,
	282, 283, 377, 284, 0, 288, 289, 290, 291, 552,
	293, 378, 292, 294, 295, 553, 296, 285, 286, 297,
	488, 298, 379, 380, 299, 554, 306, 300, 301, 287,
	302, 305, 381, 303, 304, 382, 555, 307, 556, 308,
	309, 310, 311, 312, 313, 314, 557, 383, 384, 385,
	558, 559, 315, 316, 386, 387, 560, 317, 318, 319,
	320, 561, 562, 321, 322, 323, 324, 563, 325, 564,
	388, 326, 327, 328, 389, 390, 565, 566, 329, 567,
	568, 569, 570, 330, 331, 332, 333, 334, 0, 0,
	0, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2139, 177, 178, 489,
	179, 490, 491, 492, 493, 335, 494, 495, 496, 497,
	180, 181, 182, 336, 337, 338, 339, 183, 340, 341,
	498, 184, 342, 343, 185, 186, 499, 500, 344, 345,
	346, 501, 187, 347, 502, 475, 503, 188, 189, 190,
	0, 191, 504, 192, 193, 194, 505, 476, 195, 196,
	197, 506, 507, 509, 508, 510, 511, 512, 198, 199,
	398, 200, 348, 201, 349, 350, 513, 202, 514, 203,
	515, 204, 516, 517, 205, 206, 518, 207, 519, 0,
	520, 351, 208, 209, 210, 352, 353, 521, 522, 523,
	211, 212, 354, 355, 356, 0, 213, 524, 214, 525,
	526, 477, 215, 527, 216, 357, 528, 358, 529, 217,
	218, 219, 220, 221, 359, 360, 479, 530, 225, 531,
	222, 532, 478, 223, 361, 224, 362, 363, 364, 365,
	366, 533, 367, 534, 480, 226, 227, 228, 481, 229,
	230, 231, 535, 233, 232, 536, 368, 482, 234, 483,
	537, 235, 538, 539, 236, 0, 237, 238, 239, 241,
	369, 240, 484, 242, 243, 245, 244, 540, 541, 542,
	370, 246, 371, 247, 248, 543, 249, 544, 545, 250,
	546, 547, 251, 372, 485, 252, 486, 373, 253, 254,
	255, 256, 257, 548, 258, 374, 259, 375, 260, 549,
	261, 262, 263, 264, 265, 266, 376, 267, 268, 550,
	269, 270, 271, 272, 273, 275, 276, 274, 277, 278,
	279, 280, 551, 281, 487, 282, 283, 377, 284, 0,
	288, 289, 290, 291, 552, 293, 378, 292, 294, 295,
	553, 296, 285, 286, 297, 488, 298, 379, 380, 299,
	554, 306, 300, 301, 287, 302, 305, 381, 303, 304,
	382, 555, 307, 556, 308, 309, 310, 311, 312, 313,
	314, 557, 383, 384, 385, 558, 559, 315, 316, 386,
	387, 560, 317, 318, 319, 320, 561, 562, 321, 322,
	323, 324, 563, 325, 564, 388, 326, 327, 328, 389,
	390, 565, 566, 329, 567, 568, 569, 570, 330, 331,
	332, 333, 334, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 0, 177,
	178, 489, 179, 490, 491, 492, 493, 335, 494, 495,
	496, 497, 180, 181, 182, 336, 337, 338, 339, 183,
	340, 341, 498, 184, 342, 343, 185, 186, 499, 500,
	344, 345, 346, 501, 187, 347, 502, 475, 503, 188,
	189, 190, 0, 191, 504, 192, 193, 194, 505, 476,
	195, 196, 197, 506, 507, 509, 508, 510, 511, 512,
	198, 199, 398, 200, 348, 201, 349, 350, 513, 202,
	514, 203, 515, 204, 516, 517, 205, 206, 518, 207,
	519, 0, 520, 351, 208, 209, 210, 352, 353, 521,
	522, 523, 211, 212, 354, 355, 356, 0, 213, 524,
	214, 525, 526, 477, 215, 527, 216, 357, 528, 358,
	529, 217, 218, 219, 220, 221, 359, 360, 479, 530,
	225, 531, 222, 532, 478, 223, 361, 224, 362, 363,
	364, 365, 366, 533, 367, 534, 480, 226, 227, 228,
	481, 229, 230, 231, 535, 233, 232, 536, 368, 482,
	234, 483, 537, 235, 538, 539, 236, 0, 237, 238,
	239, 241, 369, 240, 484, 242, 243, 245, 244, 540,
	541, 542, 370, 246, 371, 247, 248, 543, 249, 544,
	545, 250, 546, 547, 251, 372, 485, 252, 486, 373,
	253, 254, 255, 256, 257, 548, 258, 374, 259, 375,
	260, 549, 261, 262, 263, 264, 265, 266, 376, 267,
	268, 550, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 551, 281, 487, 282, 283, 377,
	284, 0, 288, 289, 290, 291, 552, 293, 378, 292,
	294, 295, 553, 296, 285, 286, 297, 488, 298, 379,
	380, 299, 554, 306, 300, 301, 287, 302, 305, 381,
	303, 304, 382, 555, 307, 556, 308, 309, 310, 311,
	312, 313, 314, 557, 383, 384, 385, 558, 559, 315,
	316, 386, 387, 560, 317, 318, 319, 320, 561, 562,
	321, 322, 323, 324, 563, 325, 564, 388, 326, 327,
	328, 389, 390, 565, 566, 329, 567, 568, 569, 570,
	330, 331, 332, 333, 334, 1527, 0, 797, 786, 787,
	784, 785, 776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 178, 1524, 179, 0, 0, 0,
	0, 814, 779, 0, 0, 0, 180, 181, 182, 336,
	829, 338, 830, 183, 831, 832, 0, 184, 342, 343,
	185, 186, 782, 813, 833, 834, 346, 0, 187, 825,
	0, 805, 0, 188, 189, 190, 0, 191, 0, 192,
	193, 194, 0, 476, 195, 196, 197, 0, 806, 807,
	809, 0, 808, 810, 198, 199, 398, 200, 835, 201,
	836, 837, 0, 202, 0, 203, 0, 204, 1525, 0,
	828, 206, 0, 207, 0, 0, 0, 770, 208, 209,
	210, 815, 816, 793, 0, 0, 211, 212, 838, 839,
	840, 0, 213, 0, 214, 0, 0, 477, 215, 0,
	216, 826, 0, 358, 0, 217, 218, 219, 220, 221,
	822, 824, 479, 0, 225, 0, 222, 0, 478, 223,
	841, 224, 842, 843, 844, 845, 846, 0, 804, 0,
	480, 226, 227, 228, 481, 229, 230, 231, 0, 233,
	232, 0, 827, 482, 234, 483, 0, 235, 0, 0,
	236, 0, 237, 238, 239, 241, 369, 240, 484, 242,
	243, 245, 244, 765, 0, 794, 823, 246, 847, 247,
	248, 0, 249, 0, 0, 250, 0, 0, 251, 372,
	485, 252, 486, 817, 253, 254, 255, 256, 257, 0,
	258, 818, 259, 375, 260, 0, 261, 262, 263, 264,
	265, 266, 848, 267, 268, 0, 269, 270, 271, 272,
	273, 275, 276, 274, 277, 278, 279, 280, 0, 281,
	487, 282, 283, 771, 284, 0, 288, 289, 290, 291,
	0, 293, 378, 292, 294, 295, 811, 296, 285, 286,
	297, 488, 298, 849, 380, 299, 0, 306, 300, 301,
	287, 302, 305, 850, 303, 304, 819, 0, 307, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 383, 851,
	852, 0, 0, 315, 316, 820, 821, 792, 317, 318,
	319, 320, 0, 0, 321, 322, 323, 324, 812, 325,
	0, 388, 326, 327, 328, 389, 853, 1523, 0, 329,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 766,
	0, 0, 0, 0, 0, 764, 0, 0, 0, 0,
	762, 763, 1526, 797, 786, 787, 784, 785, 776, 772,
	1521, 0, 0, 0, 0, 775, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 814, 779, 0,
	0, 0, 180, 181, 182, 336, 829, 338, 830, 183,
	831, 832, 0, 184, 342, 343, 185, 186, 782, 813,
	833, 834, 346, 0, 187, 825, 0, 805, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 476,
	195, 196, 197, 0, 806, 807, 809, 0, 808, 810,
	198, 199, 398, 200, 835, 201, 836, 837, 1043, 202,
	0, 203, 0, 204, 0, 0, 828, 206, 0, 207,
	0, 0, 0, 770, 208, 209, 210, 815, 816, 793,
	0, 0, 211, 212, 838, 839, 840, 0, 213, 0,
	214, 0, 0, 477, 215, 0, 216, 826, 0, 358,
	0, 217, 218, 219, 220, 221, 822, 824, 479, 0,
	225, 0, 222, 0, 478, 223, 841, 224, 842, 843,
	844, 845, 846, 0, 804, 0, 480, 226, 227, 228,
	481, 229, 230, 231, 0, 233, 232, 0, 827, 482,
	234, 483, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 484, 242, 243, 245, 244, 765,
	0, 794, 823, 246, 847, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 485, 252, 486, 817,
	253, 254, 255, 256, 257, 0, 258, 818, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 848, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 487, 282, 283, 771,
	284, 0, 288, 289, 290, 291, 133, 293, 378, 292,
	294, 295, 811, 296, 285, 286, 297, 488, 298, 849,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 850,
	303, 304, 819, 0, 307, 135, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 851, 852, 0, 0, 315,
	316, 820, 821, 792, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 812, 325, 0, 388, 326, 327,
	328, 913, 853, 0, 0, 329, 0, 0, 0, 127,
	330, 331, 332, 333, 334, 766, 128, 0, 0, 0,
	0, 764, 0, 0, 0, 0, 762, 763, 0, 0,
	0, 0, 0, 0, 0, 1144, 0, 0, 0, 0,
	675, 775, 797, 786, 787, 784, 785, 776, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 178,
	0, 179, 0, 0, 0, 0, 814, 779, 0, 0,
	0, 180, 181, 182, 336, 829, 338, 830, 183, 831,
	832, 0, 184, 342, 343, 185, 186, 782, 813, 833,
	834, 346, 0, 187, 825, 0, 805, 0, 188, 189,
	190, 0, 191, 0, 192, 193, 194, 0, 476, 195,
	196, 197, 0, 806, 807, 809, 0, 808, 810, 198,
	199, 398, 200, 835, 201, 836, 837, 0, 202, 0,
	203, 0, 204, 0, 0, 828, 206, 0, 207, 0,
	0, 0, 770, 208, 209, 210, 815, 816, 793, 0,
	0, 211, 212, 838, 839, 840, 0, 213, 0, 214,
	0, 0, 477, 215, 0, 216, 826, 0, 358, 0,
	217, 218, 219, 220, 221, 822, 824, 479, 0, 225,
	0, 222, 0, 478, 223, 841, 224, 842, 843, 844,
	845, 846, 0, 804, 0, 480, 226, 227, 228, 481,
	229, 230, 231, 0, 233, 232, 0, 827, 482, 234,
	483, 0, 235, 0, 0, 236, 0, 237, 238, 239,
	241, 369, 240, 484, 242, 243, 245, 244, 765, 0,
	794, 823, 246, 847, 247, 248, 0, 249, 0, 0,
	250, 0, 0, 251, 372, 485, 252, 486, 817, 253,
	254, 255, 256, 257, 0, 258, 818, 259, 375, 260,
	0, 261, 262, 263, 264, 265, 266, 848, 267, 268,
	0, 269, 270, 271, 272, 273, 275, 276, 274, 277,
	278, 279, 280, 0, 281, 487, 282, 283, 771, 284,
	0, 288, 289, 290, 291, 133, 293, 378, 292, 294,
	295, 811, 296, 285, 286, 297, 488, 298, 849, 380,
	299, 0, 306, 300, 301, 287, 302, 305, 850, 303,
	304, 819, 0, 307, 135, 308, 309, 310, 311, 312,
	313, 314, 0, 383, 851, 852, 0, 0, 315, 316,
	820, 821, 792, 317, 318, 319, 320, 0, 0, 321,
	322, 323, 324, 812, 325, 0, 388, 326, 327, 328,
	913, 853, 0, 0, 329, 0, 0, 0, 127, 330,
	331, 332, 333, 334, 766, 128, 0, 0, 0, 0,
	764, 0, 0, 0, 0, 762, 763, 797, 786, 787,
	784, 785, 776, 0, 1144, 0, 0, 0, 0, 0,
	775, 0, 0, 177, 178, 0, 179, 0, 0, 0,
	0, 814, 779, 0, 0, 0, 180, 181, 182, 336,
	829, 338, 830, 183, 831, 832, 0, 184, 342, 343,
	185, 186, 782, 813, 833, 834, 346, 0, 187, 825,
	0, 805, 0, 188, 189, 190, 0, 191, 0, 192,
	193, 194, 0, 476, 195, 196, 197, 0, 806, 807,
	809, 0, 808, 810, 198, 199, 398, 200, 835, 201,
	836, 837, 0, 202, 0, 203, 0, 204, 0, 0,
	828, 206, 0, 207, 0, 0, 0, 770, 208, 209,
	210, 815, 816, 793, 0, 0, 211, 212, 838, 839,
	840, 0, 213, 0, 214, 0, 0, 477, 215, 0,
	216, 826, 0, 358, 0, 217, 218, 219, 220, 221,
	822, 824, 479, 0, 225, 0, 222, 0, 478, 223,
	841, 224, 842, 843, 844, 845, 846, 0, 804, 0,
	480, 226, 227, 228, 481, 229, 230, 231, 0, 233,
	232, 0, 827, 482, 234, 483, 0, 235, 0, 0,
	236, 0, 237, 238, 239, 241, 369, 240, 484, 242,
	243, 245, 244, 765, 0, 794, 823, 246, 847, 247,
	248, 0, 249, 0, 0, 250, 0, 0, 251, 372,
	485, 252, 486, 817, 253, 254, 255, 256, 257, 0,
	258, 818, 259, 375, 260, 0, 261, 262, 263, 264,
	265, 266, 848, 267, 268, 0, 269, 270, 271, 272,
	273, 275, 276, 274, 277, 278, 279, 280, 0, 281,
	487, 282, 283, 771, 284, 0, 288, 289, 290, 291,
	133, 293, 378, 292, 294, 295, 811, 296, 285, 286,
	297, 488, 298, 849, 380, 299, 0, 306, 300, 301,
	287, 302, 305, 850, 303, 304, 819, 0, 307, 135,
	308, 309, 310, 311, 312, 313, 314, 0, 383, 851,
	852, 0, 0, 315, 316, 820, 821, 792, 317, 318,
	319, 320, 0, 0, 321, 322, 323, 324, 812, 325,
	0, 388, 326, 327, 328, 913, 853, 0, 0, 329,
	0, 0, 0, 127, 330, 331, 332, 333, 334, 766,
	128, 0, 0, 0, 0, 764, 0, 0, 0, 0,
	762, 763, 797, 786, 787, 784, 785, 776, 0, 1144,
	0, 0, 0, 0, 0, 775, 0, 0, 177, 178,
	0, 179, 0, 0, 0, 0, 814, 779, 0, 0,
	0, 180, 181, 182, 336, 829, 338, 830, 183, 831,
	832, 1579, 184, 342, 343, 185, 186, 782, 813, 833,
	834, 346, 0, 187, 825, 0, 805, 0, 188, 189,
	190, 0, 191, 0, 192, 193, 194, 0, 476, 195,
	196, 197, 0, 806, 807, 809, 0, 808, 810, 198,
	199, 398, 200, 835, 201, 836, 837, 0, 202, 0,
	203, 0, 204, 0, 0, 828, 206, 0, 207, 0,
	0, 0, 770, 208, 209, 210, 815, 816, 793, 0,
	0, 211, 212, 838, 839, 840, 0, 213, 0, 214,
	0, 1584, 477, 215, 0, 216, 826, 0, 358, 0,
	217, 218, 219, 220, 221, 822, 824, 479, 0, 225,
	0, 222, 0, 478, 223, 841, 224, 842, 843, 844,
	845, 846, 0, 804, 0, 480, 226, 227, 228, 481,
	229, 230, 231, 0, 233, 232, 1580, 827, 482, 234,
	483, 0, 235, 0, 0, 236, 0, 237, 238, 239,
	241, 369, 240, 484, 242, 243, 245, 244, 765, 0,
	794, 823, 246, 847, 247, 248, 0, 249, 0, 0,
	250, 0, 0, 251, 372, 485, 252, 486, 817, 253,
	254, 255, 256, 257, 0, 258, 818, 259, 375, 260,
	0, 261, 262, 263, 264, 265, 266, 848, 267, 268,
	0, 269, 270, 271, 272, 273, 275, 276, 274, 277,
	278, 279, 280, 0, 281, 487, 282, 283, 771, 284,
	0, 288, 289, 290, 291, 0, 293, 378, 292, 294,
	295, 811, 296, 285, 286, 297, 488, 298, 849, 380,
	299, 0, 306, 300, 301, 287, 302, 305, 850, 303,
	304, 819, 0, 307, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 383, 851, 852, 0, 1581, 315, 316,
	820, 821, 792, 317, 318, 319, 320, 0, 0, 321,
	322, 323, 324, 812, 325, 0, 388, 326, 327, 328,
	389, 853, 0, 0, 329, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 766, 0, 0, 0, 0, 0,
	764, 0, 0, 0, 0, 762, 763, 797, 786, 787,
	784, 785, 776, 0, 772, 0, 0, 0, 0, 0,
	775, 0, 0, 177, 178, 0, 179, 0, 0, 0,
	0, 814, 779, 0, 0, 0, 180, 181, 182, 336,
	829, 338, 830, 183, 831, 832, 0, 184, 342, 343,
	185, 186, 782, 813, 833, 834, 346, 0, 187, 825,
	0, 805, 0, 188, 189, 190, 0, 191, 0, 192,
	193, 194, 0, 476, 195, 196, 197, 0, 806, 807,
	809, 0, 808, 810, 198, 199, 398, 200, 835, 201,
	836, 837, 0, 202, 0, 203, 0, 204, 0, 0,
	828, 206, 0, 207, 0, 0, 0, 770, 208, 209,
	210, 815, 816, 793, 0, 0, 211, 212, 838, 839,
	840, 0, 213, 0, 214, 0, 0, 477, 215, 0,
	216, 826, 0, 358, 0, 217, 218, 219, 220, 221,
	822, 824, 479, 0, 225, 0, 222, 0, 478, 223,
	841, 224, 842, 843, 844, 845, 846, 0, 804, 0,
	480, 226, 227, 228, 481, 229, 230, 231, 0, 233,
	232, 0, 827, 482, 234, 483, 0, 235, 0, 0,
	236, 0, 237, 238, 239, 241, 369, 240, 484, 242,
	243, 245, 244, 765, 2103, 794, 823, 246, 847, 247,
	248, 0, 249, 0, 0, 250, 0, 0, 251, 372,
	485, 252, 486, 817, 253, 254, 255, 256, 257, 0,
	258, 818, 259, 375, 260, 0, 261, 262, 263, 264,
	265, 266, 848, 267, 268, 0, 269, 270, 271, 272,
	273, 275, 276, 274, 277, 278, 279, 280, 0, 281,
	487, 282, 283, 771, 284, 0, 288, 289, 290, 291,
	0, 293, 378, 292, 294, 295, 811, 296, 285, 286,
	297, 488, 298, 849, 380, 299, 0, 306, 300, 301,
	287, 302, 305, 850, 303, 304, 819, 0, 307, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 383, 851,
	852, 0, 0, 315, 316, 820, 821, 792, 317, 318,
	319, 320, 0, 0, 321, 322, 323, 324, 812, 325,
	0, 388, 326, 327, 328, 389, 853, 0, 0, 329,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 766,
	0, 0, 0, 0, 0, 764, 0, 0, 0, 0,
	762, 763, 1038, 797, 786, 787, 784, 785, 776, 772,
	0, 0, 0, 0, 0, 775, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 814, 779, 0,
	0, 0, 180, 181, 182, 336, 829, 338, 830, 183,
	831, 832, 0, 184, 342, 343, 185, 186, 782, 813,
	833, 834, 346, 0, 187, 825, 0, 805, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 476,
	195, 196, 197, 0, 806, 807, 809, 0, 808, 810,
	198, 199, 398, 200, 835, 201, 836, 837, 0, 202,
	0, 203, 0, 204, 0, 0, 828, 206, 0, 207,
	0, 0, 0, 770, 208, 209, 210, 815, 816, 793,
	0, 0, 211, 212, 838, 839, 840, 0, 213, 0,
	214, 0, 0, 477, 215, 0, 216, 826, 0, 358,
	0, 217, 218, 219, 220, 221, 822, 824, 479, 0,
	225, 1367, 222, 0, 478, 223, 841, 224, 842, 843,
	844, 845, 846, 0, 804, 0, 480, 226, 227, 228,
	481, 229, 230, 231, 0, 233, 232, 0, 827, 482,
	234, 483, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 484, 242, 243, 245, 244, 765,
	0, 794, 823, 246, 847, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 485, 252, 486, 817,
	253, 254, 255, 256, 257, 0, 258, 818, 259, 375,
	260, 1366, 261, 262, 263, 264, 265, 266, 848, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 487, 282, 283, 771,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 811, 296, 285, 286, 297, 488, 298, 849,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 850,
	303, 304, 819, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 851, 852, 0, 0, 315,
	316, 820, 821, 792, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 812, 325, 0, 388, 326, 327,
	328, 389, 853, 0, 0, 329, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 766, 0, 0, 0, 0,
	0, 764, 0, 0, 0, 0, 762, 763, 797, 786,
	787, 784, 785, 776, 0, 772, 0, 0, 0, 0,
	0, 775, 0, 0, 177, 178, 0, 179, 0, 0,
	0, 0, 814, 779, 0, 0, 0, 180, 181, 182,
	336, 829, 338, 830, 183, 831, 832, 0, 184, 342,
	343, 185, 186, 782, 813, 833, 834, 346, 0, 187,
	825, 0, 805, 0, 188, 189, 190, 0, 191, 0,
	192, 193, 194, 0, 476, 195, 196, 197, 0, 806,
	807, 809, 0, 808, 810, 198, 199, 398, 200, 835,
	201, 836, 837, 0, 202, 0, 203, 0, 204, 0,
	0, 828, 206, 0, 207, 0, 0, 0, 770, 208,
	209, 210, 815, 816, 793, 0, 0, 211, 212, 838,
	839, 840, 0, 213, 0, 214, 0, 0, 477, 215,
	0, 216, 826, 0, 358, 0, 217, 218, 219, 220,
	221, 822, 824, 479, 0, 225, 0, 222, 0, 478,
	223, 841, 224, 842, 843, 844, 845, 846, 0, 804,
	0, 480, 226, 227, 228, 481, 229, 230, 231, 0,
	233, 232, 0, 827, 482, 234, 483, 0, 235, 0,
	0, 236, 0, 237, 238, 239, 241, 369, 240, 484,
	242, 243, 245, 244, 765, 0, 794, 823, 246, 847,
	247, 248, 0, 249, 0, 0, 250, 0, 0, 251,
	372, 485, 252, 486, 817, 253, 254, 255, 256, 257,
	0, 258, 818, 259, 375, 260, 0, 261, 262, 263,
	264, 265, 266, 848, 267, 268, 0, 269, 270, 271,
	272, 273, 275, 276, 274, 277, 278, 279, 280, 0,
	281, 487, 282, 283, 771, 284, 0, 288, 289, 290,
	291, 0, 293, 378, 292, 294, 295, 811, 296, 285,
	286, 297, 488, 298, 849, 380, 299, 0, 306, 300,
	301, 287, 302, 305, 850, 303, 304, 819, 0, 307,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 383,
	851, 852, 0, 0, 315, 316, 820, 821, 792, 317,
	318, 319, 320, 0, 0, 321, 322, 323, 324, 812,
	325, 0, 388, 326, 327, 328, 389, 853, 0, 0,
	329, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	766, 0, 0, 0, 0, 0, 764, 0, 0, 0,
	0, 762, 763, 0, 0, 0, 0, 0, 1148, 1516,
	772, 0, 0, 0, 0, 0, 775, 797, 786, 787,
	784, 785, 776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 178, 0, 179, 0, 0, 0,
	0, 814, 779, 0, 0, 0, 180, 181, 182, 336,
	829, 338, 830, 183, 831, 832, 0, 184, 342, 343,
	185, 186, 782, 813, 833, 834, 346, 0, 187, 825,
	0, 805, 0, 188, 189, 190, 0, 191, 0, 192,
	193, 194, 0, 476, 195, 196, 197, 0, 806, 807,
	809, 0, 808, 810, 198, 199, 398, 200, 835, 201,
	836, 837, 1043, 202, 0, 203, 0, 204, 0, 0,
	828, 206, 0, 207, 0, 0, 0, 770, 208, 209,
	210, 815, 816, 793, 0, 0, 211, 212, 838, 839,
	840, 0, 213, 0, 214, 0, 0, 477, 215, 0,
	216, 826, 0, 358, 0, 217, 218, 219, 220, 221,
	822, 824, 479, 0, 225, 0, 222, 0, 478, 223,
	841, 224, 842, 843, 844, 845, 846, 0, 804, 0,
	480, 226, 227, 228, 481, 229, 230, 231, 0, 233,
	232, 0, 827, 482, 234, 483, 0, 235, 0, 0,
	236, 0, 237, 238, 239, 241, 369, 240, 484, 242,
	243, 245, 244, 765, 0, 794, 823, 246, 847, 247,
	248, 0, 249, 0, 0, 250, 0, 0, 251, 372,
	485, 252, 486, 817, 253, 254, 255, 256, 257, 0,
	258, 818, 259, 375, 260, 0, 261, 262, 263, 264,
	265, 266, 848, 267, 268, 0, 269, 270, 271, 272,
	273, 275, 276, 274, 277, 278, 279, 280, 0, 281,
	487, 282, 283, 771, 284, 0, 288, 289, 290, 291,
	0, 293, 378, 292, 294, 295, 811, 296, 285, 286,
	297, 488, 298, 849, 380, 299, 0, 306, 300, 301,
	287, 302, 305, 850, 303, 304, 819, 0, 307, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 383, 851,
	852, 0, 0, 315, 316, 820, 821, 792, 317, 318,
	319, 320, 0, 0, 321, 322, 323, 324, 812, 325,
	0, 388, 326, 327, 328, 389, 853, 0, 0, 329,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 766,
	0, 0, 0, 0, 0, 764, 0, 0, 0, 0,
	762, 763, 797, 786, 787, 784, 785, 776, 0, 772,
	0, 0, 0, 0, 0, 775, 0, 0, 177, 178,
	0, 179, 0, 0, 0, 0, 814, 779, 0, 0,
	0, 180, 181, 182, 336, 829, 338, 830, 183, 831,
	832, 0, 184, 342, 343, 185, 186, 782, 813, 833,
	834, 346, 0, 187, 825, 0, 805, 0, 188, 189,
	190, 0, 191, 0, 192, 193, 194, 0, 476, 195,
	196, 197, 0, 806, 807, 809, 0, 808, 810, 198,
	199, 398, 200, 835, 201, 836, 837, 0, 202, 0,
	203, 0, 204, 0, 0, 828, 206, 0, 207, 0,
	0, 0, 770, 208, 209, 210, 815, 816, 793, 0,
	0, 211, 212, 838, 839, 840, 0, 213, 0, 214,
	0, 0, 477, 215, 0, 216, 826, 0, 358, 0,
	217, 218, 219, 220, 221, 822, 824, 479, 0, 225,
	0, 222, 0, 478, 223, 841, 224, 842, 843, 844,
	845, 846, 0, 804, 0, 480, 226, 227, 228, 481,
	229, 230, 231, 0, 233, 232, 0, 827, 482, 234,
	483, 0, 235, 0, 0, 236, 0, 237, 238, 239,
	241, 369, 240, 484, 242, 243, 245, 244, 765, 0,
	794, 823, 246, 847, 247, 248, 0, 249, 0, 0,
	250, 0, 0, 251, 372, 485, 252, 486, 817, 253,
	254, 255, 256, 257, 0, 258, 818, 259, 375, 260,
	0, 261, 262, 263, 264, 265, 266, 848, 267, 268,
	0, 269, 270, 271, 272, 273, 275, 276, 274, 277,
	278, 279, 280, 0, 281, 487, 282, 283, 771, 284,
	0, 288, 289, 290, 291, 0, 293, 378, 292, 294,
	295, 811, 296, 285, 286, 297, 488, 298, 849, 380,
	299, 0, 306, 300, 301, 287, 302, 305, 850, 303,
	304, 819, 0, 307, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 383, 851, 852, 0, 0, 315, 316,
	820, 821, 792, 317, 318, 319, 320, 0, 0, 321,
	322, 323, 324, 812, 325, 0, 388, 326, 327, 328,
	389, 853, 0, 0, 329, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 766, 0, 0, 0, 0, 0,
	764, 0, 0, 0, 0, 762, 763, 797, 786, 787,
	784, 785, 776, 0, 772, 2071, 0, 0, 0, 0,
	775, 0, 0, 177, 178, 0, 179, 0, 0, 0,
	0, 814, 779, 0, 0, 0, 180, 181, 182, 336,
	829, 338, 830, 183, 831, 832, 0, 184, 342, 343,
	185, 186, 782, 813, 833, 834, 346, 0, 187, 825,
	0, 805, 0, 188, 189, 190, 0, 191, 0, 192,
	193, 194, 0, 476, 195, 196, 197, 0, 806, 807,
	809, 0, 808, 810, 198, 199, 398, 200, 835, 201,
	836, 837, 0, 202, 0, 203, 0, 204, 0, 0,
	828, 206, 0, 207, 0, 0, 0, 770, 208, 209,
	210, 815, 816, 793, 0, 0, 211, 212, 838, 839,
	840, 0, 213, 0, 214, 0, 0, 477, 215, 0,
	216, 826, 0, 358, 0, 217, 218, 219, 220, 221,
	822, 824, 479, 0, 225, 0, 222, 0, 478, 223,
	841, 224, 842, 843, 844, 845, 846, 0, 804, 0,
	480, 226, 227, 228, 481, 229, 230, 231, 0, 233,
	232, 0, 827, 482, 234, 483, 0, 235, 0, 0,
	236, 0, 237, 238, 239, 241, 369, 240, 484, 242,
	243, 245, 244, 765, 0, 794, 823, 246, 847, 247,
	248, 0, 249, 0, 0, 250, 0, 0, 251, 372,
	485, 252, 486, 817, 253, 254, 255, 256, 257, 0,
	258, 818, 259, 375, 260, 0, 261, 262, 263, 264,
	265, 266, 848, 267, 268, 0, 269, 270, 271, 272,
	273, 275, 276, 274, 277, 278, 279, 280, 0, 281,
	487, 282, 283, 771, 284, 0, 288, 289, 290, 291,
	0, 293, 378, 292, 294, 295, 811, 296, 285, 286,
	297, 488, 298, 849, 380, 299, 0, 306, 300, 301,
	287, 302, 305, 850, 303, 304, 819, 0, 307, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 383, 851,
	852, 0, 0, 315, 316, 820, 821, 792, 317, 318,
	319, 320, 0, 0, 321, 322, 323, 324, 812, 325,
	0, 388, 326, 327, 328, 389, 853, 2020, 0, 329,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 766,
	0, 0, 0, 0, 0, 764, 0, 0, 0, 0,
	762, 763, 797, 786, 787, 784, 785, 776, 0, 772,
	0, 0, 0, 0, 0, 775, 0, 0, 177, 178,
	0, 179, 0, 0, 0, 0, 814, 779, 0, 0,
	0, 180, 181, 182, 336, 829, 338, 830, 183, 831,
	832, 0, 184, 342, 343, 185, 186, 782, 813, 833,
	834, 346, 0, 187, 825, 0, 805, 0, 188, 189,
	190, 0, 191, 0, 192, 193, 194, 0, 476, 195,
	196, 197, 0, 806, 807, 809, 0, 808, 810, 198,
	199, 398, 200, 835, 201, 836, 837, 0, 202, 0,
	203, 0, 204, 0, 0, 828, 206, 0, 207, 0,
	0, 0, 770, 208, 209, 210, 815, 816, 793, 0,
	0, 211, 212, 838, 839, 840, 0, 213, 0, 214,
	0, 0, 477, 215, 0, 216, 826, 0, 358, 0,
	217, 218, 219, 220, 221, 822, 824, 479, 0, 225,
	0, 222, 0, 478, 223, 841, 224, 842, 843, 844,
	845, 846, 0, 804, 0, 480, 226, 227, 228, 481,
	229, 230, 231, 0, 233, 232, 0, 827, 482, 234,
	483, 0, 235, 0, 0, 236, 0, 237, 238, 239,
	241, 369, 240, 484, 242, 243, 245, 244, 765, 0,
	794, 823, 246, 847, 247, 248, 0, 249, 0, 0,
	250, 0, 0, 251, 372, 485, 252, 486, 817, 253,
	254, 255, 256, 257, 0, 258, 818, 259, 375, 260,
	0, 261, 262, 263, 264, 265, 266, 848, 267, 268,
	0, 269, 270, 271, 272, 273, 275, 276, 274, 277,
	278, 279, 280, 0, 281, 487, 282, 283, 771, 284,
	0, 288, 289, 290, 291, 0, 293, 378, 292, 294,
	295, 811, 296, 285, 286, 297, 488, 298, 849, 380,
	299, 0, 306, 300, 301, 287, 302, 305, 850, 303,
	304, 819, 0, 307, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 383, 851, 852, 0, 0, 315, 316,
	820, 821, 792, 317, 318, 319, 320, 0, 0, 321,
	322, 323, 324, 812, 325, 0, 388, 326, 327, 328,
	389, 853, 0, 0, 329, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 766, 0, 0, 0, 0, 0,
	764, 0, 0, 0, 0, 762, 763, 797, 786, 787,
	784, 785, 776, 0, 772, 2010, 0, 0, 0, 0,
	775, 0, 0, 177, 178, 0, 179, 0, 0, 0,
	0, 814, 779, 0, 0, 0, 180, 181, 182, 336,
	829, 338, 830, 183, 831, 832, 0, 184, 342, 343,
	185, 186, 782, 813, 833, 834, 346, 0, 187, 825,
	0, 805, 0, 188, 189, 190, 0, 191, 0, 192,
	193, 194, 0, 476, 195, 196, 197, 0, 806, 807,
	809, 0, 808, 810, 198, 199, 398, 200, 835, 201,
	836, 837, 0, 202, 0, 203, 0, 204, 0, 0,
	828, 206, 0, 207, 0, 0, 0, 770, 208, 209,
	210, 815, 816, 793, 0, 0, 211, 212, 838, 839,
	840, 0, 213, 0, 214, 0, 1584, 477, 215, 0,
	216, 826, 0, 358, 0, 217, 218, 219, 220, 221,
	822, 824, 479, 0, 225, 0, 222, 0, 478, 223,
	841, 224, 842, 843, 844, 845, 846, 0, 804, 0,
	480, 226, 227, 228, 481, 229, 230, 231, 0, 233,
	232, 0, 827, 482, 234, 483, 0, 235, 0, 0,
	236, 0, 237, 238, 239, 241, 369, 240, 484, 242,
	243, 245, 244, 765, 0, 794, 823, 246, 847, 247,
	248, 0, 249, 0, 0, 250, 0, 0, 251, 372,
	485, 252, 486, 817, 253, 254, 255, 256, 257, 0,
	258, 818, 259, 375, 260, 0, 261, 262, 263, 264,
	265, 266, 848, 267, 268, 0, 269, 270, 271, 272,
	273, 275, 276, 274, 277, 278, 279, 280, 0, 281,
	487, 282, 283, 771, 284, 0, 288, 289, 290, 291,
	0, 293, 378, 292, 294, 295, 811, 296, 285, 286,
	297, 488, 298, 849, 380, 299, 0, 306, 300, 301,
	287, 302, 305, 850, 303, 304, 819, 0, 307, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 383, 851,
	852, 0, 0, 315, 316, 820, 821, 792, 317, 318,
	319, 320, 0, 0, 321, 322, 323, 324, 812, 325,
	0, 388, 326, 327, 328, 389, 853, 0, 0, 329,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 766,
	0, 0, 0, 0, 0, 764, 0, 0, 0, 0,
	762, 763, 797, 786, 787, 784, 785, 776, 0, 772,
	0, 0, 0, 0, 0, 775, 0, 0, 177, 178,
	0, 179, 0, 0, 0, 0, 814, 779, 0, 0,
	0, 180, 181, 182, 336, 829, 338, 830, 183, 831,
	832, 0, 184, 342, 343, 185, 186, 782, 813, 833,
	834, 346, 0, 187, 825, 0, 805, 0, 188, 189,
	190, 0, 191, 0, 192, 193, 194, 0, 476, 195,
	196, 197, 0, 806, 807, 809, 0, 808, 810, 198,
	199, 398, 200, 835, 201, 836, 837, 0, 202, 0,
	203, 0, 204, 0, 0, 828, 206, 0, 207, 0,
	0, 0, 770, 208, 209, 210, 815, 816, 793, 0,
	0, 211, 212, 838, 839, 840, 0, 213, 0, 214,
	0, 0, 477, 215, 0, 216, 826, 0, 358, 0,
	217, 218, 219, 220, 221, 822, 824, 479, 0, 225,
	0, 222, 0, 478, 223, 841, 224, 842, 843, 844,
	845, 846, 0, 804, 0, 480, 226, 227, 228, 481,
	229, 230, 231, 0, 233, 232, 0, 827, 482, 234,
	483, 0, 235, 0, 0, 236, 0, 237, 238, 239,
	241, 369, 240, 484, 242, 243, 245, 244, 765, 0,
	794, 823, 246, 847, 247, 248, 0, 249, 0, 0,
	250, 0, 0, 251, 372, 485, 252, 486, 817, 253,
	254, 255, 256, 257, 0, 258, 818, 259, 375, 260,
	0, 261, 262, 263, 264, 265, 266, 848, 267, 268,
	0, 269, 270, 271, 272, 273, 275, 276, 274, 277,
	278, 279, 280, 0, 281, 487, 282, 283, 771, 284,
	0, 288, 289, 290, 291, 0, 293, 378, 292, 294,
	295, 811, 296, 285, 286, 297, 488, 298, 849, 380,
	299, 0, 306, 300, 301, 287, 302, 305, 850, 303,
	304, 819, 0, 307, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 383, 851, 852, 0, 0, 315, 316,
	820, 821, 792, 317, 318, 319, 320, 0, 0, 321,
	322, 323, 324, 812, 325, 0, 388, 326, 327, 328,
	389, 853, 0, 0, 329, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 766, 0, 0, 0, 0, 0,
	764, 0, 0, 0, 0, 762, 763, 1038, 0, 0,
	0, 0, 0, 0, 772, 0, 0, 0, 0, 1593,
	775, 797, 786, 787, 784, 785, 776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 178, 0,
	179, 0, 0, 0, 0, 814, 779, 0, 0, 0,
	180, 181, 182, 336, 829, 338, 830, 183, 831, 832,
	0, 184, 342, 343, 185, 186, 782, 813, 833, 834,
	346, 0, 187, 825, 0, 805, 0, 188, 189, 190,
	0, 191, 0, 192, 193, 194, 0, 476, 195, 196,
	197, 0, 806, 807, 809, 0, 808, 810, 198, 199,
	398, 200, 835, 201, 836, 837, 0, 202, 0, 203,
	0, 204, 0, 0, 828, 206, 0, 207, 0, 0,
	0, 770, 208, 209, 210, 815, 816, 793, 0, 0,
	211, 212, 838, 839, 840, 0, 213, 0, 214, 0,
	0, 477, 215, 0, 216, 826, 0, 358, 0, 217,
	218, 219, 220, 221, 822, 824, 479, 0, 225, 0,
	222, 0, 478, 223, 841, 224, 842, 843, 844, 845,
	846, 0, 804, 0, 480, 226, 227, 228, 481, 229,
	230, 231, 0, 233, 232, 0, 827, 482, 234, 483,
	0, 235, 0, 0, 236, 0, 237, 238, 239, 241,
	369, 240, 484, 242, 243, 245, 244, 765, 0, 794,
	823, 246, 847, 247, 248, 0, 249, 0, 0, 250,
	0, 0, 251, 372, 485, 252, 486, 817, 253, 254,
	255, 256, 257, 0, 258, 818, 259, 375, 260, 0,
	261, 262, 263, 264, 265, 266, 848, 267, 268, 0,
	269, 270, 271, 272, 273, 275, 276, 274, 277, 278,
	279, 280, 0, 281, 487, 282, 283, 771, 284, 0,
	288, 289, 290, 291, 0, 293, 378, 292, 294, 295,
	811, 296, 285, 286, 297, 488, 298, 849, 380, 299,
	0, 306, 300, 301, 287, 302, 305, 850, 303, 304,
	819, 0, 307, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 383, 851, 852, 0, 0, 315, 316, 820,
	821, 792, 317, 318, 319, 320, 0, 0, 321, 322,
	323, 324, 812, 325, 0, 388, 326, 327, 328, 389,
	853, 0, 0, 329, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 766, 0, 0, 0, 0, 0, 764,
	0, 0, 0, 0, 762, 763, 0, 0, 0, 0,
	0, 0, 0, 772, 0, 0, 0, 0, 1591, 775,
	797, 786, 787, 784, 785, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 178, 0, 179,
	0, 0, 0, 0, 814, 779, 0, 0, 0, 180,
	181, 182, 336, 829, 338, 830, 183, 831, 832, 0,
	184, 342, 343, 185, 186, 782, 813, 833, 834, 346,
	0, 187, 825, 0, 805, 0, 188, 189, 190, 0,
	191, 0, 192, 193, 194, 0, 476, 195, 196, 197,
	0, 806, 807, 809, 0, 808, 810, 198, 199, 398,
	200, 835, 201, 836, 837, 0, 202, 0, 203, 0,
	204, 0, 0, 828, 206, 0, 207, 0, 0, 0,
	770, 208, 209, 210, 815, 816, 793, 0, 0, 211,
	212, 838, 839, 840, 0, 213, 0, 214, 0, 0,
	477, 215, 0, 216, 826, 0, 358, 0, 217, 218,
	219, 220, 221, 822, 824, 479, 0, 225, 0, 222,
	0, 478, 223, 841, 224, 842, 843, 844, 845, 846,
	0, 804, 0, 480, 226, 227, 228, 481, 229, 230,
	231, 0, 233, 232, 0, 827, 482, 234, 483, 0,
	235, 0, 0, 236, 0, 237, 238, 239, 241, 369,
	240, 484, 242, 243, 245, 244, 765, 0, 794, 823,
	246, 847, 247, 248, 0, 249, 0, 0, 250, 0,
	0, 251, 372, 485, 252, 486, 817, 253, 254, 255,
	256, 257, 0, 258, 818, 259, 375, 260, 0, 261,
	262, 263, 264, 265, 266, 848, 267, 268, 0, 269,
	270, 271, 272, 273, 275, 276, 274, 277, 278, 279,
	280, 0, 281, 487, 282, 283, 771, 284, 0, 288,
	289, 290, 291, 0, 293, 378, 292, 294, 295, 811,
	296, 285, 286, 297, 488, 298, 849, 380, 299, 0,
	306, 300, 301, 287, 302, 305, 850, 303, 304, 819,
	0, 307, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 383, 851, 852, 0, 0, 315, 316, 820, 821,
	792, 317, 318, 319, 320, 0, 0, 321, 322, 323,
	324, 812, 325, 0, 388, 326, 327, 328, 389, 853,
	0, 0, 329, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 766, 0, 0, 0, 0, 0, 764, 0,
	0, 0, 0, 762, 763, 0, 0, 0, 0, 0,
	0, 0, 772, 0, 0, 0, 0, 1575, 775, 797,
	786, 787, 784, 785, 776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 178, 0, 179, 0,
	0, 0, 0, 814, 779, 0, 0, 0, 180, 181,
	182, 336, 829, 338, 830, 183, 831, 832, 0, 184,
	342, 343, 185, 186, 782, 813, 833, 834, 346, 0,
	187, 825, 0, 805, 0, 188, 189, 190, 0, 191,
	0, 192, 193, 194, 0, 476, 195, 196, 197, 0,
	806, 807, 809, 0, 808, 810, 198, 199, 398, 200,
	835, 201, 836, 837, 0, 202, 0, 203, 0, 204,
	0, 0, 828, 206, 0, 207, 0, 0, 0, 770,
	208, 209, 210, 815, 816, 793, 0, 0, 211, 212,
	838, 839, 840, 0, 213, 0, 214, 0, 0, 477,
	215, 0, 216, 826, 0, 358, 0, 217, 218, 219,
	220, 221, 822, 824, 479, 0, 225, 0, 222, 0,
	478, 223, 841, 224, 842, 843, 844, 845, 846, 0,
	804, 0, 480, 226, 227, 228, 481, 229, 230, 231,
	0, 233, 232, 0, 827, 482, 234, 483, 0, 235,
	0, 0, 236, 0, 237, 238, 239, 241, 369, 240,
	484, 242, 243, 245, 244, 765, 0, 794, 823, 246,
	847, 247, 248, 0, 249, 0, 0, 250, 0, 0,
	251, 372, 485, 252, 486, 817, 253, 254, 255, 256,
	257, 0, 258, 818, 259, 375, 260, 0, 261, 262,
	263, 264, 265, 266, 848, 267, 268, 0, 269, 270,
	271, 272, 273, 275, 276, 274, 277, 278, 279, 280,
	0, 281, 487, 282, 283, 771, 284, 0, 288, 289,
	290, 291, 0, 293, 378, 292, 294, 295, 811, 296,
	285, 286, 297, 488, 298, 849, 380, 299, 0, 306,
	300, 301, 287, 302, 305, 850, 303, 304, 819, 0,
	307, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	383, 851, 852, 0, 0, 315, 316, 820, 821, 792,
	317, 318, 319, 320, 0, 0, 321, 322, 323, 324,
	812, 325, 0, 388, 326, 327, 328, 389, 853, 0,
	0, 329, 0, 0, 0, 0, 330, 331, 332, 333,
	334, 766, 0, 0, 0, 0, 0, 764, 0, 0,
	0, 0, 762, 763, 0, 0, 0, 0, 0, 0,
	0, 772, 0, 0, 0, 0, 1563, 775, 797, 786,
	787, 784, 785, 776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 178, 0, 179, 0, 0,
	0, 0, 814, 779, 0, 0, 0, 180, 181, 182,
	336, 829, 338, 830, 183, 831, 832, 0, 184, 342,
	343, 185, 186, 782, 813, 833, 834, 346, 0, 187,
	825, 0, 805, 0, 188, 189, 190, 0, 191, 0,
	192, 193, 194, 0, 476, 195, 196, 197, 0, 806,
	807, 809, 0, 808, 810, 198, 199, 398, 200, 835,
	201, 836, 837, 0, 202, 0, 203, 0, 204, 0,
	0, 828, 206, 0, 207, 0, 0, 0, 770, 208,
	209, 210, 815, 816, 793, 0, 0, 211, 212, 838,
	839, 840, 0, 213, 0, 214, 0, 0, 477, 215,
	0, 216, 826, 0, 358, 0, 217, 218, 219, 220,
	221, 822, 824, 479, 0, 225, 0, 222, 0, 478,
	223, 841, 224, 842, 843, 844, 845, 846, 0, 804,
	0, 480, 226, 227, 228, 481, 229, 230, 231, 0,
	233, 232, 0, 827, 482, 234, 483, 0, 235, 0,
	0, 236, 0, 237, 238, 239, 241, 369, 240, 484,
	242, 243, 245, 244, 765, 0, 794, 823, 246, 847,
	247, 248, 0, 249, 0, 0, 250, 0, 0, 251,
	372, 485, 252, 486, 817, 253, 254, 255, 256, 257,
	0, 258, 818, 259, 375, 260, 0, 261, 262, 263,
	264, 265, 266, 848, 267, 268, 0, 269, 270, 271,
	272, 273, 275, 276, 274, 277, 278, 279, 280, 0,
	281, 487, 282, 283, 771, 284, 0, 288, 289, 290,
	291, 0, 293, 378, 292, 294, 295, 811, 296, 285,
	286, 297, 488, 298, 849, 380, 299, 0, 306, 300,
	301, 287, 302, 305, 850, 303, 304, 819, 0, 307,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 383,
	851, 852, 0, 0, 315, 316, 820, 821, 792, 317,
	318, 319, 320, 0, 0, 321, 322, 323, 324, 812,
	325, 0, 388, 326, 327, 328, 389, 853, 0, 0,
	329, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	766, 0, 0, 0, 0, 0, 764, 0, 0, 0,
	0, 762, 763, 0, 0, 0, 0, 0, 0, 0,
	772, 0, 0, 0, 0, 1561, 775, 1553, 786, 787,
	784, 785, 776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 178, 0, 179, 0, 0, 0,
	0, 814, 779, 0, 0, 0, 180, 181, 182, 336,
	829, 338, 830, 183, 831, 832, 0, 184, 342, 343,
	185, 186, 782, 813, 833, 834, 346, 0, 187, 825,
	0, 805, 0, 188, 189, 190, 0, 191, 0, 192,
	193, 194, 0, 476, 195, 196, 197, 0, 806, 807,
	809, 0, 808, 810, 198, 199, 398, 200, 835, 1556,
	836, 837, 0, 202, 0, 203, 0, 204, 0, 0,
	828, 206, 0, 207, 0, 0, 0, 770, 208, 209,
	210, 815, 816, 793, 0, 0, 211, 212, 838, 839,
	840, 0, 213, 0, 214, 0, 0, 477, 215, 0,
	216, 826, 0, 358, 0, 217, 218, 1557, 220, 221,
	822, 824, 479, 0, 225, 0, 222, 0, 478, 223,
	841, 224, 842, 843, 844, 845, 846, 0, 804, 0,
	480, 226, 227, 228, 481, 229, 230, 231, 0, 233,
	232, 0, 827, 482, 234, 483, 0, 235, 0, 0,
	236, 0, 237, 1558, 1555, 241, 369, 240, 484, 242,
	243, 245, 244, 765, 0, 794, 823, 246, 847, 247,
	248, 0, 249, 0, 0, 250, 0, 0, 251, 372,
	485, 252, 486, 817, 253, 254, 255, 256, 257, 0,
	258, 818, 259, 375, 260, 0, 261, 262, 263, 264,
	265, 266, 848, 267, 268, 0, 269, 270, 271, 272,
	273, 275, 276, 274, 277, 278, 279, 280, 0, 281,
	487, 282, 283, 771, 284, 0, 288, 289, 290, 1559,
	0, 293, 378, 292, 294, 295, 811, 296, 285, 286,
	297, 488, 298, 849, 380, 299, 0, 306, 300, 301,
	287, 302, 305, 850, 303, 304, 819, 0, 307, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 383, 851,
	852, 0, 0, 315, 316, 820, 821, 792, 317, 318,
	319, 320, 0, 0, 321, 322, 323, 324, 812, 325,
	0, 388, 326, 327, 328, 389, 853, 0, 0, 329,
	0, 0, 0, 0, 330, 331, 332, 1554, 334, 766,
	0, 0, 0, 0, 0, 764, 0, 0, 0, 0,
	762, 763, 0, 0, 0, 0, 0, 0, 0, 772,
	0, 0, 0, 0, 1550, 775, 1553, 786, 787, 784,
	785, 776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 177, 178, 0, 179, 0, 0, 0, 0,
	814, 779, 0, 0, 0, 180, 181, 182, 336, 829,
	338, 830, 183, 831, 832, 0, 184, 342, 343, 185,
	186, 782, 813, 833, 834, 346, 0, 187, 825, 0,
	805, 0, 188, 189, 190, 0, 191, 0, 192, 193,
	194, 0, 476, 195, 196, 197, 0, 806, 807, 809,
	0, 808, 810, 198, 199, 398, 200, 835, 1556, 836,
	837, 0, 202, 0, 203, 0, 204, 0, 0, 828,
	206, 0, 207, 0, 0, 0, 770, 208, 209, 210,
	815, 816, 793, 0, 0, 211, 212, 838, 839, 840,
	0, 213, 0, 214, 0, 0, 477, 215, 0, 216,
	826, 0, 358, 0, 217, 218, 1557, 220, 221, 822,
	824, 479, 0, 225, 0, 222, 0, 478, 223, 841,
	224, 842, 843, 844, 845, 846, 0, 804, 0, 480,
	226, 227, 228, 481, 229, 230, 231, 0, 233, 232,
	0, 827, 482, 234, 483, 0, 235, 0, 0, 236,
	0, 237, 1558, 1555, 241, 369, 240, 484, 242, 243,
	245, 244, 765, 0, 794, 823, 246, 847, 247, 248,
	0, 249, 0, 0, 250, 0, 0, 251, 372, 485,
	252, 486, 817, 253, 254, 255, 256, 257, 0, 258,
	818, 259, 375, 260, 0, 261, 262, 263, 264, 265,
	266, 848, 267, 268, 0, 269, 270, 271, 272, 273,
	275, 276, 274, 277, 278, 279, 280, 0, 281, 487,
	282, 283, 771, 284, 0, 288, 289, 290, 1559, 0,
	293, 378, 292, 294, 295, 811, 296, 285, 286, 297,
	488, 298, 849, 380, 299, 0, 306, 300, 301, 287,
	302, 305, 850, 303, 304, 819, 0, 307, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 383, 851, 852,
	0, 0, 315, 316, 820, 821, 792, 317, 318, 319,
	320, 0, 0, 321, 322, 323, 324, 812, 325, 0,
	388, 326, 327, 328, 389, 853, 0, 0, 329, 0,
	0, 0, 0, 330, 331, 332, 1554, 334, 766, 0,
	0, 0, 0, 0, 764, 0, 0, 0, 0, 762,
	763, 797, 786, 787, 784, 785, 776, 0, 772, 0,
	0, 0, 0, 0, 775, 0, 0, 177, 178, 0,
	179, 0, 0, 0, 0, 814, 779, 0, 0, 0,
	180, 181, 182, 336, 829, 338, 830, 183, 831, 832,
	0, 184, 342, 343, 185, 186, 782, 813, 833, 834,
	346, 0, 187, 825, 0, 805, 0, 188, 189, 190,
	0, 191, 0, 192, 193, 194, 0, 476, 195, 196,
	197, 0, 806, 807, 809, 0, 808, 810, 198, 199,
	398, 200, 835, 201, 836, 837, 0, 202, 0, 203,
	0, 204, 0, 0, 828, 206, 0, 207, 0, 0,
	0, 770, 208, 209, 210, 815, 816, 793, 0, 0,
	211, 212, 838, 839, 840, 0, 213, 0, 214, 0,
	0, 477, 215, 0, 216, 826, 0, 358, 0, 217,
	218, 219, 220, 221, 822, 824, 479, 0, 225, 0,
	222, 0, 478, 223, 841, 224, 842, 843, 844, 845,
	846, 0, 804, 0, 480, 226, 227, 228, 481, 229,
	230, 231, 0, 233, 232, 0, 827, 482, 234, 483,
	0, 235, 0, 0, 236, 0, 237, 238, 239, 241,
	369, 240, 484, 242, 243, 245, 244, 765, 0, 794,
	823, 246, 847, 247, 248, 0, 249, 0, 0, 250,
	0, 0, 251, 372, 485, 252, 486, 817, 253, 254,
	255, 256, 257, 0, 258, 818, 259, 375, 260, 0,
	261, 262, 263, 264, 265, 266, 848, 267, 268, 0,
	269, 270, 271, 272, 273, 275, 276, 274, 277, 278,
	279, 280, 0, 281, 487, 282, 283, 771, 284, 0,
	288, 289, 290, 291, 0, 293, 378, 292, 294, 295,
	811, 296, 285, 286, 297, 488, 298, 849, 380, 299,
	0, 306, 300, 301, 287, 302, 305, 850, 303, 304,
	819, 0, 307, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 383, 851, 852, 0, 0, 315, 316, 820,
	821, 792, 317, 318, 319, 320, 0, 0, 321, 322,
	323, 324, 812, 325, 0, 388, 326, 327, 328, 389,
	853, 0, 0, 329, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 766, 0, 0, 0, 0, 0, 764,
	0, 0, 0, 0, 762, 763, 0, 0, 0, 0,
	0, 0, 0, 772, 1511, 0, 0, 0, 1397, 775,
	797, 786, 787, 784, 785, 776, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 178, 0, 179,
	0, 0, 0, 0, 814, 779, 0, 0, 0, 180,
	181, 182, 336, 829, 338, 830, 183, 831, 832, 0,
	184, 342, 343, 185, 186, 782, 813, 833, 834, 346,
	0, 187, 825, 0, 805, 0, 188, 189, 190, 0,
	191, 0, 192, 193, 194, 0, 476, 195, 196, 197,
	0, 806, 807, 809, 0, 808, 810, 198, 199, 398,
	200, 835, 201, 836, 837, 0, 202, 0, 203, 0,
	204, 0, 0, 828, 206, 0, 207, 0, 0, 0,
	770, 208, 209, 210, 815, 816, 793, 0, 0, 211,
	212, 838, 839, 840, 0, 213, 0, 214, 0, 0,
	477, 215, 0, 216, 826, 0, 358, 0, 217, 218,
	219, 220, 221, 822, 824, 479, 0, 225, 0, 222,
	0, 478, 223, 841, 224, 842, 843, 844, 845, 846,
	0, 804, 0, 480, 226, 227, 228, 481, 229, 230,
	231, 0, 233, 232, 0, 827, 482, 234, 483, 0,
	235, 0, 0, 236, 0, 237, 238, 239, 241, 369,
	240, 484, 242, 243, 245, 244, 765, 0, 794, 823,
	246, 847, 247, 248, 0, 249, 0, 0, 250, 0,
	0, 251, 372, 485, 252, 486, 817, 253, 254, 255,
	256, 257, 0, 258, 818, 259, 375, 260, 0, 261,
	262, 263, 264, 265, 266, 848, 267, 268, 0, 269,
	270, 271, 272, 273, 275, 276, 274, 277, 278, 279,
	280, 0, 281, 487, 282, 283, 771, 284, 0, 288,
	289, 290, 291, 0, 293, 378, 292, 294, 295, 811,
	296, 285, 286, 297, 488, 298, 849, 380, 299, 0,
	306, 300, 301, 287, 302, 305, 850, 303, 304, 819,
	0, 307, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 383, 851, 852, 0, 0, 315, 316, 820, 821,
	792, 317, 318, 319, 320, 0, 0, 321, 322, 323,
	324, 812, 325, 0, 388, 326, 327, 328, 389, 853,
	0, 0, 329, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 766, 0, 0, 0, 0, 0, 764, 0,
	0, 0, 0, 762, 763, 797, 786, 787, 784, 785,
	776, 0, 772, 0, 0, 0, 0, 0, 775, 0,
	0, 177, 178, 1354, 179, 0, 0, 0, 0, 814,
	779, 0, 0, 0, 180, 181, 182, 336, 829, 338,
	830, 183, 831, 832, 0, 184, 342, 343, 185, 186,
	782, 813, 833, 834, 346, 0, 187, 825, 0, 805,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 476, 195, 196, 197, 0, 806, 807, 809, 0,
	808, 810, 198, 199, 398, 200, 835, 201, 836, 837,
	0, 202, 0, 203, 0, 204, 0, 0, 828, 206,
	0, 207, 0, 0, 0, 770, 208, 209, 210, 815,
	816, 793, 0, 0, 211, 212, 838, 839, 840, 0,
	213, 0, 214, 0, 0, 477, 215, 0, 216, 826,
	0, 358, 0, 217, 218, 219, 220, 221, 822, 824,
	479, 0, 225, 0, 222, 0, 478, 223, 841, 224,
	842, 843, 844, 845, 846, 0, 804, 0, 480, 226,
	227, 228, 481, 229, 230, 231, 0, 233, 232, 0,
	827, 482, 234, 483, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 484, 242, 243, 245,
	244, 765, 0, 794, 823, 246, 847, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 485, 252,
	486, 817, 253, 254, 255, 256, 257, 0, 258, 818,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	848, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 487, 282,
	283, 771, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 811, 296, 285, 286, 297, 488,
	298, 849, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 850, 303, 304, 819, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 851, 852, 0,
	0, 315, 316, 820, 821, 792, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 812, 325, 0, 388,
	326, 327, 328, 389, 853, 0, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 766, 0, 0,
	0, 0, 0, 764, 0, 0, 0, 0, 762, 763,
	0, 0, 0, 0, 0, 0, 0, 772, 0, 0,
	0, 0, 861, 775, 797, 786, 787, 784, 785, 776,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 178, 0, 179, 0, 0, 0, 0, 814, 779,
	0, 0, 0, 180, 181, 182, 336, 829, 338, 830,
	183, 831, 832, 0, 184, 342, 343, 185, 186, 782,
	813, 833, 834, 346, 0, 187, 825, 0, 805, 0,
	188, 189, 190, 0, 191, 0, 192, 193, 194, 0,
	476, 195, 196, 197, 0, 806, 807, 809, 0, 808,
	810, 198, 199, 398, 200, 835, 201, 836, 837, 0,
	202, 0, 203, 0, 204, 0, 0, 828, 206, 0,
	207, 0, 0, 0, 770, 208, 209, 210, 815, 816,
	793, 0, 0, 211, 212, 838, 839, 840, 0, 213,
	0, 214, 0, 0, 477, 215, 0, 216, 826, 0,
	358, 0, 217, 218, 219, 220, 221, 822, 824, 479,
	0, 225, 0, 222, 0, 478, 223, 841, 224, 842,
	843, 844, 845, 846, 0, 804, 0, 480, 226, 227,
	228, 481, 229, 230, 231, 0, 233, 232, 0, 827,
	482, 234, 483, 0, 235, 0, 0, 236, 0, 237,
	238, 239, 241, 369, 240, 484, 242, 243, 245, 244,
	765, 0, 794, 823, 246, 847, 247, 248, 0, 249,
	0, 0, 250, 0, 0, 251, 372, 485, 252, 486,
	817, 253, 254, 255, 256, 257, 0, 258, 818, 259,
	375, 260, 0, 261, 262, 263, 264, 265, 266, 848,
	267, 268, 0, 269, 270, 271, 272, 273, 275, 276,
	274, 277, 278, 279, 280, 0, 281, 487, 282, 283,
	771, 284, 0, 288, 289, 290, 291, 0, 293, 378,
	292, 294, 295, 811, 296, 285, 286, 297, 488, 298,
	849, 380, 299, 0, 306, 300, 301, 287, 302, 305,
	850, 303, 304, 819, 0, 307, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 383, 851, 852, 0, 0,
	315, 316, 820, 821, 792, 317, 318, 319, 320, 0,
	0, 321, 322, 323, 324, 812, 325, 0, 388, 326,
	327, 328, 389, 853, 0, 0, 329, 0, 0, 0,
	0, 330, 331, 332, 333, 334, 766, 0, 0, 0,
	0, 0, 764, 0, 0, 0, 0, 762, 763, 0,
	0, 0, 0, 0, 0, 0, 772, 0, 0, 0,
	0, 760, 775, 797, 786, 787, 784, 785, 776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 814, 779, 0,
	0, 0, 180, 181, 182, 336, 829, 338, 830, 183,
	831, 832, 0, 184, 342, 343, 185, 186, 782, 813,
	833, 834, 346, 0, 187, 825, 0, 805, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 476,
	195, 196, 197, 0, 806, 807, 809, 0, 808, 810,
	198, 199, 398, 200, 835, 201, 836, 837, 0, 202,
	0, 203, 0, 204, 0, 0, 828, 206, 0, 207,
	0, 0, 0, 770, 208, 209, 210, 815, 816, 793,
	0, 0, 211, 212, 838, 839, 840, 0, 213, 0,
	214, 0, 0, 477, 215, 0, 216, 826, 0, 358,
	0, 217, 218, 219, 220, 221, 822, 824, 479, 0,
	225, 0, 222, 0, 478, 223, 841, 224, 842, 843,
	844, 845, 846, 0, 804, 0, 480, 226, 227, 228,
	481, 229, 230, 231, 0, 233, 232, 0, 827, 482,
	234, 483, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 484, 242, 243, 245, 244, 765,
	0, 794, 823, 246, 847, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 485, 252, 486, 817,
	253, 254, 255, 256, 257, 0, 258, 818, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 848, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 487, 282, 283, 771,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 811, 296, 285, 286, 297, 488, 298, 849,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 850,
	303, 304, 819, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 851, 852, 0, 0, 315,
	316, 820, 821, 792, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 812, 325, 0, 388, 326, 327,
	328, 389, 853, 0, 0, 329, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 766, 0, 0, 0, 0,
	0, 764, 0, 0, 0, 0, 762, 763, 797, 786,
	787, 784, 785, 776, 0, 772, 0, 0, 0, 0,
	0, 775, 0, 0, 177, 178, 0, 179, 0, 0,
	0, 0, 814, 779, 0, 0, 0, 180, 181, 182,
	336, 829, 338, 830, 183, 831, 832, 0, 184, 342,
	343, 185, 186, 782, 813, 833, 834, 346, 0, 187,
	825, 0, 805, 0, 188, 189, 190, 0, 191, 0,
	192, 193, 194, 0, 476, 195, 196, 2431, 0, 806,
	807, 809, 0, 808, 810, 198, 199, 398, 200, 835,
	201, 836, 837, 0, 202, 0, 203, 0, 204, 0,
	0, 828, 206, 0, 207, 0, 0, 0, 770, 208,
	209, 210, 815, 816, 793, 0, 0, 211, 212, 838,
	839, 840, 0, 213, 0, 214, 0, 0, 477, 215,
	0, 216, 826, 0, 358, 0, 217, 218, 219, 220,
	221, 822, 824, 479, 0, 225, 0, 222, 0, 478,
	223, 841, 224, 842, 843, 844, 845, 846, 0, 804,
	0, 480, 226, 227, 228, 481, 229, 230, 231, 0,
	233, 232, 0, 827, 482, 234, 483, 0, 235, 0,
	0, 236, 0, 237, 238, 239, 241, 369, 240, 484,
	242, 243, 245, 244, 765, 0, 794, 823, 246, 847,
	247, 248, 0, 249, 0, 0, 250, 0, 0, 251,
	372, 485, 252, 486, 817, 253, 254, 255, 256, 257,
	0, 258, 818, 259, 375, 260, 0, 261, 262, 263,
	264, 265, 266, 848, 267, 268, 0, 269, 270, 271,
	272, 273, 275, 276, 274, 277, 278, 279, 280, 0,
	281, 487, 282, 283, 771, 284, 0, 288, 289, 290,
	291, 0, 293, 378, 292, 294, 295, 811, 296, 285,
	286, 297, 488, 298, 849, 380, 299, 0, 306, 300,
	301, 287, 302, 305, 850, 303, 304, 819, 0, 307,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 383,
	851, 852, 0, 0, 315, 316, 820, 821, 792, 317,
	318, 2430, 320, 0, 0, 321, 322, 323, 324, 812,
	325, 0, 388, 326, 327, 328, 389, 853, 0, 0,
	329, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	766, 0, 0, 0, 0, 0, 764, 0, 0, 0,
	0, 762, 763, 797, 786, 787, 784, 785, 776, 0,
	772, 0, 0, 0, 0, 0, 775, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 814, 779, 0,
	0, 0, 180, 181, 182, 2429, 829, 338, 830, 183,
	831, 832, 0, 184, 342, 343, 185, 186, 782, 813,
	833, 834, 346, 0, 187, 825, 0, 805, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 476,
	195, 196, 2431, 0, 806, 807, 809, 0, 808, 810,
	198, 199, 398, 200, 835, 201, 836, 837, 0, 202,
	0, 203, 0, 204, 0, 0, 828, 206, 0, 207,
	0, 0, 0, 770, 208, 209, 210, 815, 816, 793,
	0, 0, 211, 212, 838, 839, 840, 0, 213, 0,
	214, 0, 0, 477, 215, 0, 216, 826, 0, 358,
	0, 217, 218, 219, 220, 221, 822, 824, 479, 0,
	225, 0, 222, 0, 478, 223, 841, 224, 842, 843,
	844, 845, 846, 0, 804, 0, 480, 226, 227, 228,
	481, 229, 230, 231, 0, 233, 232, 0, 827, 482,
	234, 483, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 484, 242, 243, 245, 244, 765,
	0, 794, 823, 246, 847, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 485, 252, 486, 817,
	253, 254, 255, 256, 257, 0, 258, 818, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 848, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 487, 282, 283, 771,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 811, 296, 285, 286, 297, 488, 298, 849,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 850,
	303, 304, 819, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 851, 852, 0, 0, 315,
	316, 820, 821, 792, 317, 318, 2430, 320, 0, 0,
	321, 322, 323, 324, 812, 325, 0, 388, 326, 327,
	328, 389, 853, 0, 0, 329, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 766, 0, 0, 0, 0,
	0, 764, 0, 0, 0, 0, 762, 763, 797, 786,
	787, 784, 785, 776, 0, 772, 0, 0, 0, 0,
	0, 775, 0, 0, 177, 178, 0, 179, 0, 0,
	0, 0, 814, 779, 0, 0, 0, 180, 181, 182,
	336, 829, 338, 830, 183, 831, 832, 0, 184, 342,
	343, 185, 186, 782, 813, 833, 834, 346, 0, 187,
	825, 0, 805, 0, 188, 189, 190, 0, 191, 0,
	192, 193, 194, 0, 476, 195, 196, 197, 0, 806,
	807, 809, 0, 808, 810, 198, 199, 398, 200, 835,
	201, 836, 837, 0, 202, 0, 203, 0, 204, 0,
	0, 828, 206, 0, 207, 0, 0, 0, 770, 208,
	209, 210, 815, 816, 793, 0, 0, 211, 212, 838,
	839, 840, 0, 213, 0, 214, 0, 0, 477, 215,
	0, 216, 826, 0, 358, 0, 217, 218, 219, 220,
	221, 822, 824, 479, 0, 225, 0, 222, 0, 478,
	223, 841, 224, 842, 843, 844, 845, 846, 0, 804,
	0, 480, 226, 227, 228, 481, 229, 230, 231, 0,
	233, 232, 0, 827, 482, 234, 483, 0, 235, 0,
	0, 236, 0, 237, 238, 239, 241, 369, 240, 484,
	242, 243, 245, 244, 765, 0, 794, 823, 246, 847,
	247, 248, 0, 249, 0, 0, 250, 0, 0, 251,
	372, 485, 252, 486, 817, 253, 254, 255, 256, 257,
	0, 258, 818, 259, 375, 260, 0, 261, 262, 263,
	264, 265, 266, 848, 267, 268, 0, 269, 270, 271,
	272, 273, 275, 276, 274, 277, 278, 279, 280, 0,
	281, 487, 282, 283, 771, 284, 0, 288, 289, 290,
	291, 0, 293, 378, 292, 294, 295, 811, 296, 285,
	286, 297, 488, 298, 849, 380, 299, 0, 306, 300,
	301, 287, 302, 305, 850, 303, 304, 819, 0, 307,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 383,
	851, 852, 0, 0, 315, 316, 820, 821, 792, 317,
	318, 319, 320, 0, 0, 321, 322, 323, 324, 812,
	325, 0, 388, 326, 327, 328, 389, 853, 0, 0,
	329, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	766, 0, 0, 0, 0, 0, 764, 0, 0, 0,
	0, 762, 763, 797, 786, 787, 784, 785, 776, 0,
	772, 0, 0, 0, 0, 0, 775, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 814, 779, 0,
	0, 0, 180, 181, 182, 336, 829, 338, 830, 183,
	831, 832, 0, 184, 342, 343, 185, 186, 782, 813,
	833, 834, 346, 0, 187, 825, 0, 805, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 476,
	195, 196, 197, 0, 806, 807, 809, 0, 808, 810,
	198, 199, 398, 200, 835, 201, 836, 837, 0, 202,
	0, 203, 0, 204, 0, 0, 828, 206, 0, 207,
	0, 0, 0, 770, 208, 209, 210, 815, 816, 793,
	0, 0, 211, 212, 838, 839, 840, 0, 213, 0,
	214, 0, 0, 477, 215, 0, 216, 826, 0, 358,
	0, 217, 218, 219, 220, 221, 822, 824, 479, 0,
	225, 0, 222, 0, 478, 223, 841, 224, 842, 843,
	844, 845, 846, 0, 804, 0, 480, 226, 227, 228,
	481, 229, 230, 231, 0, 233, 232, 0, 827, 482,
	234, 483, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 484, 242, 243, 245, 244, 0,
	0, 794, 823, 246, 847, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 485, 252, 486, 817,
	253, 254, 255, 256, 257, 0, 258, 818, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 848, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 487, 282, 283, 1573,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 811, 296, 285, 286, 297, 488, 298, 849,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 850,
	303, 304, 819, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 851, 852, 0, 0, 315,
	316, 820, 821, 792, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 812, 325, 0, 388, 326, 327,
	328, 389, 853, 0, 0, 329, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 797, 786, 787, 784, 785,
	776, 1571, 0, 0, 0, 0, 1569, 1570, 0, 0,
	0, 177, 178, 0, 179, 1572, 0, 0, 0, 814,
	779, 775, 0, 0, 180, 181, 182, 336, 829, 338,
	830, 183, 831, 832, 0, 184, 342, 343, 185, 186,
	0, 813, 833, 834, 346, 0, 187, 825, 0, 805,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 476, 195, 196, 197, 0, 806, 807, 809, 0,
	808, 810, 198, 199, 398, 200, 835, 201, 836, 837,
	0, 202, 0, 203, 0, 204, 0, 0, 828, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 815,
	816, 793, 0, 0, 211, 212, 838, 839, 840, 0,
	213, 0, 214, 0, 0, 477, 215, 0, 216, 826,
	0, 358, 0, 217, 218, 219, 220, 221, 822, 824,
	479, 0, 225, 0, 222, 0, 478, 223, 841, 224,
	842, 843, 844, 845, 846, 0, 804, 0, 480, 226,
	227, 228, 481, 229, 230, 231, 0, 233, 232, 0,
	827, 482, 234, 483, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 484, 242, 243, 245,
	244, 0, 0, 794, 823, 246, 847, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 485, 252,
	486, 817, 253, 254, 255, 256, 257, 0, 258, 818,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	848, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 487, 282,
	283, 1573, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 811, 296, 285, 286, 297, 488,
	298, 849, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 850, 303, 304, 819, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 851, 852, 0,
	0, 315, 316, 820, 821, 792, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 812, 325, 0, 388,
	326, 327, 328, 389, 853, 0, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 797, 786, 787,
	784, 785, 776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 178, 0, 179, 1572, 0, 0,
	0, 814, 779, 775, 0, 0, 180, 181, 182, 0,
	829, 338, 830, 183, 831, 832, 0, 184, 342, 343,
	185, 186, 782, 813, 833, 834, 346, 0, 187, 825,
	0, 805, 0, 188, 189, 190, 0, 191, 0, 192,
	193, 194, 0, 476, 195, 196, 2431, 0, 806, 807,
	809, 0, 808, 810, 198, 199, 398, 200, 835, 201,
	836, 837, 0, 202, 0, 203, 0, 204, 0, 0,
	828, 206, 0, 207, 0, 0, 0, 770, 208, 209,
	210, 815, 816, 793, 0, 0, 211, 212, 838, 839,
	840, 0, 213, 0, 214, 0, 0, 477, 215, 0,
	216, 826, 0, 358, 0, 217, 218, 219, 220, 221,
	822, 824, 0, 0, 225, 0, 222, 0, 478, 223,
	841, 224, 842, 843, 844, 845, 846, 0, 804, 0,
	0, 226, 227, 228, 481, 229, 230, 231, 0, 233,
	232, 0, 827, 482, 234, 0, 0, 235, 0, 0,
	236, 0, 237, 238, 239, 241, 369, 240, 484, 242,
	243, 245, 244, 765, 0, 794, 823, 246, 847, 247,
	248, 0, 249, 0, 0, 250, 0, 0, 251, 372,
	485, 252, 486, 817, 253, 254, 255, 256, 257, 0,
	258, 818, 259, 375, 260, 0, 261, 262, 263, 264,
	265, 266, 848, 267, 268, 0, 269, 270, 271, 272,
	273, 275, 276, 274, 277, 278, 279, 280, 0, 281,
	487, 282, 283, 771, 284, 0, 288, 289, 290, 291,
	0, 293, 378, 292, 294, 295, 811, 296, 285, 286,
	297, 0, 298, 849, 380, 299, 0, 306, 300, 301,
	287, 302, 305, 850, 303, 304, 819, 0, 307, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 383, 851,
	852, 0, 0, 315, 316, 820, 821, 792, 317, 318,
	2430, 320, 0, 0, 321, 322, 323, 324, 812, 325,
	0, 388, 326, 327, 328, 389, 853, 0, 0, 329,
	0, 0, 0, 0, 330, 331, 332, 333, 334, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	762, 763, 0, 0, 0, 177, 178, 0, 179, 772,
	0, 0, 0, 814, 0, 775, 0, 0, 180, 181,
	182, 336, 337, 338, 339, 183, 340, 341, 0, 184,
	342, 343, 185, 186, 0, 813, 344, 345, 346, 0,
	187, 825, 0, 805, 0, 188, 189, 190, 0, 191,
	0, 192, 193, 194, 0, 476, 195, 196, 197, 0,
	806, 807, 809, 0, 808, 810, 198, 199, 398, 200,
	348, 201, 349, 350, 0, 202, 0, 203, 0, 204,
	0, 0, 205, 206, 0, 207, 0, 0, 0, 351,
	208, 209, 210, 815, 816, 0, 0, 0, 211, 212,
	354, 355, 356, 0, 213, 0, 214, 0, 0, 477,
	215, 0, 216, 826, 0, 358, 0, 217, 218, 219,
	220, 221, 822, 824, 479, 0, 225, 0, 222, 0,
	478, 223, 361, 224, 362, 363, 364, 365, 366, 0,
	367, 0, 480, 226, 227, 228, 481, 229, 230, 231,
	0, 233, 232, 0, 827, 482, 234, 483, 0, 235,
	0, 0, 236, 0, 237, 238, 239, 241, 369, 240,
	484, 242, 243, 245, 244, 0, 0, 0, 823, 246,
	371, 247, 248, 0, 249, 0, 0, 250, 0, 0,
	251, 372, 485, 252, 486, 817, 253, 254, 255, 256,
	257, 0, 258, 818, 259, 375, 260, 0, 261, 262,
	263, 264, 265, 266, 376, 267, 268, 0, 269, 270,
	271, 272, 273, 275, 276, 274, 277, 278, 279, 280,
	0, 281, 487, 282, 283, 377, 284, 0, 288, 289,
	290, 291, 0, 293, 378, 292, 294, 295, 811, 296,
	285, 286, 297, 488, 298, 379, 380, 299, 0, 306,
	300, 301, 287, 302, 305, 381, 303, 304, 819, 0,
	307, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	383, 384, 385, 0, 0, 315, 316, 820, 821, 0,
	317, 318, 319, 320, 0, 0, 321, 322, 323, 324,
	812, 325, 0, 388, 326, 327, 328, 389, 390, 0,
	0, 329, 910, 0, 693, 0, 330, 331, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 178, 0, 179, 0, 0, 0, 0, 335, 0,
	0, 1974, 0, 180, 181, 182, 336, 337, 338, 339,
	183, 340, 341, 0, 184, 342, 343, 185, 186, 0,
	0, 344, 345, 346, 0, 187, 347, 0, 475, 0,
	188, 189, 190, 0, 191, 0, 192, 193, 194, 0,
	476, 195, 196, 197, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 398, 200, 348, 201, 349, 350, 0,
	202, 0, 203, 0, 204, 0, 0, 205, 206, 0,
	207, 0, 0, 0, 351, 208, 209, 210, 352, 353,
	0, 0, 0, 211, 212, 354, 355, 356, 0, 213,
	0, 214, 0, 0, 477, 215, 0, 216, 357, 0,
	358, 0, 217, 218, 219, 220, 221, 359, 360, 479,
	0, 225, 0, 222, 0, 478, 223, 361, 224, 362,
	363, 364, 365, 366, 0, 367, 0, 480, 226, 227,
	228, 481, 229, 230, 231, 0, 233, 232, 0, 368,
	482, 234, 483, 0, 235, 0, 0, 236, 0, 237,
	238, 239, 241, 369, 240, 484, 242, 243, 245, 244,
	0, 0, 0, 370, 246, 371, 247, 248, 0, 249,
	0, 0, 250, 0, 0, 251, 372, 485, 252, 486,
	373, 253, 254, 255, 256, 257, 0, 258, 374, 259,
	375, 260, 0, 261, 262, 263, 264, 265, 266, 376,
	267, 268, 0, 269, 270, 271, 272, 273, 275, 276,
	274, 277, 278, 279, 280, 0, 281, 487, 282, 283,
	377, 284, 0, 288, 289, 290, 291, 133, 293, 378,
	292, 294, 295, 0, 296, 285, 286, 297, 488, 298,
	379, 380, 299, 0, 306, 300, 301, 287, 302, 305,
	381, 303, 304, 382, 0, 307, 135, 308, 309, 310,
	311, 312, 313, 314, 0, 383, 384, 385, 0, 0,
	315, 316, 386, 387, 0, 317, 318, 319, 320, 0,
	0, 321, 322, 323, 324, 0, 325, 0, 388, 326,
	327, 328, 913, 390, 0, 0, 329, 0, 0, 0,
	127, 330, 331, 332, 333, 334, 0, 128, 693, 690,
	0, 691, 686, 681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 178, 120, 179, 0, 0,
	0, 0, 335, 0, 0, 0, 0, 180, 181, 182,
	336, 337, 338, 339, 183, 340, 341, 0, 184, 342,
	343, 185, 186, 0, 0, 344, 345, 346, 0, 187,
	347, 0, 475, 0, 188, 189, 190, 0, 191, 0,
	192, 193, 194, 0, 476, 195, 196, 197, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 398, 200, 348,
	201, 349, 350, 1318, 202, 0, 203, 0, 204, 0,
	0, 205, 206, 0, 207, 0, 0, 0, 351, 208,
	209, 210, 352, 353, 683, 0, 0, 211, 212, 354,
	355, 356, 0, 213, 0, 214, 0, 0, 477, 215,
	0, 216, 357, 0, 358, 0, 217, 218, 219, 220,
	221, 359, 360, 479, 0, 225, 0, 222, 0, 478,
	223, 361, 224, 362, 363, 364, 365, 366, 0, 367,
	0, 480, 226, 227, 228, 481, 229, 230, 231, 0,
	233, 232, 0, 368, 482, 234, 483, 0, 235, 0,
	0, 236, 0, 237, 238, 239, 241, 369, 240, 484,
	242, 243, 245, 244, 0, 0, 0, 370, 246, 371,
	247, 248, 0, 249, 684, 0, 250, 0, 0, 251,
	372, 485, 252, 486, 373, 253, 254, 255, 256, 257,
	0, 258, 374, 259, 375, 260, 0, 261, 262, 263,
	264, 265, 266, 376, 267, 268, 0, 269, 270, 271,
	272, 273, 275, 276, 274, 277, 278, 279, 280, 0,
	281, 487, 282, 283, 377, 284, 0, 288, 289, 290,
	291, 0, 293, 378, 292, 294, 295, 0, 296, 285,
	286, 297, 488, 298, 379, 380, 299, 0, 306, 300,
	301, 287, 302, 305, 381, 303, 304, 382, 0, 307,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 383,
	384, 385, 0, 0, 315, 316, 386, 387, 682, 317,
	318, 319, 320, 0, 0, 321, 322, 323, 324, 0,
	325, 0, 388, 326, 327, 328, 389, 390, 0, 0,
	329, 0, 0, 0, 0, 330, 331, 332, 333, 334,
	693, 690, 0, 691, 686, 681, 0, 0, 0, 0,
	0, 692, 687, 0, 0, 0, 177, 178, 0, 179,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 180,
	181, 182, 336, 337, 338, 339, 183, 340, 341, 0,
	184, 342, 343, 185, 186, 0, 0, 344, 345, 346,
	0, 187, 347, 0, 475, 0, 188, 189, 190, 0,
	191, 0, 192, 193, 194, 0, 476, 195, 196, 197,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 398,
	200, 348, 201, 349, 350, 1315, 202, 0, 203, 0,
	204, 0, 0, 205, 206, 0, 207, 0, 0, 0,
	351, 208, 209, 210, 352, 353, 683, 0, 0, 211,
	212, 354, 355, 356, 0, 213, 0, 214, 0, 0,
	477, 215, 0, 216, 357, 0, 358, 0, 217, 218,
	219, 220, 221, 359, 360, 479, 0, 225, 0, 222,
	0, 478, 223, 361, 224, 362, 363, 364, 365, 366,
	0, 367, 0, 480, 226, 227, 228, 481, 229, 230,
	231, 0, 233, 232, 0, 368, 482, 234, 483, 0,
	235, 0, 0, 236, 0, 237, 238, 239, 241, 369,
	240, 484, 242, 243, 245, 244, 0, 0, 0, 370,
	246, 371, 247, 248, 0, 249, 684, 0, 250, 0,
	0, 251, 372, 485, 252, 486, 373, 253, 254, 255,
	256, 257, 0, 258, 374, 259, 375, 260, 0, 261,
	262, 263, 264, 265, 266, 376, 267, 268, 0, 269,
	270, 271, 272, 273, 275, 276, 274, 277, 278, 279,
	280, 0, 281, 487, 282, 283, 377, 284, 0, 288,
	289, 290, 291, 0, 293, 378, 292, 294, 295, 0,
	296, 285, 286, 297, 488, 298, 379, 380, 299, 0,
	306, 300, 301, 287, 302, 305, 381, 303, 304, 382,
	0, 307, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 383, 384, 385, 0, 0, 315, 316, 386, 387,
	682, 317, 318, 319, 320, 0, 0, 321, 322, 323,
	324, 0, 325, 0, 388, 326, 327, 328, 389, 390,
	0, 0, 329, 0, 0, 0, 0, 330, 331, 332,
	333, 334, 693, 690, 0, 691, 686, 681, 0, 0,
	0, 0, 0, 692, 687, 0, 0, 0, 177, 178,
	0, 179, 0, 0, 0, 0, 335, 0, 0, 0,
	0, 180, 181, 182, 336, 337, 338, 339, 183, 340,
	341, 0, 184, 342, 343, 185, 186, 0, 0, 344,
	345, 346, 0, 187, 347, 0, 475, 0, 188, 189,
	190, 0, 191, 0, 192, 193, 194, 0, 476, 195,
	196, 197, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 398, 200, 348, 201, 349, 350, 954, 202, 0,
	203, 0, 204, 0, 0, 205, 206, 0, 207, 0,
	0, 0, 351, 208, 209, 210, 352, 353, 683, 0,
	0, 211, 212, 354, 355, 356, 0, 213, 0, 214,
	0, 0, 477, 215, 0, 216, 357, 0, 358, 0,
	217, 218, 219, 220, 221, 359, 360, 479, 0, 225,
	0, 222, 0, 478, 223, 361, 224, 362, 363, 364,
	365, 366, 0, 367, 0, 480, 226, 227, 228, 481,
	229, 230, 231, 0, 233, 232, 0, 368, 482, 234,
	483, 0, 235, 0, 0, 236, 0, 237, 238, 239,
	241, 369, 240, 484, 242, 243, 245, 244, 0, 0,
	0, 370, 246, 371, 247, 248, 0, 249, 684, 0,
	250, 0, 0, 251, 372, 485, 252, 486, 373, 253,
	254, 255, 256, 257, 0, 258, 374, 259, 375, 260,
	0, 261, 262, 263, 264, 265, 266, 376, 267, 268,
	0, 269, 270, 271, 272, 273, 275, 276, 274, 277,
	278, 279, 280, 0, 281, 487, 282, 283, 377, 284,
	0, 288, 289, 290, 291, 0, 293, 378, 292, 294,
	295, 0, 296, 285, 286, 297, 488, 298, 379, 380,
	299, 0, 306, 300, 301, 287, 302, 305, 381, 303,
	304, 382, 0, 307, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 383, 384, 385, 0, 0, 315, 316,
	386, 387, 682, 317, 318, 319, 320, 0, 0, 321,
	322, 323, 324, 0, 325, 0, 388, 326, 327, 328,
	389, 390, 0, 0, 329, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 678, 0, 693, 690, 0, 691,
	686, 681, 0, 0, 0, 692, 687, 0, 0, 0,
	0, 0, 177, 178, 0, 179, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 180, 181, 182, 336, 337,
	338, 339, 183, 340, 341, 0, 184, 342, 343, 185,
	186, 0, 0, 344, 345, 346, 0, 187, 347, 0,
	475, 0, 188, 189, 190, 0, 191, 0, 192, 193,
	194, 0, 476, 195, 196, 197, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 398, 200, 348, 201, 349,
	350, 0, 202, 0, 203, 0, 204, 0, 0, 205,
	206, 0, 207, 0, 0, 0, 351, 208, 209, 210,
	352, 353, 683, 0, 0, 211, 212, 354, 355, 356,
	0, 213, 0, 214, 0, 0, 477, 215, 0, 216,
	357, 0, 358, 0, 217, 218, 219, 220, 221, 359,
	360, 479, 0, 225, 0, 222, 0, 478, 223, 361,
	224, 362, 363, 364, 365, 366, 0, 367, 0, 480,
	226, 227, 228, 481, 229, 230, 231, 0, 233, 232,
	0, 368, 482, 234, 483, 0, 235, 0, 0, 236,
	0, 237, 238, 239, 241, 369, 240, 484, 242, 243,
	245, 244, 0, 0, 0, 370, 246, 371, 247, 248,
	0, 249, 684, 0, 250, 0, 0, 251, 372, 485,
	252, 486, 373, 253, 254, 255, 256, 257, 0, 258,
	374, 259, 375, 260, 0, 261, 262, 263, 264, 265,
	266, 376, 267, 268, 0, 269, 270, 271, 272, 273,
	275, 276, 274, 277, 278, 279, 280, 0, 281, 487,
	282, 283, 377, 284, 0, 288, 289, 290, 291, 0,
	293, 378, 292, 294, 295, 0, 296, 285, 286, 297,
	488, 298, 379, 380, 299, 0, 306, 300, 301, 287,
	302, 305, 381, 303, 304, 382, 0, 307, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 383, 384, 385,
	0, 0, 315, 316, 386, 387, 682, 317, 318, 319,
	320, 0, 0, 321, 322, 323, 324, 0, 325, 0,
	388, 326, 327, 328, 389, 390, 0, 0, 329, 0,
	0, 0, 0, 330, 331, 332, 333, 334, 693, 690,
	0, 691, 686, 681, 0, 0, 0, 0, 0, 692,
	687, 0, 0, 0, 177, 178, 0, 179, 0, 0,
	0, 0, 335, 0, 0, 0, 0, 180, 181, 182,
	336, 337, 338, 339, 183, 340, 341, 0, 184, 342,
	343, 185, 186, 0, 0, 344, 345, 346, 0, 187,
	347, 0, 475, 0, 188, 189, 190, 0, 191, 0,
	192, 193, 194, 0, 476, 195, 196, 197, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 398, 200, 348,
	201, 349, 350, 0, 202, 0, 203, 0, 204, 0,
	0, 205, 206, 0, 207, 0, 0, 0, 351, 208,
	209, 210, 352, 353, 683, 0, 0, 211, 212, 354,
	355, 356, 0, 213, 0, 214, 0, 0, 477, 215,
	0, 216, 357, 0, 358, 0, 217, 218, 219, 220,
	221, 359, 360, 479, 0, 225, 0, 222, 0, 478,
	223, 361, 224, 362, 363, 364, 365, 366, 0, 367,
	0, 480, 226, 227, 228, 481, 229, 230, 231, 0,
	233, 232, 0, 368, 482, 234, 483, 0, 235, 0,
	0, 236, 0, 237, 238, 239, 241, 369, 240, 484,
	242, 243, 245, 244, 0, 0, 0, 370, 246, 371,
	247, 248, 0, 249, 684, 0, 250, 0, 0, 251,
	372, 485, 252, 486, 373, 253, 254, 255, 256, 257,
	0, 258, 374, 259, 375, 260, 0, 261, 262, 263,
	264, 265, 266, 376, 267, 268, 0, 269, 270, 271,
	272, 273, 275, 276, 274, 277, 278, 279, 280, 0,
	281, 487, 282, 283, 377, 284, 0, 288, 289, 290,
	291, 0, 293, 378, 292, 294, 295, 0, 296, 285,
	286, 297, 488, 298, 379, 380, 299, 0, 306, 300,
	301, 287, 302, 305, 381, 303, 304, 382, 0, 307,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 383,
	384, 385, 0, 0, 315, 316, 386, 387, 682, 317,
	318, 319, 320, 0, 0, 321, 322, 323, 324, 0,
	325, 0, 388, 326, 327, 328, 389, 390, 0, 675,
	329, 174, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 177, 178, 0,
	179, 692, 687, 0, 0, 335, 0, 0, 0, 0,
	180, 181, 182, 336, 337, 338, 339, 183, 340, 341,
	0, 184, 342, 343, 185, 186, 0, 0, 344, 345,
	346, 0, 187, 347, 0, 0, 0, 188, 189, 190,
	0, 191, 0, 192, 193, 194, 0, 0, 195, 196,
	197, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	398, 200, 348, 201, 349, 350, 0, 202, 0, 203,
	0, 204, 0, 0, 205, 206, 0, 207, 0, 0,
	0, 351, 208, 209, 210, 352, 353, 0, 0, 0,
	211, 212, 354, 355, 356, 0, 213, 0, 214, 0,
	0, 0, 215, 0, 216, 357, 0, 358, 0, 217,
	218, 219, 220, 221, 359, 360, 0, 0, 225, 0,
	222, 0, 0, 223, 361, 224, 362, 363, 364, 365,
	366, 0, 367, 0, 0, 226, 227, 228, 0, 229,
	230, 231, 0, 233, 232, 0, 368, 0, 234, 0,
	0, 235, 0, 0, 236, 0, 237, 238, 239, 241,
	369, 240, 0, 242, 243, 245, 244, 0, 0, 0,
	370, 246, 371, 247, 248, 0, 249, 0, 735, 250,
	0, 0, 251, 372, 0, 252, 0, 373, 253, 254,
	255, 256, 257, 0, 258, 374, 259, 375, 260, 0,
	261, 262, 263, 264, 265, 266, 376, 267, 268, 0,
	269, 270, 271, 272, 273, 275, 276, 274, 277, 278,
	279, 280, 0, 281, 0, 282, 283, 377, 284, 0,
	288, 289, 290, 291, 133, 293, 378, 292, 294, 295,
	0, 296, 285, 286, 297, 0, 298, 379, 380, 299,
	0, 306, 300, 301, 287, 302, 305, 381, 303, 304,
	382, 0, 307, 135, 308, 309, 310, 311, 312, 313,
	314, 0, 383, 384, 385, 0, 0, 315, 316, 386,
	387, 0, 317, 318, 319, 320, 0, 0, 321, 322,
	323, 324, 0, 325, 0, 388, 326, 327, 328, 913,
	390, 0, 0, 329, 0, 174, 0, 127, 330, 331,
	332, 333, 334, 0, 128, 0, 0, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 729, 0, 1062, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 735, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 133, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 135, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 913, 390, 0, 0, 329, 675, 0,
	174, 127, 330, 331, 332, 333, 334, 0, 128, 0,
	0, 0, 0, 0, 0, 0, 177, 178, 0, 179,
	0, 0, 0, 0, 335, 729, 0, 1062, 0, 180,
	181, 182, 336, 337, 338, 339, 183, 340, 341, 0,
	184, 342, 343, 185, 186, 0, 0, 344, 345, 346,
	0, 187, 347, 0, 0, 0, 188, 189, 190, 0,
	191, 0, 192, 193, 194, 0, 0, 195, 196, 197,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 398,
	200, 348, 201, 349, 350, 0, 202, 0, 203, 0,
	204, 0, 0, 205, 206, 0, 207, 0, 0, 0,
	351, 208, 209, 210, 352, 353, 0, 0, 0, 211,
	212, 354, 355, 356, 0, 213, 0, 214, 0, 0,
	0, 215, 0, 216, 357, 0, 358, 0, 217, 218,
	219, 220, 221, 359, 360, 0, 0, 225, 0, 222,
	0, 0, 223, 361, 224, 362, 363, 364, 365, 366,
	0, 367, 0, 0, 226, 227, 228, 0, 229, 230,
	231, 0, 233, 232, 0, 368, 0, 234, 0, 0,
	235, 0, 0, 236, 0, 237, 238, 239, 241, 369,
	240, 0, 242, 243, 245, 244, 0, 0, 0, 370,
	246, 371, 247, 248, 0, 249, 0, 0, 250, 0,
	0, 251, 372, 0, 252, 0, 373, 253, 254, 255,
	256, 257, 0, 258, 374, 259, 375, 260, 0, 261,
	262, 263, 264, 265, 266, 376, 267, 268, 0, 269,
	270, 271, 272, 273, 275, 276, 274, 277, 278, 279,
	280, 0, 281, 0, 282, 283, 377, 284, 0, 288,
	289, 290, 291, 133, 293, 378, 292, 294, 295, 0,
	296, 285, 286, 297, 0, 298, 379, 380, 299, 0,
	306, 300, 301, 287, 302, 305, 381, 303, 304, 382,
	0, 307, 135, 308, 309, 310, 311, 312, 313, 314,
	0, 383, 384, 385, 0, 0, 315, 316, 386, 387,
	0, 317, 318, 319, 320, 0, 0, 321, 322, 323,
	324, 0, 325, 0, 388, 326, 327, 328, 913, 390,
	0, 0, 329, 1700, 0, 174, 127, 330, 331, 332,
	333, 334, 0, 128, 0, 0, 0, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 120, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 735, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 0, 0, 329, 728, 0,
	174, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 178, 0, 179,
	0, 0, 0, 0, 335, 729, 0, 734, 0, 180,
	181, 182, 336, 337, 338, 339, 183, 340, 341, 0,
	184, 342, 343, 185, 186, 0, 0, 344, 345, 346,
	0, 187, 347, 0, 0, 0, 188, 189, 190, 0,
	191, 0, 192, 193, 194, 0, 0, 195, 196, 197,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 398,
	200, 348, 201, 349, 350, 0, 202, 0, 203, 0,
	204, 0, 0, 205, 206, 0, 207, 0, 0, 0,
	351, 208, 209, 210, 352, 353, 0, 0, 0, 211,
	212, 354, 355, 356, 0, 213, 0, 214, 0, 0,
	0, 215, 0, 216, 357, 0, 358, 0, 217, 218,
	219, 220, 221, 359, 360, 0, 0, 225, 0, 222,
	0, 0, 223, 361, 224, 362, 363, 364, 365, 366,
	0, 367, 0, 0, 226, 227, 228, 0, 229, 230,
	231, 0, 233, 232, 0, 368, 0, 234, 0, 0,
	235, 0, 0, 236, 0, 237, 238, 239, 241, 369,
	240, 0, 242, 243, 245, 244, 0, 0, 0, 370,
	246, 371, 247, 248, 0, 249, 0, 735, 250, 0,
	0, 251, 372, 0, 252, 0, 373, 253, 254, 255,
	256, 257, 0, 258, 374, 259, 375, 260, 0, 261,
	262, 263, 264, 265, 266, 376, 267, 268, 0, 269,
	270, 271, 272, 273, 275, 276, 274, 277, 278, 279,
	280, 0, 281, 0, 282, 283, 377, 284, 0, 288,
	289, 290, 291, 0, 293, 378, 292, 294, 295, 0,
	296, 285, 286, 297, 0, 298, 379, 380, 299, 0,
	306, 300, 301, 287, 302, 305, 381, 303, 304, 382,
	0, 307, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 383, 384, 385, 0, 0, 315, 316, 386, 387,
	0, 317, 318, 319, 320, 0, 0, 321, 322, 323,
	324, 0, 325, 0, 388, 326, 327, 328, 389, 390,
	0, 0, 329, 0, 174, 0, 0, 330, 331, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 178, 0, 179, 0, 0, 0, 0, 335, 0,
	729, 0, 734, 180, 181, 182, 336, 337, 338, 339,
	183, 340, 341, 0, 184, 342, 343, 185, 186, 0,
	0, 344, 345, 346, 0, 187, 347, 0, 0, 0,
	188, 189, 190, 0, 191, 0, 192, 193, 194, 0,
	0, 195, 196, 197, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 398, 200, 348, 201, 349, 350, 0,
	202, 0, 203, 0, 204, 0, 0, 205, 206, 0,
	207, 0, 0, 0, 351, 208, 209, 210, 352, 353,
	0, 0, 0, 211, 212, 354, 355, 356, 0, 213,
	0, 214, 0, 0, 0, 215, 0, 216, 357, 0,
	358, 0, 217, 218, 219, 220, 221, 359, 360, 0,
	0, 225, 0, 222, 0, 0, 223, 361, 224, 362,
	363, 364, 365, 366, 0, 367, 0, 0, 226, 227,
	228, 0, 229, 230, 231, 0, 233, 232, 0, 368,
	0, 234, 0, 0, 235, 0, 0, 236, 0, 237,
	238, 239, 241, 369, 240, 0, 242, 243, 245, 244,
	0, 0, 0, 370, 246, 371, 247, 248, 0, 249,
	0, 735, 250, 0, 0, 251, 372, 0, 252, 0,
	373, 253, 254, 255, 256, 257, 0, 258, 374, 259,
	375, 260, 0, 261, 262, 263, 264, 265, 266, 376,
	267, 268, 0, 269, 270, 271, 272, 273, 275, 276,
	274, 277, 278, 279, 280, 0, 281, 0, 282, 283,
	377, 284, 0, 288, 289, 290, 291, 0, 293, 378,
	292, 294, 295, 0, 296, 285, 286, 297, 0, 298,
	379, 380, 299, 0, 306, 300, 301, 287, 302, 305,
	381, 303, 304, 382, 0, 307, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 383, 384, 385, 0, 0,
	315, 316, 386, 387, 0, 317, 318, 319, 320, 0,
	0, 321, 322, 323, 324, 0, 325, 0, 388, 326,
	327, 328, 389, 390, 0, 0, 329, 0, 174, 0,
	0, 330, 331, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 178, 0, 179, 0, 0,
	0, 0, 335, 0, 729, 0, 734, 180, 181, 182,
	336, 337, 338, 339, 183, 340, 341, 0, 184, 342,
	343, 185, 186, 0, 0, 344, 345, 346, 0, 187,
	347, 0, 0, 0, 188, 189, 190, 0, 191, 0,
	192, 193, 194, 0, 0, 195, 196, 197, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 398, 200, 348,
	201, 349, 350, 0, 202, 0, 203, 0, 204, 0,
	0, 205, 206, 0, 207, 0, 0, 0, 351, 208,
	209, 210, 352, 353, 0, 0, 0, 211, 212, 354,
	355, 356, 0, 213, 0, 214, 0, 0, 0, 215,
	0, 216, 357, 0, 358, 0, 217, 218, 219, 220,
	221, 359, 360, 0, 0, 225, 0, 222, 0, 0,
	223, 361, 224, 362, 363, 364, 365, 366, 0, 367,
	0, 0, 226, 227, 228, 0, 229, 230, 231, 0,
	233, 232, 0, 368, 0, 234, 0, 0, 235, 0,
	0, 236, 0, 237, 238, 239, 241, 369, 240, 0,
	242, 243, 245, 244, 0, 0, 0, 370, 246, 371,
	247, 248, 0, 249, 0, 0, 250, 0, 0, 251,
	372, 0, 252, 0, 373, 253, 254, 255, 256, 257,
	0, 258, 374, 259, 375, 260, 0, 261, 262, 263,
	264, 265, 266, 376, 267, 268, 0, 269, 270, 271,
	272, 273, 275, 276, 274, 277, 278, 279, 280, 0,
	281, 0, 282, 283, 377, 284, 0, 288, 289, 290,
	291, 0, 293, 378, 292, 294, 295, 0, 296, 285,
	286, 297, 0, 298, 379, 380, 299, 0, 306, 300,
	301, 287, 302, 305, 381, 303, 304, 382, 0, 307,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 383,
	384, 385, 0, 0, 315, 316, 386, 387, 0, 317,
	318, 319, 320, 0, 0, 321, 322, 323, 324, 0,
	325, 0, 388, 326, 327, 328, 389, 390, 0, 0,
	329, 0, 0, 174, 0, 330, 331, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 335, 0, 0,
	0, 1192, 180, 181, 182, 336, 337, 338, 339, 183,
	340, 341, 0, 184, 342, 343, 185, 186, 0, 0,
	344, 345, 346, 0, 187, 347, 0, 0, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 0,
	195, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 398, 200, 348, 201, 349, 350, 0, 202,
	0, 203, 0, 204, 0, 0, 205, 206, 0, 207,
	0, 0, 0, 351, 208, 209, 210, 352, 353, 0,
	0, 0, 211, 212, 354, 355, 356, 0, 213, 0,
	214, 0, 0, 0, 215, 0, 216, 357, 0, 358,
	0, 217, 218, 219, 220, 221, 359, 360, 0, 0,
	225, 0, 222, 0, 0, 223, 361, 224, 362, 363,
	364, 365, 366, 0, 367, 0, 0, 226, 227, 228,
	0, 229, 230, 231, 0, 233, 232, 0, 368, 0,
	234, 0, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 0, 242, 243, 245, 244, 0,
	0, 0, 370, 246, 371, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 0, 252, 0, 373,
	253, 254, 255, 256, 257, 0, 258, 374, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 376, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 0, 282, 283, 377,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 0, 296, 285, 286, 297, 0, 298, 379,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 381,
	303, 304, 382, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 384, 385, 0, 0, 315,
	316, 386, 387, 0, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 0, 325, 0, 388, 326, 327,
	328, 389, 390, 0, 0, 329, 0, 174, 0, 0,
	330, 331, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 178, 0, 179, 0, 0, 0,
	0, 335, 0, 0, 0, 1637, 180, 181, 182, 336,
	337, 338, 339, 183, 340, 341, 0, 184, 342, 343,
	185, 186, 0, 0, 344, 345, 346, 0, 187, 347,
	0, 0, 0, 188, 189, 190, 0, 191, 0, 192,
	193, 194, 0, 0, 195, 196, 197, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 398, 200, 348, 201,
	349, 350, 0, 202, 0, 203, 0, 204, 0, 0,
	205, 206, 0, 207, 0, 0, 0, 351, 208, 209,
	210, 352, 353, 0, 0, 0, 211, 212, 354, 355,
	356, 0, 213, 0, 214, 0, 0, 0, 215, 0,
	216, 357, 0, 358, 0, 217, 218, 219, 220, 221,
	359, 360, 0, 0, 225, 0, 222, 0, 0, 223,
	361, 224, 362, 363, 364, 365, 366, 0, 367, 0,
	0, 226, 227, 228, 0, 229, 230, 231, 0, 233,
	232, 0, 368, 0, 234, 0, 0, 235, 0, 0,
	236, 0, 237, 238, 239, 241, 369, 240, 0, 242,
	243, 245, 244, 0, 0, 0, 370, 246, 371, 247,
	248, 0, 249, 0, 0, 250, 0, 0, 251, 372,
	0, 252, 0, 373, 253, 254, 255, 256, 257, 0,
	258, 374, 259, 375, 260, 0, 261, 262, 263, 264,
	265, 266, 376, 267, 268, 0, 269, 270, 271, 272,
	273, 275, 276, 274, 277, 278, 279, 280, 0, 281,
	0, 282, 283, 377, 284, 0, 288, 289, 290, 291,
	0, 293, 378, 292, 294, 295, 0, 296, 285, 286,
	297, 0, 298, 379, 380, 299, 0, 306, 300, 301,
	287, 302, 305, 381, 303, 304, 382, 0, 307, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 383, 384,
	385, 0, 0, 315, 316, 386, 387, 0, 317, 318,
	319, 320, 0, 0, 321, 322, 323, 324, 0, 325,
	0, 388, 326, 327, 328, 389, 390, 0, 0, 329,
	0, 174, 0, 0, 330, 331, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 178, 0,
	179, 0, 0, 0, 0, 335, 0, 0, 0, 2035,
	180, 181, 182, 336, 337, 338, 339, 183, 340, 341,
	0, 184, 342, 343, 185, 186, 0, 0, 344, 345,
	346, 0, 187, 347, 0, 0, 0, 188, 189, 190,
	0, 191, 0, 192, 193, 194, 0, 0, 195, 196,
	197, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	398, 200, 348, 201, 349, 350, 0, 202, 0, 203,
	0, 204, 0, 0, 205, 206, 0, 207, 0, 0,
	0, 351, 208, 209, 210, 352, 353, 0, 0, 0,
	211, 212, 354, 355, 356, 0, 213, 0, 214, 0,
	0, 0, 215, 0, 216, 357, 0, 358, 0, 217,
	218, 219, 220, 221, 359, 360, 0, 0, 225, 0,
	222, 0, 0, 223, 361, 224, 362, 363, 364, 365,
	366, 0, 367, 0, 0, 226, 227, 228, 0, 229,
	230, 231, 0, 233, 232, 0, 368, 0, 234, 0,
	0, 235, 0, 0, 236, 0, 237, 238, 239, 241,
	369, 240, 0, 242, 243, 245, 244, 0, 0, 0,
	370, 246, 371, 247, 248, 0, 249, 0, 0, 250,
	0, 0, 251, 372, 0, 252, 0, 373, 253, 254,
	255, 256, 257, 0, 258, 374, 259, 375, 260, 0,
	261, 262, 263, 264, 265, 266, 376, 267, 268, 0,
	269, 270, 271, 272, 273, 275, 276, 274, 277, 278,
	279, 280, 0, 281, 0, 282, 283, 377, 284, 0,
	288, 289, 290, 291, 0, 293, 378, 292, 294, 295,
	0, 296, 285, 286, 297, 0, 298, 379, 380, 299,
	0, 306, 300, 301, 287, 302, 305, 381, 303, 304,
	382, 0, 307, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 383, 384, 385, 0, 0, 315, 316, 386,
	387, 0, 317, 318, 319, 320, 0, 0, 321, 322,
	323, 324, 0, 325, 0, 388, 326, 327, 328, 389,
	390, 0, 0, 329, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 797, 786, 787, 784, 785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	178, 0, 179, 1065, 0, 0, 0, 335, 0, 0,
	0, 0, 180, 181, 182, 336, 829, 338, 830, 183,
	831, 832, 0, 184, 342, 343, 185, 186, 0, 0,
	833, 834, 346, 0, 187, 347, 0, 475, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 476,
	195, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 398, 200, 835, 201, 836, 837, 0, 202,
	0, 203, 0, 204, 0, 0, 828, 206, 0, 207,
	0, 0, 0, 351, 208, 209, 210, 352, 353, 793,
	0, 0, 211, 212, 838, 839, 840, 0, 213, 0,
	214, 0, 0, 477, 215, 0, 216, 357, 0, 358,
	0, 217, 218, 219, 220, 221, 359, 360, 479, 0,
	225, 0, 222, 0, 478, 223, 841, 224, 842, 843,
	844, 845, 846, 0, 804, 0, 480, 226, 227, 228,
	481, 229, 230, 231, 0, 233, 232, 0, 368, 482,
	234, 483, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 484, 242, 243, 245, 244, 0,
	0, 794, 370, 246, 847, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 485, 252, 486, 373,
	253, 254, 255, 256, 257, 0, 258, 374, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 848, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 487, 282, 283, 377,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 0, 296, 285, 286, 297, 488, 298, 849,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 850,
	303, 304, 382, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 851, 852, 0, 0, 315,
	316, 386, 387, 792, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 0, 325, 0, 388, 326, 327,
	328, 389, 853, 0, 0, 329, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 960, 0, 693, 690, 0,
	0, 0, 962, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 178, 0, 179, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 180, 181, 182, 336,
	337, 338, 339, 183, 340, 341, 0, 184, 342, 343,
	185, 186, 0, 0, 344, 345, 346, 0, 187, 347,
	0, 475, 0, 188, 189, 190, 0, 191, 0, 192,
	193, 194, 0, 476, 195, 196, 197, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 398, 200, 348, 201,
	349, 350, 0, 202, 0, 203, 0, 204, 0, 0,
	205, 206, 0, 207, 0, 0, 0, 351, 208, 209,
	210, 352, 353, 0, 0, 0, 211, 212, 354, 355,
	356, 0, 213, 0, 214, 0, 0, 477, 215, 0,
	216, 357, 0, 358, 0, 217, 218, 219, 220, 221,
	359, 360, 479, 0, 225, 0, 222, 0, 478, 223,
	361, 224, 362, 363, 364, 365, 366, 0, 367, 0,
	480, 226, 227, 228, 481, 229, 230, 231, 0, 233,
	232, 0, 368, 482, 234, 483, 0, 235, 0, 0,
	236, 0, 237, 238, 239, 241, 369, 240, 484, 242,
	243, 245, 244, 0, 0, 0, 370, 246, 371, 247,
	248, 0, 249, 0, 0, 250, 0, 0, 251, 372,
	485, 252, 486, 373, 253, 254, 255, 256, 257, 0,
	258, 374, 259, 375, 260, 0, 261, 262, 263, 264,
	265, 266, 376, 267, 268, 0, 269, 270, 271, 272,
	273, 275, 276, 274, 277, 278, 279, 280, 0, 281,
	487, 282, 283, 377, 284, 0, 288, 289, 290, 291,
	0, 293, 378, 292, 294, 295, 0, 296, 285, 286,
	297, 488, 298, 379, 380, 299, 0, 306, 300, 301,
	287, 302, 305, 381, 303, 304, 382, 0, 307, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 383, 384,
	385, 0, 0, 315, 316, 386, 387, 0, 317, 318,
	319, 320, 0, 0, 321, 322, 323, 324, 0, 325,
	0, 388, 326, 327, 328, 389, 390, 0, 578, 329,
	174, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 177, 178, 0, 179,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 180,
	181, 182, 336, 337, 338, 339, 183, 340, 341, 0,
	184, 342, 343, 185, 186, 0, 0, 344, 345, 346,
	0, 187, 347, 0, 0, 0, 188, 189, 190, 0,
	191, 0, 192, 193, 194, 0, 0, 195, 196, 197,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 170,
	200, 348, 201, 349, 350, 0, 202, 0, 203, 0,
	204, 0, 0, 205, 206, 0, 207, 0, 0, 0,
	351, 208, 209, 210, 352, 353, 0, 0, 0, 211,
	212, 354, 355, 356, 0, 213, 0, 214, 0, 0,
	0, 215, 0, 216, 357, 0, 358, 0, 217, 218,
	219, 220, 221, 359, 360, 0, 0, 225, 0, 222,
	0, 0, 223, 361, 224, 362, 363, 364, 365, 366,
	0, 367, 0, 0, 226, 227, 228, 0, 229, 230,
	231, 0, 233, 232, 0, 368, 0, 234, 0, 0,
	235, 0, 0, 236, 0, 237, 238, 239, 241, 369,
	240, 0, 242, 243, 245, 244, 0, 0, 0, 370,
	246, 371, 247, 248, 0, 249, 0, 0, 250, 0,
	0, 251, 372, 0, 252, 0, 373, 253, 254, 255,
	256, 257, 0, 258, 374, 259, 375, 260, 0, 261,
	262, 263, 264, 265, 266, 376, 267, 268, 0, 269,
	270, 271, 272, 273, 275, 276, 274, 277, 278, 279,
	280, 0, 281, 0, 282, 283, 377, 284, 0, 288,
	289, 290, 291, 0, 293, 378, 292, 294, 295, 0,
	296, 285, 286, 297, 0, 298, 379, 380, 299, 0,
	306, 300, 301, 287, 302, 305, 381, 303, 304, 382,
	0, 307, 169, 308, 309, 310, 311, 312, 313, 314,
	0, 383, 384, 385, 0, 0, 315, 316, 386, 387,
	0, 317, 318, 319, 320, 0, 0, 321, 322, 323,
	324, 0, 325, 0, 388, 326, 327, 328, 389, 390,
	0, 167, 329, 174, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 173, 0, 335, 0, 0,
	0, 0, 180, 181, 182, 336, 337, 338, 339, 183,
	340, 341, 0, 184, 342, 343, 185, 186, 0, 0,
	344, 345, 346, 0, 187, 347, 0, 0, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 0,
	195, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 170, 200, 348, 201, 349, 350, 0, 202,
	0, 203, 0, 204, 0, 0, 205, 206, 0, 207,
	0, 0, 0, 351, 208, 209, 210, 352, 353, 0,
	0, 0, 211, 212, 354, 355, 356, 0, 213, 0,
	214, 0, 0, 0, 215, 0, 216, 357, 0, 358,
	0, 217, 218, 219, 220, 221, 359, 360, 0, 0,
	225, 0, 222, 0, 0, 223, 361, 224, 362, 363,
	364, 365, 366, 0, 367, 0, 0, 226, 227, 228,
	0, 229, 230, 231, 0, 233, 232, 0, 368, 0,
	234, 0, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 0, 242, 243, 245, 244, 0,
	0, 0, 370, 246, 371, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 0, 252, 0, 373,
	253, 254, 255, 256, 257, 0, 258, 374, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 376, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 0, 282, 283, 377,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 0, 296, 285, 286, 297, 0, 298, 379,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 381,
	303, 304, 382, 0, 307, 169, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 384, 385, 0, 0, 315,
	316, 386, 387, 0, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 0, 325, 0, 388, 326, 327,
	328, 389, 390, 693, 690, 329, 0, 0, 962, 0,
	330, 331, 332, 333, 334, 0, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 335, 173, 0,
	0, 0, 180, 181, 182, 336, 337, 338, 339, 183,
	340, 341, 0, 184, 342, 343, 185, 186, 0, 0,
	344, 345, 346, 0, 187, 347, 0, 475, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 476,
	195, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 398, 200, 348, 201, 349, 350, 0, 202,
	0, 203, 0, 204, 0, 0, 205, 206, 0, 207,
	0, 0, 0, 351, 208, 209, 210, 352, 353, 0,
	0, 0, 211, 212, 354, 355, 356, 0, 213, 0,
	214, 0, 0, 477, 215, 0, 216, 357, 0, 358,
	0, 217, 218, 219, 220, 221, 359, 360, 479, 0,
	225, 0, 222, 0, 478, 223, 361, 224, 362, 363,
	364, 365, 366, 0, 367, 0, 480, 226, 227, 228,
	481, 229, 230, 231, 0, 233, 232, 0, 368, 482,
	234, 483, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 484, 242, 243, 245, 244, 0,
	0, 0, 370, 246, 371, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 485, 252, 486, 373,
	253, 254, 255, 256, 257, 0, 258, 374, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 376, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 487, 282, 283, 377,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 0, 296, 285, 286, 297, 488, 298, 379,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 381,
	303, 304, 382, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 384, 385, 0, 0, 315,
	316, 386, 387, 0, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 0, 325, 0, 388, 326, 327,
	328, 389, 390, 174, 0, 329, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 180, 181, 182, 336, 337, 338, 339, 183,
	340, 341, 0, 184, 342, 343, 185, 186, 0, 0,
	344, 345, 346, 0, 187, 347, 0, 0, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 0,
	195, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 170, 200, 348, 201, 349, 350, 0, 202,
	0, 203, 0, 204, 0, 0, 205, 206, 0, 207,
	0, 0, 0, 351, 208, 209, 210, 352, 353, 0,
	0, 0, 211, 212, 354, 355, 356, 0, 213, 0,
	214, 0, 0, 0, 215, 0, 216, 357, 0, 358,
	0, 217, 218, 219, 220, 221, 359, 360, 0, 0,
	225, 0, 222, 0, 0, 223, 361, 224, 362, 363,
	364, 365, 366, 0, 367, 0, 0, 226, 227, 228,
	0, 229, 230, 231, 0, 233, 232, 0, 368, 0,
	234, 0, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 0, 242, 243, 245, 244, 0,
	0, 0, 370, 246, 371, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 0, 252, 0, 373,
	253, 254, 255, 256, 257, 0, 258, 374, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 376, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 0, 282, 283, 377,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 0, 296, 285, 286, 297, 0, 298, 379,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 381,
	303, 304, 382, 0, 307, 169, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 384, 385, 0, 0, 315,
	316, 386, 387, 0, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 0, 325, 0, 388, 326, 327,
	328, 389, 390, 693, 690, 329, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 335, 173, 0,
	0, 0, 180, 181, 182, 336, 337, 338, 339, 183,
	340, 341, 0, 184, 342, 343, 185, 186, 0, 0,
	344, 345, 346, 0, 187, 347, 0, 475, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 476,
	195, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 398, 200, 348, 201, 349, 350, 0, 202,
	0, 203, 0, 204, 0, 0, 205, 206, 0, 207,
	0, 0, 0, 351, 208, 209, 210, 352, 353, 0,
	0, 0, 211, 212, 354, 355, 356, 0, 213, 0,
	214, 0, 0, 477, 215, 0, 216, 357, 0, 358,
	0, 217, 218, 219, 220, 221, 359, 360, 479, 0,
	225, 0, 222, 0, 478, 223, 361, 224, 362, 363,
	364, 365, 366, 0, 367, 0, 480, 226, 227, 228,
	481, 229, 230, 231, 0, 233, 232, 0, 368, 482,
	234, 483, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 484, 242, 243, 245, 244, 0,
	0, 0, 370, 246, 371, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 485, 252, 486, 373,
	253, 254, 255, 256, 257, 0, 258, 374, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 376, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 487, 282, 283, 377,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 0, 296, 285, 286, 297, 488, 298, 379,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 381,
	303, 304, 382, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 384, 385, 0, 0, 315,
	316, 386, 387, 0, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 0, 325, 0, 388, 326, 327,
	328, 389, 390, 174, 0, 329, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 180, 181, 182, 336, 337, 338, 339, 183,
	340, 341, 0, 184, 342, 343, 185, 186, 0, 0,
	344, 345, 346, 0, 187, 347, 0, 0, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 0,
	195, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 398, 200, 348, 201, 349, 350, 0, 202,
	0, 203, 0, 204, 0, 0, 205, 206, 0, 207,
	0, 0, 0, 351, 208, 209, 210, 352, 353, 0,
	0, 0, 211, 212, 354, 355, 356, 0, 213, 0,
	214, 0, 0, 0, 215, 0, 216, 357, 0, 358,
	0, 217, 218, 219, 220, 221, 359, 360, 0, 0,
	225, 0, 222, 0, 0, 223, 361, 224, 362, 363,
	364, 365, 366, 0, 367, 0, 0, 226, 227, 228,
	0, 229, 230, 231, 0, 233, 232, 0, 368, 0,
	234, 0, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 0, 242, 243, 245, 244, 0,
	0, 0, 370, 246, 371, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 0, 252, 0, 373,
	253, 254, 255, 256, 257, 0, 258, 374, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 376, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 0, 282, 283, 377,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 0, 296, 285, 286, 297, 0, 298, 379,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 381,
	303, 304, 382, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 384, 385, 0, 0, 315,
	316, 386, 387, 0, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 0, 325, 0, 388, 326, 327,
	328, 389, 390, 693, 0, 329, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 335, 173, 0,
	0, 0, 180, 181, 182, 336, 337, 338, 339, 183,
	340, 341, 0, 184, 342, 343, 185, 186, 0, 0,
	344, 345, 346, 0, 187, 347, 0, 475, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 476,
	195, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 398, 200, 348, 201, 349, 350, 0, 202,
	0, 203, 0, 204, 0, 0, 205, 206, 0, 207,
	0, 0, 0, 351, 208, 209, 210, 352, 353, 0,
	0, 0, 211, 212, 354, 355, 356, 0, 213, 0,
	214, 0, 0, 477, 215, 0, 216, 357, 0, 358,
	0, 217, 218, 219, 220, 221, 359, 360, 479, 0,
	225, 0, 222, 0, 478, 223, 361, 224, 362, 363,
	364, 365, 366, 0, 367, 0, 480, 226, 227, 228,
	481, 229, 230, 231, 0, 233, 232, 0, 368, 482,
	234, 483, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 484, 242, 243, 245, 244, 0,
	0, 0, 370, 246, 371, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 485, 252, 486, 373,
	253, 254, 255, 256, 257, 0, 258, 374, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 376, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 487, 282, 283, 377,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 0, 296, 285, 286, 297, 488, 298, 379,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 381,
	303, 304, 382, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 384, 385, 0, 0, 315,
	316, 386, 387, 0, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 0, 325, 0, 388, 326, 327,
	328, 389, 390, 174, 0, 329, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 180, 181, 182, 336, 337, 338, 339, 183,
	340, 341, 0, 184, 342, 343, 185, 186, 0, 0,
	344, 345, 346, 1417, 187, 347, 0, 0, 0, 188,
	189, 190, 0, 191, 1415, 192, 193, 194, 0, 0,
	195, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 398, 200, 348, 201, 349, 350, 0, 202,
	0, 203, 0, 204, 0, 0, 205, 206, 0, 207,
	0, 0, 0, 351, 208, 209, 210, 352, 353, 0,
	1614, 0, 211, 212, 354, 355, 356, 0, 213, 0,
	214, 1420, 0, 0, 215, 0, 216, 357, 0, 358,
	0, 217, 218, 219, 220, 221, 359, 360, 0, 0,
	225, 1612, 222, 0, 0, 223, 361, 224, 362, 363,
	364, 365, 366, 0, 367, 0, 0, 226, 227, 228,
	0, 229, 230, 231, 0, 233, 232, 0, 368, 0,
	234, 0, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 0, 242, 243, 245, 244, 0,
	0, 0, 370, 246, 371, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 0, 252, 0, 373,
	253, 254, 255, 256, 257, 0, 258, 374, 259, 375,
	260, 1419, 261, 262, 263, 264, 265, 266, 376, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 0, 282, 283, 377,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 0, 296, 285, 286, 297, 0, 298, 379,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 381,
	303, 304, 382, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 384, 385, 0, 0, 315,
	316, 386, 387, 0, 317, 318, 319, 320, 0, 1613,
	321, 322, 323, 324, 0, 325, 0, 388, 326, 327,
	328, 389, 390, 174, 0, 329, 0, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 180, 181, 182, 336, 337, 338, 339, 183,
	340, 341, 0, 184, 342, 343, 185, 186, 0, 0,
	344, 345, 346, 1417, 187, 347, 0, 0, 1412, 188,
	189, 190, 0, 191, 1415, 192, 193, 194, 0, 0,
	195, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 398, 200, 348, 201, 349, 350, 0, 202,
	0, 203, 0, 204, 0, 0, 205, 206, 0, 207,
	0, 0, 0, 351, 208, 209, 210, 352, 353, 0,
	0, 0, 211, 212, 354, 355, 356, 0, 213, 0,
	214, 1420, 0, 0, 215, 0, 216, 357, 0, 358,
	0, 217, 218, 219, 220, 221, 1411, 360, 0, 0,
	225, 0, 222, 0, 0, 223, 361, 224, 362, 363,
	364, 365, 366, 0, 367, 0, 0, 226, 227, 228,
	0, 229, 230, 231, 0, 233, 232, 0, 368, 0,
	234, 0, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 0, 242, 243, 245, 244, 0,
	0, 0, 370, 246, 371, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 0, 252, 0, 373,
	253, 254, 255, 256, 257, 0, 258, 374, 259, 375,
	260, 1419, 261, 262, 263, 264, 265, 266, 376, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 0, 282, 283, 377,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 0, 296, 285, 286, 297, 0, 298, 379,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 381,
	303, 304, 382, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 384, 385, 0, 0, 315,
	316, 386, 387, 0, 317, 318, 319, 320, 0, 1418,
	321, 322, 323, 324, 0, 325, 0, 388, 326, 327,
	328, 389, 390, 0, 888, 329, 174, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 177, 178, 0, 179, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 180, 181, 182, 336, 337,
	338, 339, 183, 340, 341, 0, 184, 342, 343, 185,
	186, 0, 0, 344, 345, 346, 0, 187, 347, 0,
	0, 0, 188, 189, 190, 0, 191, 0, 192, 193,
	194, 0, 0, 195, 196, 197, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 398, 200, 348, 201, 349,
	350, 0, 202, 0, 203, 0, 204, 0, 0, 205,
	206, 0, 207, 0, 0, 0, 351, 208, 209, 210,
	352, 353, 0, 0, 0, 211, 212, 354, 355, 356,
	0, 213, 0, 214, 0, 0, 0, 215, 0, 216,
	357, 0, 358, 0, 217, 218, 219, 220, 221, 359,
	360, 0, 0, 225, 0, 222, 0, 0, 223, 361,
	224, 362, 363, 364, 365, 366, 0, 367, 0, 0,
	226, 227, 228, 0, 229, 230, 231, 0, 233, 232,
	0, 368, 0, 234, 0, 0, 235, 0, 0, 236,
	0, 237, 238, 239, 241, 369, 240, 0, 242, 243,
	245, 244, 0, 0, 0, 370, 246, 371, 247, 248,
	0, 249, 0, 735, 250, 0, 0, 251, 372, 0,
	252, 0, 373, 253, 254, 255, 256, 257, 0, 258,
	374, 259, 375, 260, 0, 261, 262, 263, 264, 265,
	266, 376, 267, 268, 0, 269, 270, 271, 272, 273,
	275, 276, 274, 277, 278, 279, 280, 0, 281, 0,
	282, 283, 377, 284, 0, 288, 289, 290, 291, 0,
	293, 378, 292, 294, 295, 0, 296, 285, 286, 297,
	0, 298, 379, 380, 299, 0, 306, 300, 301, 287,
	302, 305, 381, 303, 304, 382, 0, 307, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 383, 384, 385,
	0, 0, 315, 316, 386, 387, 0, 317, 318, 319,
	320, 0, 0, 321, 322, 323, 324, 0, 325, 0,
	388, 326, 327, 328, 389, 390, 0, 741, 329, 174,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 177, 178, 0, 179, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 180, 181,
	182, 336, 337, 338, 339, 183, 340, 341, 0, 184,
	342, 343, 185, 186, 0, 0, 344, 345, 346, 0,
	187, 347, 0, 0, 0, 188, 189, 190, 0, 191,
	0, 192, 193, 194, 0, 0, 195, 196, 197, 0,
	0, 0, 0, 0, 0, 0, 198, 199, 398, 200,
	348, 201, 349, 350, 0, 202, 0, 203, 0, 204,
	0, 0, 205, 206, 0, 207, 0, 0, 0, 351,
	208, 209, 210, 352, 353, 0, 0, 0, 211, 212,
	354, 355, 356, 0, 213, 0, 214, 0, 0, 0,
	215, 0, 216, 357, 0, 358, 0, 217, 218, 219,
	220, 221, 743, 360, 0, 0, 225, 0, 222, 0,
	0, 223, 361, 224, 362, 363, 364, 365, 366, 0,
	367, 0, 0, 226, 227, 228, 0, 229, 230, 231,
	0, 233, 232, 0, 368, 0, 234, 0, 0, 235,
	0, 0, 236, 0, 237, 238, 239, 241, 369, 240,
	0, 242, 243, 245, 244, 0, 0, 0, 370, 246,
	371, 247, 248, 0, 249, 0, 735, 250, 0, 0,
	251, 372, 0, 252, 0, 373, 253, 254, 255, 256,
	257, 0, 258, 374, 259, 375, 260, 0, 261, 262,
	263, 264, 265, 266, 376, 267, 268, 0, 269, 270,
	271, 272, 273, 275, 276, 274, 277, 278, 279, 280,
	0, 281, 0, 282, 283, 377, 284, 0, 288, 289,
	290, 291, 0, 293, 378, 292, 294, 295, 0, 296,
	285, 286, 297, 0, 298, 379, 380, 299, 0, 306,
	300, 301, 287, 302, 305, 381, 303, 304, 382, 0,
	307, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	383, 384, 385, 0, 0, 315, 316, 386, 387, 0,
	317, 318, 319, 320, 0, 0, 321, 322, 323, 324,
	0, 325, 0, 388, 326, 327, 328, 389, 390, 0,
	737, 329, 174, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 177, 178,
	0, 179, 0, 0, 0, 0, 335, 0, 0, 0,
	0, 180, 181, 182, 336, 337, 338, 339, 183, 340,
	341, 0, 184, 342, 343, 185, 186, 0, 0, 344,
	345, 346, 0, 187, 347, 0, 0, 0, 188, 189,
	190, 0, 191, 0, 192, 193, 194, 0, 0, 195,
	196, 197, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 398, 200, 348, 201, 349, 350, 0, 202, 0,
	203, 0, 204, 0, 0, 205, 206, 0, 207, 0,
	0, 0, 351, 208, 209, 210, 352, 353, 0, 0,
	0, 211, 212, 354, 355, 356, 0, 213, 0, 214,
	0, 0, 0, 215, 0, 216, 357, 0, 358, 0,
	217, 218, 219, 220, 221, 739, 360, 0, 0, 225,
	0, 222, 0, 0, 223, 361, 224, 362, 363, 364,
	365, 366, 0, 367, 0, 0, 226, 227, 228, 0,
	229, 230, 231, 0, 233, 232, 0, 368, 0, 234,
	0, 0, 235, 0, 0, 236, 0, 237, 238, 239,
	241, 369, 240, 0, 242, 243, 245, 244, 0, 0,
	0, 370, 246, 371, 247, 248, 0, 249, 0, 735,
	250, 0, 0, 251, 372, 0, 252, 0, 373, 253,
	254, 255, 256, 257, 0, 258, 374, 259, 375, 260,
	0, 261, 262, 263, 264, 265, 266, 376, 267, 268,
	0, 269, 270, 271, 272, 273, 275, 276, 274, 277,
	278, 279, 280, 0, 281, 0, 282, 283, 377, 284,
	0, 288, 289, 290, 291, 0, 293, 378, 292, 294,
	295, 0, 296, 285, 286, 297, 0, 298, 379, 380,
	299, 0, 306, 300, 301, 287, 302, 305, 381, 303,
	304, 382, 0, 307, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 383, 384, 385, 0, 0, 315, 316,
	386, 387, 0, 317, 318, 319, 320, 0, 0, 321,
	322, 323, 324, 0, 325, 0, 388, 326, 327, 328,
	389, 390, 0, 417, 329, 174, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 177, 178, 416, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 415, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 174, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 1400, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 174, 2122, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 174, 2122, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 2119, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 174, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 735, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 0, 1343, 329, 174, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 177, 178, 0, 179, 0, 0,
	0, 0, 335, 0, 0, 0, 0, 180, 181, 182,
	336, 337, 338, 339, 183, 340, 341, 0, 184, 342,
	343, 185, 186, 0, 0, 344, 345, 346, 0, 187,
	347, 0, 0, 0, 188, 189, 190, 0, 191, 0,
	192, 193, 194, 0, 0, 195, 196, 197, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 398, 200, 348,
	201, 349, 350, 0, 202, 0, 203, 0, 204, 0,
	0, 205, 206, 0, 207, 0, 0, 0, 351, 208,
	209, 210, 352, 353, 0, 0, 0, 211, 212, 354,
	355, 356, 0, 213, 0, 214, 0, 0, 0, 215,
	0, 216, 357, 0, 358, 0, 217, 218, 219, 220,
	221, 359, 360, 0, 0, 225, 0, 222, 0, 0,
	223, 361, 224, 362, 363, 364, 365, 366, 0, 367,
	0, 0, 226, 227, 228, 0, 229, 230, 231, 0,
	233, 232, 0, 368, 0, 234, 0, 0, 235, 0,
	0, 236, 0, 237, 238, 239, 241, 369, 240, 0,
	242, 243, 245, 244, 0, 0, 0, 370, 246, 371,
	247, 248, 0, 249, 0, 0, 250, 0, 0, 251,
	372, 0, 252, 0, 373, 253, 254, 255, 256, 257,
	0, 258, 374, 259, 375, 260, 0, 261, 262, 263,
	264, 265, 266, 376, 267, 268, 0, 269, 270, 271,
	272, 273, 275, 276, 274, 277, 278, 279, 280, 0,
	281, 0, 282, 283, 377, 284, 0, 288, 289, 290,
	291, 0, 293, 378, 292, 294, 295, 0, 296, 285,
	286, 297, 0, 298, 379, 380, 299, 0, 306, 300,
	301, 287, 302, 305, 381, 303, 304, 382, 0, 307,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 383,
	384, 385, 0, 0, 315, 316, 386, 387, 0, 317,
	318, 319, 320, 0, 0, 321, 322, 323, 324, 0,
	325, 0, 388, 326, 327, 328, 389, 390, 0, 1341,
	329, 174, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 177, 178, 0,
	179, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	180, 181, 182, 336, 337, 338, 339, 183, 340, 341,
	0, 184, 342, 343, 185, 186, 0, 0, 344, 345,
	346, 0, 187, 347, 0, 0, 0, 188, 189, 190,
	0, 191, 0, 192, 193, 194, 0, 0, 195, 196,
	197, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	398, 200, 348, 201, 349, 350, 0, 202, 0, 203,
	0, 204, 0, 0, 205, 206, 0, 207, 0, 0,
	0, 351, 208, 209, 210, 352, 353, 0, 0, 0,
	211, 212, 354, 355, 356, 0, 213, 0, 214, 0,
	0, 0, 215, 0, 216, 357, 0, 358, 0, 217,
	218, 219, 220, 221, 359, 360, 0, 0, 225, 0,
	222, 0, 0, 223, 361, 224, 362, 363, 364, 365,
	366, 0, 367, 0, 0, 226, 227, 228, 0, 229,
	230, 231, 0, 233, 232, 0, 368, 0, 234, 0,
	0, 235, 0, 0, 236, 0, 237, 238, 239, 241,
	369, 240, 0, 242, 243, 245, 244, 0, 0, 0,
	370, 246, 371, 247, 248, 0, 249, 0, 0, 250,
	0, 0, 251, 372, 0, 252, 0, 373, 253, 254,
	255, 256, 257, 0, 258, 374, 259, 375, 260, 0,
	261, 262, 263, 264, 265, 266, 376, 267, 268, 0,
	269, 270, 271, 272, 273, 275, 276, 274, 277, 278,
	279, 280, 0, 281, 0, 282, 283, 377, 284, 0,
	288, 289, 290, 291, 0, 293, 378, 292, 294, 295,
	0, 296, 285, 286, 297, 0, 298, 379, 380, 299,
	0, 306, 300, 301, 287, 302, 305, 381, 303, 304,
	382, 0, 307, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 383, 384, 385, 0, 0, 315, 316, 386,
	387, 0, 317, 318, 319, 320, 0, 0, 321, 322,
	323, 324, 0, 325, 0, 388, 326, 327, 328, 389,
	390, 174, 0, 329, 0, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 0, 0, 0, 177, 178, 1323,
	179, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	180, 181, 182, 336, 337, 338, 339, 183, 340, 341,
	0, 184, 342, 343, 185, 186, 0, 0, 344, 345,
	346, 0, 187, 347, 0, 0, 0, 188, 189, 190,
	0, 191, 0, 192, 193, 194, 0, 0, 195, 196,
	197, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	398, 200, 348, 201, 349, 350, 0, 202, 0, 203,
	0, 204, 0, 0, 205, 206, 0, 207, 0, 0,
	0, 351, 208, 209, 210, 352, 353, 0, 0, 0,
	211, 212, 354, 355, 356, 0, 213, 0, 214, 0,
	0, 0, 215, 0, 216, 357, 0, 358, 0, 217,
	218, 219, 220, 221, 359, 360, 0, 0, 225, 0,
	222, 0, 0, 223, 361, 224, 362, 363, 364, 365,
	366, 0, 367, 0, 0, 226, 227, 228, 0, 229,
	230, 231, 0, 233, 232, 0, 368, 0, 234, 0,
	0, 235, 0, 0, 236, 0, 237, 238, 239, 241,
	369, 240, 0, 242, 243, 245, 244, 0, 0, 0,
	370, 246, 371, 247, 248, 0, 249, 0, 0, 250,
	0, 0, 251, 372, 0, 252, 0, 373, 253, 254,
	255, 256, 257, 0, 258, 374, 259, 375, 260, 0,
	261, 262, 263, 264, 265, 266, 376, 267, 268, 0,
	269, 270, 271, 272, 273, 275, 276, 274, 277, 278,
	279, 280, 0, 281, 0, 282, 283, 377, 284, 0,
	288, 289, 290, 291, 0, 293, 378, 292, 294, 295,
	0, 296, 285, 286, 297, 0, 298, 379, 380, 299,
	0, 306, 300, 301, 287, 302, 305, 381, 303, 304,
	382, 0, 307, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 383, 384, 385, 0, 0, 315, 316, 386,
	387, 0, 317, 318, 319, 320, 0, 0, 321, 322,
	323, 324, 0, 325, 0, 388, 326, 327, 328, 389,
	390, 0, 1206, 329, 174, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	177, 178, 0, 179, 0, 0, 0, 0, 335, 0,
	0, 0, 0, 180, 181, 182, 336, 337, 338, 339,
	183, 340, 341, 0, 184, 342, 343, 185, 186, 0,
	0, 344, 345, 346, 0, 187, 347, 0, 0, 0,
	188, 189, 190, 0, 191, 0, 192, 193, 194, 0,
	0, 195, 196, 197, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 398, 200, 348, 201, 349, 350, 0,
	202, 0, 203, 0, 204, 0, 0, 205, 206, 0,
	207, 0, 0, 0, 351, 208, 209, 210, 352, 353,
	0, 0, 0, 211, 212, 354, 355, 356, 0, 213,
	0, 214, 0, 0, 0, 215, 0, 216, 357, 0,
	358, 0, 217, 218, 219, 220, 221, 1205, 360, 0,
	0, 225, 0, 222, 0, 0, 223, 361, 224, 362,
	363, 364, 365, 366, 0, 367, 0, 0, 226, 227,
	228, 0, 229, 230, 231, 0, 233, 232, 0, 368,
	0, 234, 0, 0, 235, 0, 0, 236, 0, 237,
	238, 239, 241, 369, 240, 0, 242, 243, 245, 244,
	0, 0, 0, 370, 246, 371, 247, 248, 0, 249,
	0, 0, 250, 0, 0, 251, 372, 0, 252, 0,
	373, 253, 254, 255, 256, 257, 0, 258, 374, 259,
	375, 260, 0, 261, 262, 263, 264, 265, 266, 376,
	267, 268, 0, 269, 270, 271, 272, 273, 275, 276,
	274, 277, 278, 279, 280, 0, 281, 0, 282, 283,
	377, 284, 0, 288, 289, 290, 291, 0, 293, 378,
	292, 294, 295, 0, 296, 285, 286, 297, 0, 298,
	379, 380, 299, 0, 306, 300, 301, 287, 302, 305,
	381, 303, 304, 382, 0, 307, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 383, 384, 385, 0, 0,
	315, 316, 386, 387, 0, 317, 318, 319, 320, 0,
	0, 321, 322, 323, 324, 0, 325, 0, 388, 326,
	327, 328, 389, 390, 0, 611, 329, 174, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 177, 178, 0, 179, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 180, 181, 182, 336,
	337, 338, 339, 183, 340, 341, 0, 184, 342, 343,
	185, 186, 0, 0, 344, 345, 937, 0, 187, 347,
	0, 0, 0, 188, 189, 190, 0, 191, 0, 192,
	193, 194, 0, 0, 195, 196, 197, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 398, 200, 348, 201,
	349, 350, 0, 202, 0, 203, 0, 204, 0, 0,
	205, 206, 0, 207, 0, 0, 0, 351, 208, 209,
	210, 352, 353, 0, 0, 0, 211, 212, 354, 355,
	356, 0, 213, 0, 214, 0, 0, 0, 215, 0,
	216, 357, 0, 358, 0, 217, 218, 219, 220, 221,
	359, 360, 0, 0, 225, 0, 222, 0, 0, 223,
	361, 224, 362, 363, 364, 365, 366, 0, 367, 0,
	0, 226, 227, 228, 0, 229, 230, 231, 0, 233,
	232, 0, 368, 0, 234, 0, 0, 235, 0, 0,
	236, 0, 237, 238, 239, 241, 369, 613, 0, 242,
	243, 245, 244, 0, 0, 0, 370, 246, 371, 247,
	248, 0, 249, 0, 0, 250, 0, 0, 251, 372,
	0, 252, 0, 373, 253, 254, 255, 256, 257, 0,
	258, 374, 259, 375, 260, 0, 261, 262, 263, 264,
	265, 266, 376, 267, 268, 0, 269, 270, 271, 272,
	273, 275, 276, 274, 277, 278, 279, 280, 0, 281,
	0, 282, 283, 377, 284, 0, 288, 289, 290, 291,
	0, 293, 378, 292, 294, 295, 0, 296, 285, 286,
	297, 0, 298, 379, 380, 299, 0, 306, 300, 301,
	287, 302, 305, 381, 303, 304, 382, 0, 307, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 608, 384,
	385, 0, 0, 315, 938, 386, 387, 0, 317, 318,
	319, 320, 0, 0, 321, 322, 323, 324, 0, 325,
	0, 388, 326, 327, 328, 389, 390, 0, 906, 329,
	174, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 177, 178, 0, 179,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 180,
	181, 182, 336, 337, 338, 339, 183, 340, 341, 0,
	184, 342, 343, 185, 186, 0, 0, 344, 345, 346,
	0, 187, 347, 0, 0, 0, 188, 189, 190, 0,
	191, 0, 192, 193, 194, 0, 0, 195, 196, 197,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 398,
	200, 348, 201, 349, 350, 0, 202, 0, 203, 0,
	204, 0, 0, 205, 206, 0, 207, 0, 0, 0,
	351, 208, 209, 210, 352, 353, 0, 0, 0, 211,
	212, 354, 355, 356, 0, 213, 0, 214, 0, 0,
	0, 215, 0, 216, 357, 0, 358, 0, 217, 218,
	219, 220, 221, 905, 360, 0, 0, 225, 0, 222,
	0, 0, 223, 361, 224, 362, 363, 364, 365, 366,
	0, 367, 0, 0, 226, 227, 228, 0, 229, 230,
	231, 0, 233, 232, 0, 368, 0, 234, 0, 0,
	235, 0, 0, 236, 0, 237, 238, 239, 241, 369,
	240, 0, 242, 243, 245, 244, 0, 0, 0, 370,
	246, 371, 247, 248, 0, 249, 0, 0, 250, 0,
	0, 251, 372, 0, 252, 0, 373, 253, 254, 255,
	256, 257, 0, 258, 374, 259, 375, 260, 0, 261,
	262, 263, 264, 265, 266, 376, 267, 268, 0, 269,
	270, 271, 272, 273, 275, 276, 274, 277, 278, 279,
	280, 0, 281, 0, 282, 283, 377, 284, 0, 288,
	289, 290, 291, 0, 293, 378, 292, 294, 295, 0,
	296, 285, 286, 297, 0, 298, 379, 380, 299, 0,
	306, 300, 301, 287, 302, 305, 381, 303, 304, 382,
	0, 307, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 383, 384, 385, 0, 0, 315, 316, 386, 387,
	0, 317, 318, 319, 320, 0, 0, 321, 322, 323,
	324, 0, 325, 0, 388, 326, 327, 328, 389, 390,
	0, 903, 329, 174, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 180, 181, 182, 336, 337, 338, 339, 183,
	340, 341, 0, 184, 342, 343, 185, 186, 0, 0,
	344, 345, 346, 0, 187, 347, 0, 0, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 0,
	195, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 398, 200, 348, 201, 349, 350, 0, 202,
	0, 203, 0, 204, 0, 0, 205, 206, 0, 207,
	0, 0, 0, 351, 208, 209, 210, 352, 353, 0,
	0, 0, 211, 212, 354, 355, 356, 0, 213, 0,
	214, 0, 0, 0, 215, 0, 216, 357, 0, 358,
	0, 217, 218, 219, 220, 221, 902, 360, 0, 0,
	225, 0, 222, 0, 0, 223, 361, 224, 362, 363,
	364, 365, 366, 0, 367, 0, 0, 226, 227, 228,
	0, 229, 230, 231, 0, 233, 232, 0, 368, 0,
	234, 0, 0, 235, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 240, 0, 242, 243, 245, 244, 0,
	0, 0, 370, 246, 371, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 0, 252, 0, 373,
	253, 254, 255, 256, 257, 0, 258, 374, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 376, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 0, 282, 283, 377,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	294, 295, 0, 296, 285, 286, 297, 0, 298, 379,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 381,
	303, 304, 382, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 383, 384, 385, 0, 0, 315,
	316, 386, 387, 0, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 0, 325, 0, 388, 326, 327,
	328, 389, 390, 0, 899, 329, 174, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 177, 178, 0, 179, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 180, 181, 182, 336, 337,
	338, 339, 183, 340, 341, 0, 184, 342, 343, 185,
	186, 0, 0, 344, 345, 346, 0, 187, 347, 0,
	0, 0, 188, 189, 190, 0, 191, 0, 192, 193,
	194, 0, 0, 195, 196, 197, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 398, 200, 348, 201, 349,
	350, 0, 202, 0, 203, 0, 204, 0, 0, 205,
	206, 0, 207, 0, 0, 0, 351, 208, 209, 210,
	352, 353, 0, 0, 0, 211, 212, 354, 355, 356,
	0, 213, 0, 214, 0, 0, 0, 215, 0, 216,
	357, 0, 358, 0, 217, 218, 219, 220, 221, 898,
	360, 0, 0, 225, 0, 222, 0, 0, 223, 361,
	224, 362, 363, 364, 365, 366, 0, 367, 0, 0,
	226, 227, 228, 0, 229, 230, 231, 0, 233, 232,
	0, 368, 0, 234, 0, 0, 235, 0, 0, 236,
	0, 237, 238, 239, 241, 369, 240, 0, 242, 243,
	245, 244, 0, 0, 0, 370, 246, 371, 247, 248,
	0, 249, 0, 0, 250, 0, 0, 251, 372, 0,
	252, 0, 373, 253, 254, 255, 256, 257, 0, 258,
	374, 259, 375, 260, 0, 261, 262, 263, 264, 265,
	266, 376, 267, 268, 0, 269, 270, 271, 272, 273,
	275, 276, 274, 277, 278, 279, 280, 0, 281, 0,
	282, 283, 377, 284, 0, 288, 289, 290, 291, 0,
	293, 378, 292, 294, 295, 0, 296, 285, 286, 297,
	0, 298, 379, 380, 299, 0, 306, 300, 301, 287,
	302, 305, 381, 303, 304, 382, 0, 307, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 383, 384, 385,
	0, 0, 315, 316, 386, 387, 0, 317, 318, 319,
	320, 0, 0, 321, 322, 323, 324, 0, 325, 0,
	388, 326, 327, 328, 389, 390, 0, 896, 329, 174,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 177, 178, 0, 179, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 180, 181,
	182, 336, 337, 338, 339, 183, 340, 341, 0, 184,
	342, 343, 185, 186, 0, 0, 344, 345, 346, 0,
	187, 347, 0, 0, 0, 188, 189, 190, 0, 191,
	0, 192, 193, 194, 0, 0, 195, 196, 197, 0,
	0, 0, 0, 0, 0, 0, 198, 199, 398, 200,
	348, 201, 349, 350, 0, 202, 0, 203, 0, 204,
	0, 0, 205, 206, 0, 207, 0, 0, 0, 351,
	208, 209, 210, 352, 353, 0, 0, 0, 211, 212,
	354, 355, 356, 0, 213, 0, 214, 0, 0, 0,
	215, 0, 216, 357, 0, 358, 0, 217, 218, 219,
	220, 221, 895, 360, 0, 0, 225, 0, 222, 0,
	0, 223, 361, 224, 362, 363, 364, 365, 366, 0,
	367, 0, 0, 226, 227, 228, 0, 229, 230, 231,
	0, 233, 232, 0, 368, 0, 234, 0, 0, 235,
	0, 0, 236, 0, 237, 238, 239, 241, 369, 240,
	0, 242, 243, 245, 244, 0, 0, 0, 370, 246,
	371, 247, 248, 0, 249, 0, 0, 250, 0, 0,
	251, 372, 0, 252, 0, 373, 253, 254, 255, 256,
	257, 0, 258, 374, 259, 375, 260, 0, 261, 262,
	263, 264, 265, 266, 376, 267, 268, 0, 269, 270,
	271, 272, 273, 275, 276, 274, 277, 278, 279, 280,
	0, 281, 0, 282, 283, 377, 284, 0, 288, 289,
	290, 291, 0, 293, 378, 292, 294, 295, 0, 296,
	285, 286, 297, 0, 298, 379, 380, 299, 0, 306,
	300, 301, 287, 302, 305, 381, 303, 304, 382, 0,
	307, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	383, 384, 385, 0, 0, 315, 316, 386, 387, 0,
	317, 318, 319, 320, 0, 0, 321, 322, 323, 324,
	0, 325, 0, 388, 326, 327, 328, 389, 390, 0,
	892, 329, 174, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 177, 178,
	0, 179, 0, 0, 0, 0, 335, 0, 0, 0,
	0, 180, 181, 182, 336, 337, 338, 339, 183, 340,
	341, 0, 184, 342, 343, 185, 186, 0, 0, 344,
	345, 346, 0, 187, 347, 0, 0, 0, 188, 189,
	190, 0, 191, 0, 192, 193, 194, 0, 0, 195,
	196, 197, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 398, 200, 348, 201, 349, 350, 0, 202, 0,
	203, 0, 204, 0, 0, 205, 206, 0, 207, 0,
	0, 0, 351, 208, 209, 210, 352, 353, 0, 0,
	0, 211, 212, 354, 355, 356, 0, 213, 0, 214,
	0, 0, 0, 215, 0, 216, 357, 0, 358, 0,
	217, 218, 219, 220, 221, 891, 360, 0, 0, 225,
	0, 222, 0, 0, 223, 361, 224, 362, 363, 364,
	365, 366, 0, 367, 0, 0, 226, 227, 228, 0,
	229, 230, 231, 0, 233, 232, 0, 368, 0, 234,
	0, 0, 235, 0, 0, 236, 0, 237, 238, 239,
	241, 369, 240, 0, 242, 243, 245, 244, 0, 0,
	0, 370, 246, 371, 247, 248, 0, 249, 0, 0,
	250, 0, 0, 251, 372, 0, 252, 0, 373, 253,
	254, 255, 256, 257, 0, 258, 374, 259, 375, 260,
	0, 261, 262, 263, 264, 265, 266, 376, 267, 268,
	0, 269, 270, 271, 272, 273, 275, 276, 274, 277,
	278, 279, 280, 0, 281, 0, 282, 283, 377, 284,
	0, 288, 289, 290, 291, 0, 293, 378, 292, 294,
	295, 0, 296, 285, 286, 297, 0, 298, 379, 380,
	299, 0, 306, 300, 301, 287, 302, 305, 381, 303,
	304, 382, 0, 307, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 383, 384, 385, 0, 0, 315, 316,
	386, 387, 0, 317, 318, 319, 320, 0, 0, 321,
	322, 323, 324, 0, 325, 0, 388, 326, 327, 328,
	389, 390, 174, 0, 329, 0, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 0, 0, 0, 177, 178,
	880, 179, 0, 0, 0, 0, 335, 0, 0, 0,
	0, 180, 181, 182, 336, 337, 338, 339, 183, 340,
	341, 0, 184, 342, 343, 185, 186, 0, 0, 344,
	345, 346, 0, 187, 347, 0, 0, 0, 188, 189,
	190, 0, 191, 0, 192, 193, 194, 0, 0, 195,
	196, 197, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 398, 200, 348, 201, 349, 350, 0, 202, 0,
	203, 0, 204, 0, 0, 205, 206, 0, 207, 0,
	0, 0, 351, 208, 209, 210, 352, 353, 0, 0,
	0, 211, 212, 354, 355, 356, 0, 213, 0, 214,
	0, 0, 0, 215, 0, 216, 357, 0, 358, 0,
	217, 218, 219, 220, 221, 359, 360, 0, 0, 225,
	0, 222, 0, 0, 223, 361, 224, 362, 363, 364,
	365, 366, 0, 367, 0, 0, 226, 227, 228, 0,
	229, 230, 231, 0, 233, 232, 0, 368, 0, 234,
	0, 0, 235, 0, 0, 236, 0, 237, 238, 239,
	241, 369, 240, 0, 242, 243, 245, 244, 0, 0,
	0, 370, 246, 371, 247, 248, 0, 249, 0, 0,
	250, 0, 0, 251, 372, 0, 252, 0, 373, 253,
	254, 255, 256, 257, 0, 258, 374, 259, 375, 260,
	0, 261, 262, 263, 264, 265, 266, 376, 267, 268,
	0, 269, 270, 271, 272, 273, 275, 276, 274, 277,
	278, 279, 280, 0, 281, 0, 282, 283, 377, 284,
	0, 288, 289, 290, 291, 0, 293, 378, 292, 294,
	295, 0, 296, 285, 286, 297, 0, 298, 379, 380,
	299, 0, 306, 300, 301, 287, 302, 305, 381, 303,
	304, 382, 0, 307, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 383, 384, 385, 0, 0, 315, 316,
	386, 387, 0, 317, 318, 319, 320, 0, 0, 321,
	322, 323, 324, 0, 325, 0, 388, 326, 327, 328,
	389, 390, 0, 878, 329, 174, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 877, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 0, 874, 329, 174, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 177, 178, 0, 179, 0, 0,
	0, 0, 335, 0, 0, 0, 0, 180, 181, 182,
	336, 337, 338, 339, 183, 340, 341, 0, 184, 342,
	343, 185, 186, 0, 0, 344, 345, 346, 0, 187,
	347, 0, 0, 0, 188, 189, 190, 0, 191, 0,
	192, 193, 194, 0, 0, 195, 196, 197, 0, 0,
	0, 0, 0, 0, 0, 198, 199, 398, 200, 348,
	201, 349, 350, 0, 202, 0, 203, 0, 204, 0,
	0, 205, 206, 0, 207, 0, 0, 0, 351, 208,
	209, 210, 352, 353, 0, 0, 0, 211, 212, 354,
	355, 356, 0, 213, 0, 214, 0, 0, 0, 215,
	0, 216, 357, 0, 358, 0, 217, 218, 219, 220,
	221, 359, 360, 0, 0, 225, 0, 222, 0, 0,
	223, 361, 224, 362, 363, 364, 365, 366, 0, 367,
	0, 0, 226, 227, 228, 0, 229, 230, 231, 0,
	233, 232, 0, 368, 0, 234, 0, 0, 235, 0,
	0, 236, 0, 237, 238, 239, 241, 369, 240, 0,
	242, 243, 245, 244, 0, 0, 0, 370, 246, 371,
	247, 248, 0, 249, 0, 0, 250, 0, 0, 251,
	372, 0, 252, 0, 373, 253, 254, 255, 256, 257,
	0, 258, 374, 259, 375, 260, 0, 261, 262, 263,
	264, 265, 266, 376, 267, 268, 0, 269, 270, 271,
	272, 273, 275, 276, 274, 277, 278, 279, 280, 0,
	281, 0, 282, 283, 377, 284, 0, 288, 289, 290,
	291, 0, 293, 378, 292, 294, 295, 0, 296, 285,
	286, 297, 0, 298, 379, 380, 299, 0, 306, 300,
	301, 287, 302, 305, 381, 303, 304, 382, 0, 307,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 383,
	384, 385, 0, 0, 315, 316, 386, 387, 0, 317,
	318, 319, 320, 0, 0, 321, 322, 323, 324, 0,
	325, 0, 388, 326, 327, 328, 389, 390, 0, 872,
	329, 174, 0, 0, 0, 330, 331, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 177, 178, 0,
	179, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	180, 181, 182, 336, 337, 338, 339, 183, 340, 341,
	0, 184, 342, 343, 185, 186, 0, 0, 344, 345,
	346, 0, 187, 347, 0, 0, 0, 188, 189, 190,
	0, 191, 0, 192, 193, 194, 0, 0, 195, 196,
	197, 0, 0, 0, 0, 0, 0, 0, 198, 199,
	398, 200, 348, 201, 349, 350, 0, 202, 0, 203,
	0, 204, 0, 0, 205, 206, 0, 207, 0, 0,
	0, 351, 208, 209, 210, 352, 353, 0, 0, 0,
	211, 212, 354, 355, 356, 0, 213, 0, 214, 0,
	0, 0, 215, 0, 216, 357, 0, 358, 0, 217,
	218, 219, 220, 221, 359, 360, 0, 0, 225, 0,
	222, 0, 0, 223, 361, 224, 362, 363, 364, 365,
	366, 0, 367, 0, 0, 226, 227, 228, 0, 229,
	230, 231, 0, 233, 232, 0, 368, 0, 234, 0,
	0, 235, 0, 0, 236, 0, 237, 238, 239, 241,
	369, 240, 0, 242, 243, 245, 244, 0, 0, 0,
	370, 246, 371, 247, 248, 0, 249, 0, 0, 250,
	0, 0, 251, 372, 0, 252, 0, 373, 253, 254,
	255, 256, 257, 0, 258, 374, 259, 375, 260, 0,
	261, 262, 263, 264, 265, 266, 376, 267, 268, 0,
	269, 270, 271, 272, 273, 275, 276, 274, 277, 278,
	279, 280, 0, 281, 0, 282, 283, 377, 284, 0,
	288, 289, 290, 291, 0, 293, 378, 292, 294, 295,
	0, 296, 285, 286, 297, 0, 298, 379, 380, 299,
	0, 306, 300, 301, 287, 302, 305, 381, 303, 304,
	382, 0, 307, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 383, 384, 385, 0, 0, 315, 316, 386,
	387, 0, 317, 318, 319, 320, 0, 0, 321, 322,
	323, 324, 0, 325, 0, 388, 326, 327, 328, 389,
	390, 0, 868, 329, 174, 0, 0, 0, 330, 331,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	177, 178, 0, 179, 0, 0, 0, 0, 335, 0,
	0, 0, 0, 180, 181, 182, 336, 337, 338, 339,
	183, 340, 341, 0, 184, 342, 343, 185, 186, 0,
	0, 344, 345, 346, 0, 187, 347, 0, 0, 0,
	188, 189, 190, 0, 191, 0, 192, 193, 194, 0,
	0, 195, 196, 197, 0, 0, 0, 0, 0, 0,
	0, 198, 199, 398, 200, 348, 201, 349, 350, 0,
	202, 0, 203, 0, 204, 0, 0, 205, 206, 0,
	207, 0, 0, 0, 351, 208, 209, 210, 352, 353,
	0, 0, 0, 211, 212, 354, 355, 356, 0, 213,
	0, 214, 0, 0, 0, 215, 0, 216, 357, 0,
	358, 0, 217, 218, 219, 220, 221, 870, 360, 0,
	0, 225, 0, 222, 0, 0, 223, 361, 224, 362,
	363, 364, 365, 366, 0, 367, 0, 0, 226, 227,
	228, 0, 229, 230, 231, 0, 233, 232, 0, 368,
	0, 234, 0, 0, 235, 0, 0, 236, 0, 237,
	238, 239, 241, 369, 240, 0, 242, 243, 245, 244,
	0, 0, 0, 370, 246, 371, 247, 248, 0, 249,
	0, 0, 250, 0, 0, 251, 372, 0, 252, 0,
	373, 253, 254, 255, 256, 257, 0, 258, 374, 259,
	375, 260, 0, 261, 262, 263, 264, 265, 266, 376,
	267, 268, 0, 269, 270, 271, 272, 273, 275, 276,
	274, 277, 278, 279, 280, 0, 281, 0, 282, 283,
	377, 284, 0, 288, 289, 290, 291, 0, 293, 378,
	292, 294, 295, 0, 296, 285, 286, 297, 0, 298,
	379, 380, 299, 0, 306, 300, 301, 287, 302, 305,
	381, 303, 304, 382, 0, 307, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 383, 384, 385, 0, 0,
	315, 316, 386, 387, 0, 317, 318, 319, 320, 0,
	0, 321, 322, 323, 324, 0, 325, 0, 388, 326,
	327, 328, 389, 390, 0, 747, 329, 174, 0, 0,
	0, 330, 331, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 177, 178, 0, 179, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 180, 181, 182, 336,
	337, 338, 339, 183, 340, 341, 0, 184, 342, 343,
	185, 186, 0, 0, 344, 345, 346, 0, 187, 347,
	0, 0, 0, 188, 189, 190, 0, 191, 0, 192,
	193, 194, 0, 0, 195, 196, 197, 0, 0, 0,
	0, 0, 0, 0, 198, 199, 398, 200, 348, 201,
	349, 350, 0, 202, 0, 203, 0, 204, 0, 0,
	205, 206, 0, 207, 0, 0, 0, 351, 208, 209,
	210, 352, 353, 0, 0, 0, 211, 212, 354, 355,
	356, 0, 213, 0, 214, 0, 0, 0, 215, 0,
	216, 357, 0, 358, 0, 217, 218, 219, 220, 221,
	749, 360, 0, 0, 225, 0, 222, 0, 0, 223,
	361, 224, 362, 363, 364, 365, 366, 0, 367, 0,
	0, 226, 227, 228, 0, 229, 230, 231, 0, 233,
	232, 0, 368, 0, 234, 0, 0, 235, 0, 0,
	236, 0, 237, 238, 239, 241, 369, 240, 0, 242,
	243, 245, 244, 0, 0, 0, 370, 246, 371, 247,
	248, 0, 249, 0, 0, 250, 0, 0, 251, 372,
	0, 252, 0, 373, 253, 254, 255, 256, 257, 0,
	258, 374, 259, 375, 260, 0, 261, 262, 263, 264,
	265, 266, 376, 267, 268, 0, 269, 270, 271, 272,
	273, 275, 276, 274, 277, 278, 279, 280, 0, 281,
	0, 282, 283, 377, 284, 0, 288, 289, 290, 291,
	0, 293, 378, 292, 294, 295, 0, 296, 285, 286,
	297, 0, 298, 379, 380, 299, 0, 306, 300, 301,
	287, 302, 305, 381, 303, 304, 382, 0, 307, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 383, 384,
	385, 0, 0, 315, 316, 386, 387, 0, 317, 318,
	319, 320, 0, 0, 321, 322, 323, 324, 0, 325,
	0, 388, 326, 327, 328, 389, 390, 0, 745, 329,
	174, 0, 0, 0, 330, 331, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 177, 178, 0, 179,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 180,
	181, 182, 336, 337, 338, 339, 183, 340, 341, 0,
	184, 342, 343, 185, 186, 0, 0, 344, 345, 346,
	0, 187, 347, 0, 0, 0, 188, 189, 190, 0,
	191, 0, 192, 193, 194, 0, 0, 195, 196, 197,
	0, 0, 0, 0, 0, 0, 0, 198, 199, 398,
	200, 348, 201, 349, 350, 0, 202, 0, 203, 0,
	204, 0, 0, 205, 206, 0, 207, 0, 0, 0,
	351, 208, 209, 210, 352, 353, 0, 0, 0, 211,
	212, 354, 355, 356, 0, 213, 0, 214, 0, 0,
	0, 215, 0, 216, 357, 0, 358, 0, 217, 218,
	219, 220, 221, 359, 360, 0, 0, 225, 0, 222,
	0, 0, 223, 361, 224, 362, 363, 364, 365, 366,
	0, 367, 0, 0, 226, 227, 228, 0, 229, 230,
	231, 0, 233, 232, 0, 368, 0, 234, 0, 0,
	235, 0, 0, 236, 0, 237, 238, 239, 241, 369,
	240, 0, 242, 243, 245, 244, 0, 0, 0, 370,
	246, 371, 247, 248, 0, 249, 0, 0, 250, 0,
	0, 251, 372, 0, 252, 0, 373, 253, 254, 255,
	256, 257, 0, 258, 374, 259, 375, 260, 0, 261,
	262, 263, 264, 265, 266, 376, 267, 268, 0, 269,
	270, 271, 272, 273, 275, 276, 274, 277, 278, 279,
	280, 0, 281, 0, 282, 283, 377, 284, 0, 288,
	289, 290, 291, 0, 293, 378, 292, 294, 295, 0,
	296, 285, 286, 297, 0, 298, 379, 380, 299, 0,
	306, 300, 301, 287, 302, 305, 381, 303, 304, 382,
	0, 307, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 383, 384, 385, 0, 0, 315, 316, 386, 387,
	0, 317, 318, 319, 320, 0, 0, 321, 322, 323,
	324, 0, 325, 0, 388, 326, 327, 328, 389, 390,
	0, 611, 329, 174, 0, 0, 0, 330, 331, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 177,
	178, 0, 179, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 180, 181, 182, 336, 337, 338, 339, 183,
	340, 341, 0, 184, 342, 343, 185, 186, 0, 0,
	344, 345, 346, 0, 602, 347, 0, 0, 0, 188,
	189, 190, 0, 191, 0, 192, 193, 194, 0, 0,
	195, 196, 197, 0, 0, 0, 0, 0, 0, 0,
	198, 199, 398, 200, 348, 201, 349, 350, 0, 202,
	0, 203, 0, 204, 0, 0, 205, 206, 0, 207,
	0, 0, 0, 351, 208, 209, 210, 352, 353, 0,
	0, 0, 211, 212, 354, 355, 356, 0, 213, 0,
	214, 0, 0, 0, 215, 0, 216, 357, 0, 358,
	0, 217, 218, 219, 220, 221, 359, 360, 0, 0,
	225, 0, 222, 0, 0, 223, 361, 224, 362, 363,
	364, 365, 366, 0, 367, 0, 0, 226, 227, 228,
	0, 229, 230, 231, 0, 233, 232, 0, 368, 0,
	234, 0, 0, 601, 0, 0, 236, 0, 237, 238,
	239, 241, 369, 613, 0, 242, 243, 245, 244, 0,
	0, 0, 370, 246, 371, 247, 248, 0, 249, 0,
	0, 250, 0, 0, 251, 372, 0, 252, 0, 373,
	253, 254, 255, 256, 257, 0, 258, 374, 259, 375,
	260, 0, 261, 262, 263, 264, 265, 266, 376, 267,
	268, 0, 269, 270, 271, 272, 273, 275, 276, 274,
	277, 278, 279, 280, 0, 281, 0, 282, 283, 603,
	284, 0, 288, 289, 290, 291, 0, 293, 378, 292,
	604, 295, 0, 296, 285, 286, 297, 0, 298, 379,
	380, 299, 0, 306, 300, 301, 287, 302, 305, 381,
	303, 304, 382, 0, 307, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 608, 384, 385, 0, 0, 315,
	606, 386, 387, 0, 317, 318, 319, 320, 0, 0,
	321, 322, 323, 324, 0, 325, 0, 388, 326, 327,
	328, 389, 390, 0, 586, 329, 174, 0, 0, 0,
	330, 331, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 177, 178, 0, 179, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 180, 181, 182, 336, 337,
	338, 339, 183, 340, 341, 0, 184, 342, 343, 185,
	186, 0, 0, 344, 345, 346, 0, 187, 347, 0,
	0, 0, 188, 189, 190, 0, 191, 0, 192, 193,
	194, 0, 0, 195, 196, 197, 0, 0, 0, 0,
	0, 0, 0, 198, 199, 398, 200, 348, 201, 349,
	350, 0, 202, 0, 203, 0, 204, 0, 0, 205,
	206, 0, 207, 0, 0, 0, 351, 208, 209, 210,
	352, 353, 0, 0, 0, 211, 212, 354, 355, 356,
	0, 213, 0, 214, 0, 0, 0, 215, 0, 216,
	357, 0, 358, 0, 217, 218, 219, 220, 221, 359,
	360, 0, 0, 225, 0, 222, 0, 0, 223, 361,
	224, 362, 363, 364, 365, 366, 0, 367, 0, 0,
	226, 227, 228, 0, 229, 230, 231, 0, 233, 232,
	0, 368, 0, 234, 0, 0, 235, 0, 0, 236,
	0, 237, 238, 239, 241, 369, 240, 0, 242, 243,
	245, 244, 0, 0, 0, 370, 246, 371, 247, 248,
	0, 249, 0, 0, 250, 0, 0, 251, 372, 0,
	252, 0, 373, 253, 254, 255, 256, 257, 0, 258,
	374, 259, 375, 260, 0, 261, 262, 263, 264, 265,
	266, 376, 267, 268, 0, 269, 270, 271, 272, 273,
	275, 276, 274, 277, 278, 279, 280, 0, 281, 0,
	282, 283, 377, 284, 0, 587, 289, 290, 291, 0,
	293, 378, 292, 294, 295, 0, 296, 285, 286, 297,
	0, 298, 379, 380, 299, 0, 306, 300, 301, 287,
	302, 305, 381, 303, 304, 382, 0, 307, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 383, 384, 385,
	0, 0, 315, 316, 386, 387, 0, 317, 318, 319,
	320, 0, 0, 321, 322, 323, 324, 0, 325, 0,
	388, 326, 327, 328, 389, 390, 0, 584, 329, 174,
	0, 0, 0, 330, 331, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 177, 178, 0, 179, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 180, 181,
	182, 336, 337, 338, 339, 183, 340, 341, 0, 184,
	342, 343, 185, 186, 0, 0, 344, 345, 346, 0,
	187, 347, 0, 0, 0, 188, 189, 190, 0, 191,
	0, 192, 193, 194, 0, 0, 195, 196, 197, 0,
	0, 0, 0, 0, 0, 0, 198, 199, 398, 200,
	348, 201, 349, 350, 0, 202, 0, 203, 0, 204,
	0, 0, 205, 206, 0, 207, 0, 0, 0, 351,
	208, 209, 210, 352, 353, 0, 0, 0, 211, 212,
	354, 355, 356, 0, 213, 0, 214, 0, 0, 0,
	215, 0, 216, 357, 0, 358, 0, 217, 218, 219,
	220, 221, 359, 360, 0, 0, 225, 0, 222, 0,
	0, 223, 361, 224, 362, 363, 364, 365, 366, 0,
	367, 0, 0, 226, 227, 228, 0, 229, 230, 231,
	0, 233, 232, 0, 368, 0, 234, 0, 0, 235,
	0, 0, 236, 0, 237, 238, 239, 241, 369, 240,
	0, 242, 243, 245, 244, 0, 0, 0, 370, 246,
	371, 247, 248, 0, 249, 0, 0, 250, 0, 0,
	251, 372, 0, 252, 0, 373, 253, 254, 255, 256,
	257, 0, 258, 374, 259, 375, 260, 0, 261, 262,
	263, 264, 265, 266, 376, 267, 268, 0, 269, 270,
	271, 272, 273, 275, 276, 274, 277, 278, 279, 280,
	0, 281, 0, 282, 283, 377, 284, 0, 288, 289,
	290, 291, 0, 293, 378, 292, 294, 295, 0, 296,
	285, 286, 297, 0, 298, 379, 380, 299, 0, 306,
	300, 301, 287, 302, 305, 381, 303, 304, 382, 0,
	307, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	383, 384, 385, 0, 0, 315, 316, 386, 387, 0,
	317, 318, 319, 320, 0, 0, 321, 322, 323, 324,
	0, 325, 0, 388, 326, 327, 328, 389, 390, 0,
	576, 329, 174, 0, 0, 0, 330, 331, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 177, 178,
	0, 179, 0, 0, 0, 0, 335, 0, 0, 0,
	0, 180, 181, 182, 336, 337, 338, 339, 183, 340,
	341, 0, 184, 342, 343, 185, 186, 0, 0, 344,
	345, 346, 0, 187, 347, 0, 0, 0, 188, 189,
	190, 0, 191, 0, 192, 193, 194, 0, 0, 195,
	196, 197, 0, 0, 0, 0, 0, 0, 0, 198,
	199, 398, 200, 348, 201, 349, 350, 0, 202, 0,
	203, 0, 204, 0, 0, 205, 206, 0, 207, 0,
	0, 0, 351, 208, 209, 210, 352, 353, 0, 0,
	0, 211, 212, 354, 355, 356, 0, 213, 0, 214,
	0, 0, 0, 215, 0, 216, 357, 0, 358, 0,
	217, 218, 219, 220, 221, 359, 360, 0, 0, 225,
	0, 222, 0, 0, 223, 361, 224, 362, 363, 364,
	365, 366, 0, 367, 0, 0, 226, 227, 228, 0,
	229, 230, 231, 0, 233, 232, 0, 368, 0, 234,
	0, 0, 235, 0, 0, 236, 0, 237, 238, 239,
	241, 369, 240, 0, 242, 243, 245, 244, 0, 0,
	0, 370, 246, 371, 247, 248, 0, 249, 0, 0,
	250, 0, 0, 251, 372, 0, 252, 0, 373, 253,
	254, 255, 256, 257, 0, 258, 374, 259, 375, 260,
	0, 261, 262, 263, 264, 265, 266, 376, 267, 268,
	0, 269, 270, 271, 272, 273, 275, 276, 274, 277,
	278, 279, 280, 0, 281, 0, 282, 283, 377, 284,
	0, 288, 289, 290, 291, 0, 293, 378, 292, 294,
	295, 0, 296, 285, 286, 297, 0, 298, 379, 380,
	299, 0, 306, 300, 301, 287, 302, 305, 381, 303,
	304, 382, 0, 307, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 383, 384, 385, 0, 0, 315, 316,
	386, 387, 0, 317, 318, 319, 320, 0, 0, 321,
	322, 323, 324, 0, 325, 0, 388, 326, 327, 328,
	389, 390, 0, 440, 329, 174, 0, 0, 0, 330,
	331, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 174, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 174, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 1747, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 174, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 1745, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 174, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 1734, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 174, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 587, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 174, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 1216, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 0, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 174, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 255, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 265, 266,
	376, 711, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 284, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 174, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 0, 0, 0,
	0, 177, 178, 0, 179, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 180, 181, 182, 336, 337, 338,
	339, 183, 340, 341, 0, 184, 342, 343, 185, 186,
	0, 0, 344, 345, 346, 0, 187, 347, 0, 0,
	0, 188, 189, 190, 0, 191, 0, 192, 193, 194,
	0, 0, 195, 196, 197, 0, 0, 0, 0, 0,
	0, 0, 198, 199, 398, 200, 348, 201, 349, 350,
	0, 202, 0, 203, 0, 204, 0, 0, 205, 206,
	0, 207, 0, 0, 0, 351, 208, 209, 210, 352,
	353, 0, 0, 0, 211, 212, 354, 355, 356, 0,
	213, 0, 214, 0, 0, 0, 215, 0, 216, 357,
	0, 358, 0, 217, 218, 219, 220, 221, 359, 360,
	0, 0, 225, 0, 222, 0, 0, 223, 361, 224,
	362, 363, 364, 365, 366, 0, 367, 0, 0, 226,
	227, 228, 0, 229, 230, 231, 0, 233, 232, 0,
	368, 0, 234, 0, 0, 235, 0, 0, 236, 0,
	237, 238, 239, 241, 369, 240, 0, 242, 243, 245,
	244, 0, 0, 0, 370, 246, 371, 247, 248, 0,
	249, 0, 0, 250, 0, 0, 251, 372, 0, 252,
	0, 373, 253, 254, 0, 256, 257, 0, 258, 374,
	259, 375, 260, 0, 261, 262, 263, 264, 0, 266,
	376, 267, 268, 0, 269, 270, 271, 272, 273, 275,
	276, 274, 277, 278, 279, 280, 0, 281, 0, 282,
	283, 377, 0, 0, 288, 289, 290, 291, 0, 293,
	378, 292, 294, 295, 0, 296, 285, 286, 297, 0,
	298, 379, 380, 299, 0, 306, 300, 301, 287, 302,
	305, 381, 303, 304, 382, 0, 307, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 383, 384, 385, 0,
	0, 315, 316, 386, 387, 0, 317, 318, 319, 320,
	0, 0, 321, 322, 323, 324, 0, 325, 0, 388,
	326, 327, 328, 389, 390, 0, 0, 329, 0, 0,
	0, 0, 330, 331, 332, 333, 334, 1091, 1092, 0,
	1111, 1112, 1113, 1121, 1122, 1123, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 0, 0, 0,
	1094, 0, 0, 1125, 0, 1091, 1092, 0, 1111, 1112,
	1113, 1121, 1122, 1123, 0, 0, 0, 0, 0, 0,
	0, 1114, 0, 0, 1093, 0, 0, 0, 1094, 0,
	1108, 1125, 0, 1091, 1092, 0, 1111, 1112, 1113, 1121,
	1122, 1123, 0, 0, 0, 0, 0, 0, 0, 1114,
	0, 0, 1093, 0, 0, 0, 1094, 0, 1108, 1125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1093, 0, 0, 0, 0, 1099, 1108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1118, 1126, 0, 0,
	0, 0, 0, 1099, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1118, 1126, 0, 0, 0, 1116,
	0, 1099, 0, 0, 0, 1109, 0, 0, 0, 0,
	0, 0, 1124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1118, 1126, 0, 0, 0, 1116, 0, 0,
	1115, 0, 0, 1109, 0, 0, 0, 0, 0, 0,
	1124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1116, 0, 0, 1115, 0,
	0, 1109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1110,
	0, 0, 0, 0, 0, 0, 1115, 0, 0, 0,
	0, 0, 0, 0, 0, 1119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 1091, 1092,
	0, 1111, 1112, 1113, 1121, 1122, 1123, 0, 0, 0,
	0, 0, 0, 1119, 1114, 0, 0, 0, 0, 0,
	0, 1094, 0, 0, 1125, 1110, 1091, 1092, 0, 1111,
	1112, 1113, 1121, 1122, 1123, 0, 0, 0, 0, 0,
	0, 1119, 1114, 0, 0, 1093, 0, 0, 0, 1094,
	0, 1108, 1125, 1117, 0, 0, 1105, 1106, 1107, 1120,
	0, 1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101,
	0, 0, 0, 1093, 2307, 0, 0, 0, 0, 1108,
	0, 1117, 0, 0, 1105, 1106, 1107, 1120, 0, 1104,
	1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101, 0, 0,
	0, 0, 2302, 0, 0, 0, 1099, 0, 0, 1117,
	0, 0, 1105, 1106, 1107, 1120, 0, 1104, 1102, 1103,
	1095, 1096, 1097, 1098, 1100, 1101, 0, 1118, 1126, 0,
	2298, 0, 0, 0, 1099, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1118, 1126, 0, 0, 0,
	1116, 0, 0, 0, 0, 0, 1109, 0, 0, 0,
	0, 0, 0, 1124, 0, 0, 0, 0, 0, 1091,
	1092, 0, 1111, 1112, 1113, 1121, 1122, 1123, 1116, 0,
	0, 1115, 0, 0, 1109, 1114, 0, 0, 0, 0,
	0, 0, 1094, 0, 0, 1125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 0,
	0, 0, 1108, 0, 0, 0, 0, 0, 0, 0,
	1110, 1091, 1092, 0, 1111, 1112, 1113, 1121, 1122, 1123,
	0, 0, 0, 0, 0, 0, 1119, 1114, 0, 0,
	0, 0, 0, 0, 1094, 0, 0, 1125, 1110, 0,
	1091, 1092, 0, 1111, 1112, 1113, 1121, 1122, 1123, 0,
	0, 0, 0, 0, 1119, 0, 1114, 1099, 1093, 0,
	0, 0, 0, 1094, 1108, 0, 1125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1118, 1126,
	0, 0, 0, 0, 0, 0, 0, 1093, 0, 0,
	0, 0, 0, 1108, 1117, 0, 1124, 1105, 1106, 1107,
	1120, 0, 1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100,
	1101, 1116, 0, 0, 0, 2278, 0, 1109, 0, 1099,
	0, 0, 1117, 0, 0, 1105, 1106, 1107, 1120, 0,
	1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101, 0,
	1118, 1126, 1115, 2221, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1118,
	1126, 0, 0, 1116, 0, 0, 0, 0, 0, 1109,
	0, 0, 0, 0, 0, 0, 0, 1124, 0, 0,
	0, 1110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1116, 0, 1115, 0, 0, 1119, 1109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1119,
	0, 0, 0, 0, 0, 1117, 0, 0, 1105, 1106,
	1107, 1120, 1110, 1104, 1102, 1103, 1095, 1096, 1097, 1098,
	1100, 1101, 0, 0, 0, 0, 2220, 0, 1119, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 1092, 0,
	1111, 1112, 1113, 1121, 1122, 1123, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 0, 0, 0,
	1094, 0, 0, 1125, 0, 0, 0, 1117, 0, 0,
	1105, 1106, 1107, 1120, 0, 1104, 1102, 1103, 1095, 1096,
	1097, 1098, 1100, 1101, 1093, 0, 0, 0, 2160, 0,
	1108, 0, 0, 0, 0, 0, 1117, 0, 0, 1105,
	1106, 1107, 1120, 0, 1104, 1102, 1103, 1095, 1096, 1097,
	1098, 1100, 1101, 0, 0, 0, 0, 2125, 0, 0,
	0, 0, 0, 1091, 1092, 0, 1111, 1112, 1113, 1121,
	1122, 1123, 0, 0, 0, 0, 0, 0, 0, 1114,
	0, 0, 0, 0, 0, 1099, 1094, 0, 0, 1125,
	0, 0, 0, 0, 0, 0, 0, 1091, 1092, 0,
	1111, 1112, 1113, 1121, 1122, 1123, 1118, 1126, 0, 0,
	1093, 0, 0, 1114, 0, 0, 1108, 0, 0, 0,
	1094, 0, 0, 1125, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1116,
	0, 0, 0, 0, 1093, 1109, 0, 0, 0, 0,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1115, 1099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1118, 1126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1099, 0, 0, 0, 0,
	1124, 0, 0, 0, 0, 0, 0, 0, 0, 1110,
	0, 0, 0, 0, 0, 1116, 1118, 1126, 0, 0,
	0, 1109, 0, 0, 0, 1119, 0, 0, 0, 0,
	0, 0, 0, 0, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 0, 0, 1116,
	0, 0, 0, 0, 0, 1109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 1092,
	0, 1111, 1112, 1113, 1121, 1122, 1123, 0, 0, 0,
	1115, 0, 0, 0, 1114, 0, 0, 0, 0, 0,
	0, 1094, 0, 1117, 1125, 1110, 1105, 1106, 1107, 1120,
	0, 1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101,
	0, 1119, 0, 0, 2038, 1093, 0, 0, 0, 0,
	0, 1108, 0, 0, 0, 0, 0, 0, 0, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1099, 0, 0, 1117,
	0, 0, 1105, 1106, 1107, 1120, 0, 1104, 1102, 1103,
	1095, 1096, 1097, 1098, 1100, 1101, 0, 1118, 1126, 0,
	2014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1117, 0, 1124, 1105, 1106, 1107, 1120,
	38, 1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101,
	1116, 39, 122, 0, 1512, 0, 1109, 0, 0, 0,
	0, 0, 0, 0, 42, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 1115, 0, 0, 43, 0, 48, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 53, 0, 0,
	0, 55, 0, 0, 0, 61, 0, 0, 125, 0,
	0, 0, 62, 0, 63, 0, 0, 0, 0, 0,
	1110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 64, 0, 0, 1119, 0, 0, 65,
	0, 0, 66, 0, 0, 0, 0, 0, 1091, 1092,
	0, 1111, 1112, 1113, 1121, 1122, 1123, 0, 0, 0,
	0, 0, 0, 0, 1114, 0, 0, 0, 0, 0,
	0, 1094, 0, 0, 1125, 0, 0, 1091, 1092, 0,
	1111, 1112, 1113, 1121, 1122, 1123, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 1093, 0, 0, 0, 0,
	1094, 1108, 0, 1125, 1117, 0, 0, 1105, 1106, 1107,
	1120, 0, 1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100,
	1101, 0, 67, 1787, 1093, 0, 0, 0, 68, 0,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 76, 69,
	0, 70, 0, 71, 0, 126, 1099, 2454, 0, 0,
	72, 0, 0, 0, 133, 0, 0, 0, 0, 0,
	0, 82, 0, 0, 101, 0, 0, 1118, 1126, 0,
	0, 0, 0, 123, 0, 1099, 0, 1857, 0, 0,
	1856, 0, 0, 135, 0, 1124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1118, 1126, 0, 0,
	1116, 0, 105, 0, 0, 0, 1109, 0, 0, 0,
	0, 121, 0, 0, 1124, 0, 0, 0, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 127, 0, 1116,
	0, 1115, 0, 0, 128, 1109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2453, 0, 0,
	0, 0, 0, 120, 0, 0, 0, 0, 0, 0,
	1115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1110, 0, 1091, 1092, 0, 1111, 1112, 1113, 1121, 1122,
	1123, 0, 0, 0, 0, 0, 1119, 0, 1114, 0,
	0, 0, 0, 1691, 1376, 1094, 0, 0, 1125, 1110,
	1091, 1092, 0, 1111, 1112, 1113, 1121, 1122, 1123, 0,
	0, 0, 0, 0, 0, 1119, 1114, 0, 0, 1093,
	1375, 0, 0, 1094, 0, 1108, 1125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1093, 0, 0,
	0, 0, 0, 1108, 1117, 1692, 0, 1105, 1106, 1107,
	1120, 0, 1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100,
	1101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1099, 0, 0, 1117, 0, 0, 1105, 1106, 1107, 1120,
	0, 1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101,
	0, 1118, 1126, 0, 0, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1118,
	1126, 0, 0, 0, 1116, 0, 0, 0, 0, 0,
	1109, 0, 0, 0, 0, 0, 0, 1124, 0, 0,
	0, 0, 0, 1091, 1092, 0, 1111, 1112, 1113, 1121,
	1122, 1123, 1116, 0, 0, 1115, 0, 0, 1109, 1114,
	0, 0, 0, 0, 0, 0, 1094, 0, 0, 1125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1115, 0, 0, 0, 0, 0, 0,
	1093, 0, 0, 0, 0, 0, 1108, 0, 0, 0,
	0, 0, 0, 0, 1110, 1091, 1092, 0, 1111, 1112,
	1113, 1121, 1122, 1123, 0, 0, 0, 0, 0, 0,
	1119, 1114, 0, 0, 0, 0, 0, 0, 1094, 0,
	0, 1125, 1110, 0, 1091, 1092, 0, 1111, 1112, 1113,
	1121, 1122, 1123, 0, 0, 0, 0, 0, 1119, 0,
	1114, 1099, 1093, 0, 0, 0, 0, 1094, 1108, 0,
	1125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1118, 1126, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 1108, 1117, 0,
	1124, 1105, 1106, 1107, 1120, 0, 1104, 1102, 1103, 1095,
	1096, 1097, 1098, 1100, 1101, 1116, 0, 0, 0, 0,
	0, 1109, 0, 1099, 0, 0, 1117, 0, 0, 1105,
	1106, 1107, 1120, 0, 1104, 1102, 1103, 1095, 1096, 1097,
	1098, 1100, 1101, 0, 1118, 1126, 1115, 672, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 1863, 0, 0,
	0, 0, 1124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1118, 1126, 0, 0, 1116, 0, 0,
	0, 0, 0, 1109, 0, 0, 0, 0, 0, 0,
	0, 1124, 0, 0, 0, 1110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1116, 0, 1115, 0,
	0, 1119, 1109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1119, 0, 0, 0, 0, 0, 1117,
	0, 0, 1105, 1106, 1107, 1120, 1110, 1104, 1102, 1103,
	1095, 1096, 1097, 1098, 1100, 1101, 0, 0, 0, 2018,
	0, 0, 1119, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 1092, 0, 1111, 1112, 1113, 1121, 1122, 1123,
	0, 0, 0, 0, 0, 0, 0, 1114, 0, 0,
	0, 1858, 0, 0, 1094, 0, 0, 1125, 0, 0,
	0, 1117, 0, 0, 1105, 1106, 1107, 1120, 0, 1104,
	1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101, 1093, 0,
	0, 0, 0, 0, 1108, 0, 0, 0, 0, 0,
	1117, 0, 0, 1105, 1106, 1107, 1120, 0, 1104, 1102,
	1103, 1095, 1096, 1097, 1098, 1100, 1101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 1092, 0,
	1111, 1112, 1113, 1121, 1122, 1123, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 0, 0, 1099,
	1094, 0, 0, 1125, 0, 0, 0, 0, 0, 0,
	0, 1091, 1092, 0, 1111, 1112, 1113, 1121, 1122, 1123,
	1118, 1126, 0, 0, 1093, 0, 0, 1114, 0, 0,
	1108, 1816, 0, 0, 1094, 0, 0, 1125, 1124, 1091,
	1092, 0, 1111, 1112, 1113, 1121, 1122, 1123, 0, 0,
	0, 0, 0, 1116, 0, 1114, 0, 0, 1093, 1109,
	0, 0, 1094, 0, 1108, 1125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1115, 1099, 1093, 0, 0, 0,
	0, 0, 1108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1118, 1126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 1124, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 0, 0, 0, 0, 1116,
	1118, 1126, 0, 0, 0, 1109, 0, 1099, 0, 1119,
	0, 0, 0, 0, 0, 0, 0, 0, 1124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1118, 1126,
	1115, 0, 0, 1116, 0, 0, 0, 0, 0, 1109,
	0, 0, 0, 1823, 0, 0, 1124, 0, 0, 0,
	0, 0, 1091, 1092, 0, 1111, 1112, 1113, 1121, 1122,
	1123, 1116, 0, 0, 1115, 0, 0, 1109, 1114, 0,
	0, 0, 0, 0, 0, 1094, 0, 1117, 1125, 1110,
	1105, 1106, 1107, 1120, 0, 1104, 1102, 1103, 1095, 1096,
	1097, 1098, 1100, 1101, 0, 1119, 0, 0, 0, 1093,
	0, 0, 0, 0, 0, 1108, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1119, 0, 0,
	1099, 0, 0, 1117, 0, 0, 1105, 1106, 1107, 1120,
	0, 1104, 1102, 1103, 1095, 1096, 1097, 1098, 1100, 1101,
	0, 1118, 1126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1117, 0, 1124,
	1105, 1106, 1107, 1120, 0, 1104, 1102, 1103, 1095, 1096,
	1097, 1098, 1100, 1101, 1116, 0, 0, 0, 0, 0,
	1109, 0, 0, 0, 0, 1117, 0, 0, 1105, 1106,
	1107, 1120, 0, 1104, 1102, 1103, 1095, 1096, 1097, 1098,
	1100, 1101, 0, 0, 0, 1115, 0, 0, 0, 0,
	1091, 1092, 0, 1111, 1112, 1113, 1121, 1122, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1094, 0, 0, 1125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 0, 1093, 0, 0,
	0, 1091, 1092, 1108, 1111, 1112, 1113, 1121, 1122, 1123,
	1119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1094, 0, 0, 1125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 1108, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1117, 1118,
	1126, 1105, 1106, 1107, 1120, 0, 1104, 1102, 1103, 1095,
	1096, 1097, 1098, 1100, 1101, 0, 0, 1124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 1116, 0, 0, 0, 0, 0, 1109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1118, 1126, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 1254, 1283, 1246, 1274, 1273, 0, 0,
	1248, 1247, 0, 1116, 0, 0, 1285, 1284, 0, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1110, 0, 0, 0, 0, 0, 0, 0,
	1279, 0, 1271, 1270, 0, 0, 0, 0, 1119, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1268, 1266, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1119,
	0, 0, 1257, 1256, 1258, 1259, 1260, 1261, 1262, 0,
	1282, 0, 0, 0, 0, 0, 1117, 0, 0, 1105,
	1106, 1107, 1120, 0, 1104, 1102, 1103, 1095, 1096, 1097,
	1098, 1100, 1101, 0, 0, 0, 0, 0, 1250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 1255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1117, 0, 0,
	1105, 1106, 1107, 1120, 0, 1104, 1102, 1103, 1095, 1096,
	1097, 1098, 1100, 1101, 1265, 0, 0, 0, 1447, 1445,
	1446, 1449, 1448, 0, 0, 0, 1264, 1254, 1283, 1246,
	1274, 1273, 0, 0, 1248, 1247, 0, 0, 0, 0,
	1285, 1284, 0, 0, 1251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1263, 1252, 0, 0, 0,
	0, 0, 0, 0, 632, 1287, 592, 0, 0, 0,
	0, 0, 0, 0, 1279, 0, 1271, 1270, 1249, 0,
	0, 1280, 1281, 0, 637, 0, 1269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 635, 0, 0, 0,
	0, 0, 0, 1253, 1268, 1266, 1267, 0, 1286, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 0,
	0, 0, 638, 0, 0, 0, 0, 644, 645, 0,
	0, 654, 0, 0, 0, 0, 1257, 1256, 1258, 1259,
	1260, 1261, 1262, 0, 1282, 594, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 657, 0,
	0, 0, 1250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 0, 1255, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1265, 0,
	0, 0, 648, 0, 0, 643, 650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 595, 0, 1251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1263,
	1252, 0, 0, 0, 0, 0, 0, 0, 0, 1287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1249, 0, 0, 1280, 1281, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1253, 0, 0,
	0, 0, 1286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 634, 651, 596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 652,
	0, 0, 0, 656, 0, 0, 0, 597, 0, 0,
	0, 0, 649, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 655,
}
var sqlPact = [...]int{

	39817, -1000, 16, -1000, -1000, 172, -1000, -1000, -1000, 171,
	168, 166, -1000, 165, 163, 162, -1000, 161, 160, 158,
	155, 154, 153, 152, 151, -1000, 149, 148, -1000, -1000,
	-1000, 145, 144, 142, 141, 138, 136, 133, 1037, 23769,
	132, 131, 1365, 36001, 130, 129, 117, 111, 1708, 106,
	105, -1000, -1000, 27301, 995, 1397, 103, 99, 95, 94,
	92, 1230, 35681, 2852, 2525, 6079, 1134, 1599, 35358, 23446,
	1597, 2009, 35035, -1000, -1000, 34712, 2030, 91, 89, 88,
	-1000, -1000, 34389, 84, 83, 73, 72, 71, 70, 69,
	68, 64, 62, 61, 58, 56, 53, -1000, 52, 49,
	44, 41682, 43, 41, 40, 1094, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 127, -1000, 1034,
	349, 18882, 1043, 1024, 1009, 1008, 1002, 37921, 36001, 38,
	-46, 37, -1000, 1931, 661, 20836, 39817, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 26978, 26655, 34066, 33743, 779, -1000, 13, 25049,
	36001, -1000, 101, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	958, 0, 0, 0, 0, 964, 973, 0, 0, 0,
	0, 0, 0, 0, 956, 957, 0, 976, 977, 978,
	986, 987, 988, 0, 0, 0, 983, 991, 0, 0,
	979, 0, 964, 0, 0, 0, 0, 959, 0, 0,
	990, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 0, 0, 983, 991, 0, 0, 0, 0, 981,
	0, 964, 958, 0, 0, 974, 0, 0, 973, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 983, 991, 0, 0, 981, 0, 0, 0,
	980, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	989, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 981, 0, 980, 0, 0,
	0, 974, 0, 964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 975,
	0, 0, 0, 0, 983, 991, 980, 0, 0, 0,
	0, 0, 0, 0, 0, 984, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 981, 0, 0,
	0, 0, 984, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 980, 0,
	0, 984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 982, 0, 0, 970, 971, 972, 985,
	0, 969, 967, 968, 960, 961, 962, 963, 965, 966,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	982, 0, 0, 970, 971, 972, 985, 975, 969, 967,
	968, 960, 961, 962, 963, 965, 966, 0, 0, 0,
	0, 0, 0, 984, 1667, 0, 0, 0, 0, 982,
	0, 0, 970, 971, 972, 985, 0, 969, 967, 968,
	960, 961, 962, 963, 965, 966, 0, 0, 0, 0,
	2236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	956, 957, 0, 976, 977, 978, 986, 987, 988, 0,
	0, 0, 0, 0, 0, 0, 979, 0, 0, 0,
	0, 0, 0, 959, 0, 0, 990, 0, 0, 0,
	0, 982, 0, 0, 970, 971, 972, 985, 0, 969,
	967, 968, 960, 961, 962, 963, 965, 966, 958, 0,
	0, 0, 2211, 0, 973, 0, 956, 957, 0, 976,
	977, 978, 986, 987, 988, 0, 0, 0, 0, 0,
	0, 0, 979, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 990, 0, 0, 0, 0, 0, 0, 0,
	0, 956, 957, 0, 976, 977, 978, 986, 987, 988,
	0, 0, 0, 0, 958, 0, 0, 979, 0, 964,
	973, 0, 0, 0, 959, 0, 0, 990, 956, 957,
	0, 976, 977, 978, 986, 987, 988, 0, 0, 0,
	983, 991, 0, 0, 979, 0, 0, 0, 0, 958,
	0, 959, 0, 0, 990, 973, 0, 0, 989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 981, 0, 964, 958, 0, 0, 974,
	0, 0, 973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 983, 991, 0, 0,
	0, 0, 0, 0, 980, 0, 0, 0, 0, 0,
	964, 0, 0, 0, 989, 0, 0, 0, 0, 1675,
	1676, 0, 1693, 1694, 1695, 0, 0, 0, 0, 981,
	0, 983, 991, 0, 0, 974, 0, 964, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 989,
	0, 0, 0, 975, 0, 0, 0, 0, 983, 991,
	980, 0, 0, 0, 981, 0, 0, 0, 0, 984,
	974, 0, 0, 1690, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 981, 0, 0, 0, 980, 0, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 980, 0, 0, 984, 0, 0, 1681, 0,
	0, 0, 0, 0, 0, 0, 0, 982, 0, 0,
	970, 971, 972, 985, 975, 969, 967, 968, 960, 961,
	962, 963, 965, 966, 0, 0, 0, 0, 2155, 0,
	984, 0, 0, 0, 0, 0, 0, 1696, 0, 956,
	957, 975, 976, 977, 978, 986, 987, 988, 0, 0,
	0, 0, 0, 0, 0, 979, 0, 984, 1691, 0,
	0, 0, 959, 982, 0, 990, 970, 971, 972, 985,
	0, 969, 967, 968, 960, 961, 962, 963, 965, 966,
	0, 0, 0, 0, 2150, 0, 0, 958, 0, 0,
	0, 0, 0, 973, 0, 0, 0, 0, 982, 0,
	0, 970, 971, 972, 985, 0, 969, 967, 968, 960,
	961, 962, 963, 965, 966, 0, 0, 0, 0, 2146,
	0, 0, 0, 0, 0, 982, 0, 0, 970, 971,
	972, 985, 1692, 969, 967, 968, 960, 961, 962, 963,
	965, 966, 0, 0, 0, 0, 2138, 0, 964, 956,
	957, 0, 976, 977, 978, 986, 987, 988, 0, 0,
	0, 0, 0, 0, 0, 979, 0, 0, 0, 983,
	991, 0, 959, 0, 0, 990, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	0, 0, 981, 973, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1687,
	1688, 1689, 0, 0, 1686, 1684, 1685, 1677, 1678, 1679,
	1680, 1682, 1683, 980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 983,
	991, 0, 975, 0, 956, 957, 0, 976, 977, 978,
	986, 987, 988, 0, 0, 0, 0, 989, 984, 0,
	979, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	990, 0, 981, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 958, 0, 0, 0, 0, 0, 973, 0,
	0, 0, 0, 980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 0, 970,
	971, 972, 985, 0, 969, 967, 968, 960, 961, 962,
	963, 965, 966, 0, 0, 0, 0, 2063, 0, 0,
	0, 0, 975, 964, 956, 957, 0, 976, 977, 978,
	986, 987, 988, 0, 0, 0, 0, 0, 984, 0,
	979, 0, 0, 0, 983, 991, 0, 959, 0, 0,
	990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 958, 0, 0, 0, 0, 981, 973, 0,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 980, 970,
	971, 972, 985, 0, 969, 967, 968, 960, 961, 962,
	963, 965, 966, 0, 0, 0, 0, 2062, 0, 0,
	0, 0, 0, 964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 983, 991, 0, 975, 0, 956,
	957, 0, 976, 977, 978, 986, 987, 988, 0, 0,
	0, 0, 989, 984, 0, 979, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 990, 0, 981, 0, 0,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	0, 0, 0, 973, 0, 0, 0, 0, 980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 982, 0, 0, 970, 971, 972, 985, 0, 969,
	967, 968, 960, 961, 962, 963, 965, 966, 0, 0,
	0, 0, 2027, 0, 0, 0, 0, 975, 964, 956,
	957, 0, 976, 977, 978, 986, 987, 988, 0, 0,
	0, 0, 0, 984, 0, 979, 0, 0, 0, 983,
	991, 0, 959, 0, 0, 990, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	0, 0, 981, 973, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 982, 0, 980, 970, 971, 972, 985, 0, 969,
	967, 968, 960, 961, 962, 963, 965, 966, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 983,
	991, 0, 975, 0, 956, 957, 0, 976, 977, 978,
	986, 987, 988, 0, 0, 0, 0, 989, 984, 0,
	979, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	990, 0, 981, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 958, 0, 0, 0, 0, 0, 973, 0,
	0, 0, 0, 980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 0, 970,
	971, 972, 985, 0, 969, 967, 968, 960, 961, 962,
	963, 965, 966, 0, 0, 0, 0, 1889, 0, 0,
	0, 0, 975, 964, 956, 957, 0, 976, 977, 978,
	986, 987, 988, 0, 0, 0, 0, 0, 984, 0,
	979, 0, 0, 0, 983, 991, 0, 959, 0, 0,
	990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 958, 0, 0, 0, 0, 981, 973, 0,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 980, 970,
	971, 972, 985, 0, 969, 967, 968, 960, 961, 962,
	963, 965, 966, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 983, 991, 0, 975, 0, 956,
	957, 0, 976, 977, 978, 986, 987, 988, 0, 0,
	0, 0, 989, 984, 0, 979, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 990, 0, 981, 0, 0,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	0, 0, 0, 973, 0, 0, 0, 0, 980, 0,
	0, 0, 0, 0, 1081, 1071, 1100, 1063, 1091, 1090,
	0, 0, 1065, 1064, 0, 0, 0, 0, 0, 1102,
	1101, 982, 0, 0, 970, 971, 972, 985, 0, 969,
	967, 968, 960, 961, 962, 963, 965, 966, 0, 0,
	0, 0, 1377, 0, 0, 0, 0, 975, 964, 2310,
	0, 0, 0, 1096, 0, 1088, 1087, 0, 0, 0,
	0, 0, 0, 984, 0, 1086, 0, 0, 0, 983,
	991, 0, 0, 0, 956, 957, 0, 976, 977, 978,
	986, 987, 988, 1085, 1083, 1084, 0, 989, 0, 0,
	979, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	990, 0, 981, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 1074, 1073, 1075, 1076, 1077,
	1078, 1079, 958, 1099, 0, 0, 0, 0, 973, 0,
	0, 982, 0, 980, 970, 971, 972, 985, 0, 969,
	967, 968, 960, 961, 962, 963, 965, 966, 0, 2309,
	1637, 1067, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1089, 0, 0, 0, 1072, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 975, 964, 0, 1707, 0, 0, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 1082, 984, 0,
	0, 0, 0, 0, 983, 991, 0, 0, 0, 956,
	957, 0, 976, 977, 978, 986, 987, 988, 0, 0,
	0, 0, 989, 0, 0, 979, 0, 1068, 0, 0,
	1508, 0, 959, 0, 0, 990, 0, 981, 1080, 1069,
	0, 0, 0, 974, 0, 0, 0, 0, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	0, 1066, 0, 973, 1097, 1098, 982, 0, 980, 970,
	971, 972, 985, 0, 969, 967, 968, 960, 961, 962,
	963, 965, 966, 0, 0, 0, 1070, 0, 0, 0,
	0, 1103, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 975, 964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 984, 0, 0, 0, 0, 1234, 983,
	991, 0, 0, 0, 956, 957, 0, 976, 977, 978,
	986, 987, 988, 0, 0, 0, 0, 989, 0, 0,
	979, 0, 0, 0, 1233, 0, 0, 959, 0, 0,
	990, 0, 981, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 958, 0, 0, 0, 0, 0, 973, 0,
	0, 982, 0, 980, 970, 971, 972, 985, 0, 969,
	967, 968, 960, 961, 962, 963, 965, 966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 975, 964, 956, 957, 0, 976, 977, 978,
	986, 987, 988, 0, 0, 0, 0, 0, 984, 0,
	979, 0, 0, 0, 983, 991, 0, 959, 0, 0,
	990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 958, 0, 0, 0, 0, 981, 973, 0,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 980, 970,
	971, 972, 985, 0, 969, 967, 968, 960, 961, 962,
	963, 965, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 983, 991, 0, 975, 0, 956,
	957, 0, 976, 977, 978, 986, 987, 988, 0, 0,
	0, 0, 989, 984, 0, 979, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 990, 0, 981, 0, 0,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	0, 0, 0, 973, 0, 0, 0, 0, 980, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 982, 0, 0, 970, 971, 972, 985, 0, 969,
	967, 968, 960, 961, 962, 963, 965, 966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 975, 964, 956,
	957, 0, 976, 977, 978, 986, 987, 988, 0, 0,
	0, 0, 0, 984, 0, 979, 0, 0, 0, 983,
	991, 0, 959, 0, 0, 990, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	0, 0, 981, 973, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 982, 0, 980, 970, 971, 972, 985, 0, 969,
	967, 968, 960, 961, 962, 963, 965, 966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 964, 0,
	0, 0, 0, 1713, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 983,
	991, 0, 975, 0, 956, 957, 0, 976, 977, 978,
	986, 987, 988, 0, 0, 0, 0, 989, 984, 0,
	979, 0, 0, 0, 1708, 0, 0, 959, 0, 0,
	990, 0, 981, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 958, 0, 0, 0, 0, 0, 973, 0,
	0, 0, 0, 980, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 0, 970,
	971, 972, 985, 0, 969, 967, 968, 960, 961, 962,
	963, 965, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 975, 964, 956, 957, 0, 976, 977, 978,
	986, 987, 988, 0, 0, 0, 0, 0, 984, 0,
	979, 0, 0, 0, 983, 991, 0, 959, 0, 0,
	990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 958, 0, 0, 0, 0, 981, 973, 0,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 980, 970,
	971, 972, 985, 0, 969, 967, 968, 960, 961, 962,
	963, 965, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 983, 991, 0, 975, 0, 956,
	957, 0, 976, 977, 978, 986, 987, 988, 0, 0,
	0, 0, 989, 984, 0, 979, 0, 0, 0, 1666,
	0, 0, 959, 0, 0, 990, 0, 981, 0, 0,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 958, 0, 0,
	0, 0, 0, 973, 0, 0, 0, 0, 980, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1673, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 982, 0, 0, 970, 971, 972, 985, 0, 969,
	967, 968, 960, 961, 962, 963, 965, 966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 975, 964, 956,
	957, 0, 976, 977, 978, 986, 987, 988, 0, 0,
	0, 0, 0, 984, 0, 979, 0, 0, 0, 983,
	991, 0, 959, 0, 0, 990, 0, 0, 956, 957,
	0, 976, 977, 978, 986, 987, 988, 989, 0, 0,
	0, 0, 0, 0, 979, 0, 0, 958, 0, 0,
	0, 959, 981, 973, 990, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 958, 0, 0, 0,
	0, 982, 973, 980, 970, 971, 972, 985, 0, 969,
	967, 968, 960, 961, 962, 963, 965, 966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 983,
	991, 0, 975, 0, 0, 0, 0, 964, 956, 957,
	0, 976, 977, 978, 986, 987, 988, 989, 984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 983, 991,
	0, 959, 981, 0, 990, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 958, 0, 0, 0,
	0, 981, 973, 980, 0, 0, 0, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 982, 0, 0, 970,
	971, 972, 985, 0, 969, 967, 968, 960, 961, 962,
	963, 965, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 975, 0, 0, 0, 0, 964, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 983, 991,
	0, 975, 0, 956, 957, 0, 976, 977, 978, 986,
	987, 988, 0, 0, 0, 0, 989, 984, 0, 0,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 990,
	0, 981, 0, 0, 0, 0, 0, 974, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 958, 0, 0, 0, 0, 982, 973, 0, 970,
	971, 972, 985, 0, 969, 967, 968, 960, 961, 962,
	963, 965, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 982, 0, 0, 970, 971,
	972, 985, 0, 969, 967, 968, 960, 961, 962, 963,
	965, 966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 975, 964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 984, 0, 0,
	0, 0, 0, 983, 991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 981, 0, 0, 0,
	0, 0, 974, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 982, 0, 0, 970, 971,
	972, 985, 0, 969, 967, 968, 960, 961, 962, 963,
	965, 966, 1081, 1071, 1100, 1063, 1091, 1090, 0, 0,
	1065, 1064, 0, 0, 0, 0, 0, 1102, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1096, 984, 1088, 1087, 0, 0, 0, 0, 0,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1085, 1083, 1084, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1074, 1073, 1075, 1076, 1077, 1078, 1079,
	982, 1099, 0, 970, 971, 972, 985, 0, 969, 967,
	968, 960, 961, 962, 963, 965, 966, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1067,
	0, 0, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 1072, 0, 0, 0, 0,
	590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 588, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1082, 0, 0, 0, 1312,
	1310, 1311, 1314, 1313, 589, 0, 0, 0, 0, 591,
	0, 0, 0, 0, 597, 598, 0, 0, 607, 0,
	0, 0, 0, 0, 0, 1068, 0, 0, 0, 0,
	0, 0, 521, 592, 0, 0, 1080, 1069, 0, 0,
	0, 0, 0, 0, 0, 0, 1104, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 0, 0, 0, 1066,
	0, 0, 1097, 1098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 593, 0, 0, 0,
	0, 0, 0, 0, 1070, 0, 0, 0, 0, 1103,
	0, 594, 595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 601,
	0, 0, 596, 603, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	587, 604, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 605, 0, 0, 0,
	609, 0, 0, 0, 524, 0, 0, 0, 0, 602,
	606, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 608,
}
var sqlPact = [...]int{

	3957, -1000, 18, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
>>>>>>> Fix build errors
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 18318,
	-1000, -1000, 22491, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22491, 22170, 814, 983, -1000, -1000, -1000, -1000, -1000,
	22491, 1271, 916, 5841, 720, 1276, 22491, 18318, 1274, 916,
	23775, -1000, -1000, 23775, 958, -1000, -1000, -1000, -1000, -1000,
	27948, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
=======
	-1000, -1000, 712, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1023, 893, 203, 739, -1000, 813,
	32, 15070, 32238, 585, 587, 585, 585, 586, 749, 27627,
	22491, 1600, -12, -1000, 373, 16042, 3957, 670, -14, 18960,
	22491, -1000, 15, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
>>>>>>> Fix build errors
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 14849, 14490, 566, 101, -1000, -1000,
	-1000, -1000, -1000, 33420, -1000, 33097, 32774, 1476, 32451, -1000,
	-1000, -1000, -1000, -1000, -1000, 32128, -1000, -1000, 1863, 1623,
	1610, 26332, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 31808, 31485, 31162, 30839, 30516, 513,
	-1000, -1000, -1000, 17550, -1000, -1000, -1000, -1000, 31, -1000,
	-1000, -1000, -1000, 26, 24, 21, 19, 1184, -1000, -1000,
	14, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
=======
	-1000, -1000, 395, 15, -1000, 388, -1000, 21849, -1000, 1402,
	1282, 1281, 20565, -1000, -1000, -1000, -1000, -1000, 385, -1000,
	13736, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1062, -1000, -13, -1000, -1000, -1000,
>>>>>>> Fix build errors
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 36001, -1000, 15884, -1000, 512, -1000, 1575, -1000, 15884,
	-1000, 1178, -1000, -1000, -1000, -1000, -1000, 36001, -1000, -1000,
	1793, -1000, -1000, -1000, -1000, -1000, -1000, 950, -1000, -1000,
	-1000, 2078, 1165, 511, 30193, -1000, 1672, -1000, 604, 777,
	-1000, -1000, -1000, 18548, 179, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1742, 23123, 1241, 1886, 1860, 2077,
	1361, 1856, 1826, 1801, 1792, 1747, 2075, 983, 2074, 1741,
	1005, 2071, 1701, 1244, 694, 2039, 1573, 1569, -1000, -1000,
	-1000, 28581, -1000, -1000, 1034, -1000, -1000, -1000, 1299, 1830,
	1830, 1830, 1903, 312, 308, -1000, 127, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2047, -1000, -1000,
	-1000, -1000, 2061, -1000, -1000, -1000, -1000, 1271, -1000, -1000,
	1271, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 775, 37281,
	12, 36001, -1000, 510, 12, -1000, -1000, 509, -1000, 10928,
	10928, -1000, -1000, -1000, -1000, -1000, 9203, 1729, -1000, 475,
	-194, 326, 581, -1000, 19861, 22457, -1000, -1000, 982, 1704,
	686, -1000, 1030, 1702, 534, -1000, 1029, -1000, 944, 1683,
	-88, 24089, 25049, 13, -1, -1000, -1000, -1000, 5747, 41032,
	-1000, -1000, 15884, 15884, 15884, 15884, 15884, 1090, 527, -1000,
	507, 506, 7463, -1000, -1000, 2060, -1000, -1000, -1000, 318,
	-1000, -1000, 15884, 101, -1000, -1000, -1000, -1000, 504, 2066,
	-1000, 599, -1000, -1000, -1000, 612, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1589, 503, 501, 500, -1000,
	-1000, -1000, -1000, 499, 498, 497, 493, 492, 482, 480,
	474, 473, 472, 459, 457, 454, 453, 450, 1067, -1000,
	644, -1000, -1000, 644, 644, -1000, 440, 440, 442, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 440, -1000, -1000,
	-1000, 605, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 448,
	41032, -1000, 885, 21484, 101, -1000, -1000, -1000, -1000, 447,
	1335, 623, -1000, 331, -1000, 29870, 623, 1323, -1000, -1000,
	-1000, 28581, -1000, 36001, -1000, 36001, -1000, 919, -1000, 37601,
	114, 1677, -1000, -1000, 114, 1663, -1000, 113, 1659, -1000,
	-1000, -1000, 1657, -1000, -1, 1655, -1000, -1000, 15884, -11,
	-1000, -1000, -1000, 661, -1000, -1000, -1000, -1000, -1000, 24409,
	1214, 565, 41032, 1979, 41609, 24089, 41032, 24409, -1000, -1000,
	-1000, -1000, -1000, 36001, -1000, 15884, -1000, 1970, 1419, 9,
	-1000, -1000, -1000, -1000, -1000, 1392, 1433, 748, 1544, 18216,
	17884, 1802, -1000, -1000, -1000, 178, 6079, -1000, -1000, -1000,
	-1000, -1000, -1000, 29547, -1000, -1000, -1000, 1182, 36001, -1000,
	-1000, 1586, -1000, 24409, 36001, -1000, 36001, -1000, 36001, -1000,
	36001, -1000, 36001, -1000, -1000, -1000, -1000, -1000, 662, -1000,
	1585, -1000, -1000, 36001, -1000, 1388, -1000, -1000, -1000, 29227,
	28904, -1000, 992, 835, 124, -1000, -1000, 1299, -1000, 1194,
	1448, 14131, 1444, 15884, 127, -1000, -1000, 127, 127, 8499,
	-1000, -1000, -1000, -1000, -1000, -1000, 9, -1000, 37281, -1000,
	36001, 12, 1962, 36001, -1000, 110, -1000, 40220, -1000, 110,
	-12, -1000, 41032, -1000, 1434, 1432, 21160, 1353, 1091, 1091,
	1091, -1000, 445, 522, 581, 5068, 13786, -1000, 27621, 1114,
	214, 309, 19537, 1729, -1000, 36001, -6, 1006, -1000, 26009,
	1871, 1839, 1855, 28581, 1921, 96, 1566, 759, 28581, 756,
	1919, 96, 1565, 755, 36001, 6079, 578, -1000, 36001, -1000,
	-1000, 41405, 41609, 6079, 796, 15884, 15884, 15884, 15884, 15884,
	15884, 15884, 15884, 15884, 15884, 15884, 15884, 15884, 15884, 15884,
	15884, 15884, 15884, 15884, 15884, 15884, 15884, 1302, 15884, 753,
	15884, 15884, 15884, 15884, 1501, 1133, 426, 1270, -1000, 2036,
	2036, 2036, 41230, 41230, 327, 527, -1000, 15884, -1000, 96,
	13427, 308, 39497, 10, 7118, -1000, -1000, -1000, 8844, 638,
	41032, 101, 6413, -1000, 2059, 1110, 1554, 1511, 444, 541,
	539, 484, 15884, 15884, 13082, 12723, 12364, 16229, 12005, 15884,
	7808, 15884, 15884, 15884, 15884, 11646, 11287, -1000, 443, -1000,
	-1000, -1000, -1000, 2058, -1000, -1000, 2056, -1000, 793, 763,
	2055, -1000, 1563, -13, -1000, -1000, 25689, 1944, 1653, -1000,
	1075, -1000, 1941, 36001, 1173, 1295, -1000, -1000, 826, 1648,
	633, 351, 1938, 351, 21809, -1000, 36001, -1000, 36001, -1000,
	-1000, 36001, -1000, 36001, -1000, 36001, 36001, 36001, 36001, -20,
	41032, 739, 25369, 752, -1000, 668, 25689, 42, -28, -1000,
	846, -1000, -1000, -1000, -1000, 276, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 442, 1067,
	440, 440, 440, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	605, -1000, -1000, 644, 644, 644, -1000, -1000, -77, -1000,
	1556, -1000, 591, -31, 701, 9, -1000, 1271, -1000, 1126,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2065, 7, -1000, -1000, 7, -1000, -1000,
	6079, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36001, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 220, -1000, -1000,
	-1000, -1000, -1000, -1000, 36001, 36001, 36001, -1000, 28581, -1000,
	-1000, -1000, -1000, 41032, -1000, 407, -1000, -1000, 41032, 952,
	1450, -1000, 1450, 5, -1000, 40192, 1430, 36001, -1000, -1000,
	439, -49, 633, 10928, 20511, 6079, -1000, 633, 9203, -1000,
	21160, 21160, 1580, 1417, 21160, -1000, -1000, -1000, -1000, 27621,
	465, 581, 27621, -1000, 2054, 1435, -50, -1000, -1000, -1000,
	36001, 437, -1000, 581, 307, 966, 36001, 36001, 36001, -1000,
	-1000, 1292, 36961, 1291, 41609, 36001, -1000, 434, 433, 1428,
	1410, 36001, 36001, 36641, 36321, 36001, 974, 96, -1000, 429,
	36001, 1022, 36001, 96, -1000, 427, 36001, 1020, -1000, 1491,
	1216, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 598, 483, 483, 840, 840, 840, 840, 2018,
	2252, 1183, 925, 247, 247, 247, 348, 914, 914, 247,
	247, 247, 41230, 40879, 216, 15884, 15884, 746, 1093, 426,
	216, 15884, 216, 216, 216, 216, -1000, 1358, -1000, -1000,
	-1000, -1000, 1549, 425, 16229, 16229, -1000, -1000, -1000, 7463,
	16561, -1000, -1000, -1000, -1000, 424, 15884, -1000, 39678, -208,
	-55, -1000, -1000, 15884, -102, -111, -1000, -1000, 864, -1000,
	15884, -1000, -14, 15884, 15884, 15884, 304, -1000, 302, -1000,
	744, -1000, 742, 740, 730, -1000, 423, 1108, 422, 421,
	15884, -1000, -1000, -1000, -1000, -1000, -1000, 40851, 4375, 292,
	-1000, 1547, -101, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	287, -1000, 286, -1000, 40817, -101, 284, 378, -1000, 16229,
	16229, 16229, 7463, 420, 283, -1000, 39977, -101, 40731, 10583,
	10583, 10583, 282, 40464, 15884, -101, 4317, 3947, 3525, -56,
	-61, -1000, -63, -1000, 2053, -64, 281, 595, 592, 263,
	884, 1538, 36001, 262, -75, 0, 41609, -1000, -1000, -1000,
	-1000, -1000, 36001, 491, 36001, 96, 36001, 2064, 96, 36001,
	1647, 1711, 363, 36001, 978, 15884, 1014, -1000, 20186, 650,
	36001, 978, 100, -1000, -1000, -1000, 572, 36001, -1000, -1000,
	114, 114, -1000, 113, -1000, -1, -1000, 15884, -1000, -1000,
	36001, 24089, -80, -1000, -1000, 41609, -1000, 526, 669, -1000,
	2051, 614, 24089, 36001, -1000, 1439, -1000, -1000, 931, -1000,
	1060, -1000, 19214, -1000, -25, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 952, -1000, 15884, 2050, -1000, -1000, -1000, 8499,
	-1000, -1000, -1000, 36001, -156, 42, -1000, 1503, -1000, -133,
	-1000, 1729, -1000, 1503, -1000, -1000, 1580, -1000, 416, 15884,
	21160, -1000, 519, -1000, -89, -1000, 27621, -1000, 517, -205,
	-1000, 571, -1000, 581, 410, 36001, 27621, -1000, -1000, -1000,
	725, 724, 1644, -1000, 1288, -1000, 654, -1000, 1059, 15884,
	17225, 409, 401, 1070, -1000, 1641, 1203, 1612, 1203, -1000,
	-6, 971, -1000, 15884, -1000, 723, -1000, -1000, 15884, -1000,
	718, 614, 1536, 859, 15884, 216, 216, 15884, 16229, 16229,
	-1000, 216, -1000, -1000, -1000, -1000, -1000, 1533, 400, 15884,
	41609, 4553, 3703, -90, -1000, 10238, -7, -1000, 15884, -1000,
	39463, -1000, -1000, 525, 1613, -1000, 15884, 40435, 258, 9893,
	-1000, 40373, -30, -30, -1000, 2020, 1355, 1100, 1055, 945,
	2043, -1000, 22133, 634, 1120, 39377, 41405, 41609, -1000, 15884,
	-1000, -1000, 1526, 15884, -1000, 41405, 41609, 16229, 16229, 16229,
	16229, 16229, 16229, 16229, 16229, 16229, 16229, 16229, 16229, 16229,
	16229, 16229, 16229, 16229, 16229, 16229, 1332, 16229, 2034, 2034,
	2034, -23, 9548, -1000, 1581, 1526, 15884, 15884, 41609, 256,
	255, 254, -1000, 15884, -101, 15884, 15884, 15884, -1000, -1000,
	-1000, 252, -1000, 2031, -1000, -1000, -1000, -1000, -1000, 876,
	-1000, 1478, -1000, 25689, 395, 36001, 393, -1000, 391, -1000,
	-1000, 390, 36001, 1400, 363, 24729, -1000, 623, -1000, 8153,
	41032, -1000, 978, 1867, -95, -1000, -1000, -1000, 633, 21809,
	21160, 9203, -105, -1000, -1000, -1000, 41032, -25, 1816, 1816,
	-1000, 2028, -1000, 515, 246, -1000, 28261, -1000, -25, -1000,
	-1000, -1000, -1000, -1000, 36001, 1132, 39110, -1000, 1846, 6079,
	245, 1508, 1899, -1000, 21160, 1508, -1000, 36001, 41032, -1000,
	-194, -1000, 2023, -1000, -1000, 1435, -1000, 5412, 27621, 36001,
	-110, -1000, 36001, 36001, 36001, 1609, -1000, 2499, -1000, 39081,
	-115, -1000, 320, 1881, 15884, -1000, -1000, 389, 17225, 36001,
	-1000, 1416, 1455, 685, 36001, -1000, 36001, -1000, 36001, 36001,
	36001, -116, 36001, -121, 36001, -1000, 24089, 751, 1945, 216,
	760, 277, 15884, 41609, 41281, -122, 15884, 15884, -1000, -123,
	-1000, 15884, 485, 41032, -1000, -1000, -1000, 41032, 15884, 2011,
	15884, 233, 229, 228, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 227, -1000, -1000, 38241, 15884, 224, -1000, 222,
	221, 41032, 1581, 41032, -1000, -1000, 542, 542, 904, 904,
	904, 904, 2034, 1237, 1384, 781, 1490, 1490, 1490, 559,
	469, 469, 1490, 1490, 1490, 1525, 1308, 388, 2766, 15884,
	-132, -1000, -1000, -1000, 41032, 41032, 218, -1000, -1000, -1000,
	-101, 306, 39019, 38866, -1000, 197, -1000, -1000, 1486, -1000,
	17225, 384, 36001, 25689, 1936, 17225, 1170, 1405, 363, 24729,
	-1000, 826, -26, -1000, -1000, 355, 96, 978, -1000, -47,
	-1000, 554, 1789, -1000, 1777, 470, -1000, -1000, -66, 382,
	-1000, 547, 544, -1000, -1000, -1000, -1000, 1846, -1000, 625,
	15884, 15884, 1729, 625, -137, 581, -1000, -1000, -1000, 2013,
	-1000, -140, -1000, -1000, -1000, -1000, 36001, -1000, 36001, -1000,
	6079, 36001, 1517, 1253, -1000, -1000, 1406, 377, 16229, 36001,
	-1000, 1089, 17225, 1846, 101, 6079, 1846, 38838, 6413, -142,
	-143, 1251, -1000, 1236, 15884, -1000, 41609, 1203, 1203, -1000,
	716, 715, 711, -1000, 710, -1000, -76, 22789, 15884, 15884,
	41281, -145, -1000, 216, 216, -1000, 38623, -1000, 41032, -1000,
	40373, -1000, -1000, -1000, -1000, 1080, -1000, 38595, -1000, -1000,
	-1000, -1000, 16229, 1520, 365, 41609, 38567, -1000, -1000, 15884,
	-1000, -1000, -1000, 1085, -150, 17225, -153, 191, 96, -158,
	36001, -1000, 363, 24729, -1000, 1711, 1755, 36001, 1853, -1000,
	-1000, 364, 360, 359, -1000, 27941, 27941, 24089, 24089, -1000,
	-1000, 36001, 41032, -101, -1000, -1000, 27621, 379, -1000, -1000,
	1325, -1000, -1000, 36001, 1259, -1000, -1000, 15884, 2766, 358,
	1478, 357, -1000, -1000, -1000, -1000, -1000, -1000, 1881, -14,
	-1000, 1052, -1000, -1000, 41032, 1877, -1000, -1000, 36001, 36001,
	353, 352, -1000, 350, 101, 216, 216, -1000, -1000, 190,
	1120, 1898, -1000, 3070, 16229, 41609, -159, -1000, 4676, 36001,
	1089, -160, -1000, 1478, -1000, 1089, 347, 24729, -1000, 1400,
	807, -161, 36001, -1000, -1000, 6759, 24089, 24089, -1000, -166,
	-1000, -1000, -86, -1000, 1927, -1000, -1000, -1000, -1000, 1596,
	4433, 1362, 36001, -1000, 36001, 1846, 189, 36001, 659, 6079,
	-1000, -1000, 15884, 15884, 15884, -1000, 998, 15884, 3070, -172,
	-1000, -1000, 346, 1478, 1089, -1000, 1478, 17225, -1000, 1405,
	909, -1000, 633, -1000, -173, -174, -1000, 36001, 334, 1601,
	-1000, 1157, 1118, 182, -175, -1000, -1000, 331, -1000, 15884,
	-1000, -180, -181, -30, 181, 15539, 15539, -101, -1000, 36001,
	-1000, 1478, -1000, -182, -1000, 21809, -1000, 614, 614, -1000,
	-1000, 36001, -1000, 1164, 1159, 894, -1000, -1000, -1000, -1000,
	-1000, 1362, 41032, -1000, -1000, 112, -1000, -1000, -1000, 16893,
	1199, 960, 39948, -1000, -188, -1000, 1089, -168, -1000, -1000,
	-1000, -1000, 1765, -1000, 678, 1247, 1247, 1157, 2011, 1949,
	-1000, -1000, -1000, -1000, -1000, 1193, 1478, -1000, -1000, 1990,
	-1000, -1000, 1402, -1000, -1000, 15194, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 2459, 2458, 1641, 1922, 2456, 2455, 2454, 2453, 2452,
	2449, 2447, 2446, 2445, 2442, 2440, 2437, 2436, 2435, 2433,
	2432, 2429, 2428, 2427, 2424, 2420, 2419, 1906, 2415, 2414,
	2409, 2405, 2397, 2390, 2388, 2382, 1882, 2381, 1809, 2380,
	2377, 2376, 2375, 2373, 1800, 1792, 2367, 93, 109, 1723,
	2365, 2364, 1719, 2363, 2362, 2361, 2360, 2358, 2357, 2356,
	41, 2354, 2353, 2349, 2346, 2342, 2339, 2337, 144, 153,
	2334, 1707, 2331, 2326, 2324, 2316, 2315, 2314, 2308, 2307,
	2306, 2305, 2303, 2301, 2278, 2277, 2275, 2271, 2268, 2267,
	152, 2265, 2245, 1681, 1665, 2244, 2243, 38, 26, 8,
	58, 29, 137, 2844, 130, 2242, 2241, 2240, 2233, 2232,
	2230, 22, 101, 100, 2229, 154, 2227, 2225, 51, 33,
	20, 16, 2222, 88, 2221, 2219, 1410, 31, 2218, 2217,
	132, 2216, 27, 25, 2092, 148, 134, 110, 112, 2213,
	2212, 2211, 2210, 49, 105, 5, 2209, 2208, 13, 74,
	19, 2205, 35, 21, 2204, 2203, 126, 2201, 59, 92,
	1569, 98, 113, 343, 2200, 67, 12, 62, 2198, 2195,
	147, 37, 2194, 30, 82, 138, 2193, 48, 155, 125,
	75, 124, 116, 2192, 2188, 2187, 96, 2185, 104, 71,
	2184, 2182, 79, 2181, 131, 133, 2180, 2179, 91, 2178,
	114, 2177, 2176, 151, 143, 108, 6, 52, 60, 10,
	1565, 1564, 121, 78, 57, 56, 2175, 2128, 1097, 741,
	36, 97, 65, 53, 99, 50, 72, 141, 23, 2174,
	2172, 119, 2171, 2170, 2169, 2168, 2167, 90, 2165, 2164,
	61, 135, 80, 45, 47, 86, 43, 77, 123, 106,
	145, 102, 2162, 85, 120, 2161, 46, 2159, 2158, 1728,
	118, 2157, 2144, 2142, 1671, 1607, 1190, 222, 2141, 2140,
	691, 680, 2139, 2138, 68, 2137, 111, 107, 2134, 142,
	230, 84, 2133, 115, 17, 87, 2132, 32, 24, 0,
	2426, 401, 2127, 117, 81, 2121, 2116, 2112, 2111, 18,
	2, 9, 3, 7, 4, 34, 28, 2110, 2109, 127,
	94, 64, 2108, 149, 2105, 2104, 2103, 39, 2099, 14,
	2098, 15, 2091, 2090, 11, 1, 2089, 2087, 140, 2086,
	89, 2085, 1912, 2084, 146, 2083, 2082, 1729, 55, 103,
=======
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 22491, 11374, 383,
	1401, 11374, 1061, -1000, 22491, -1000, -1000, -1000, 1429, -1000,
	-1000, -1000, -1000, -1000, 468, 1753, 788, 381, 27306, -1000,
	1086, -1000, 460, 640, -1000, -1000, 14737, 25, 20565, -1000,
	11374, 11374, 26985, 22491, 22491, 1299, 26664, -1000, 22491, -1000,
	813, -1000, -1000, 26343, 26022, 25701, 25380, 25059, -1000, 1208,
	1585, 1585, 1585, 1604, 146, 136, 203, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1712, -1000, -1000, -1000,
	-1000, 1734, -1000, -1000, -1000, -1000, -1000, 1429, 17997, 815,
	1581, 1400, -1000, 1060, 1395, 1394, 1393, 1392, 1388, -1000,
	871, -1000, 1419, 589, -1000, 1385, 909, 535, -1000, 1384,
	1382, 1086, -1000, 1086, -1000, -1000, -1000, 668, 23775, 21528,
	24738, 22491, 21207, -20, 22491, -1000, 374, -20, 9989, 9989,
	-1000, -1000, 373, -1000, 9297, 1633, 2852, -171, 164, 442,
	-1000, 15392, 17343, -1000, 17997, 18960, -14, -68, -1000, -1000,
	-1000, 5508, 761, 16367, 15, -1000, -1000, -1000, 22491, -1000,
	-1000, 20565, 22491, 22491, 802, 24417, 408, -1000, 11374, 72,
	-1000, -1000, 373, 18318, 999, 441, 31599, -1000, 11374, 11374,
	11374, 11374, 11374, 992, 401, -1000, 362, 361, 6520, -1000,
	-1000, 1733, -1000, -1000, -1000, 150, -1000, -1000, 11374, 15,
	-1000, -1000, -1000, -1000, 360, 1749, -1000, 471, -1000, -1000,
	-1000, 474, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1417, 356, 355, 354, -1000, -1000, -1000, -1000, 353,
	348, 347, 342, 340, 325, 324, 321, 319, 304, 303,
	301, 300, 299, 298, 956, -1000, 493, -1000, -1000, 493,
	493, -1000, 273, 273, 274, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 273, -1000, -1000, -1000, 461, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 296, 1650, 30387, 17997, 31599,
	18318, -1000, -1000, -1000, -1000, 22491, 11374, -1000, 1649, 1086,
	-37, -1000, -1000, -1000, -1000, 1220, 1164, 595, 768, 14404,
	14071, 1517, -1000, -1000, -1000, 24, 5841, 157, -1000, 31599,
	31599, 294, 1153, 478, 163, 24096, 478, 1152, 293, -1000,
	1208, 156, 1466, -1000, 156, 1464, 152, 1463, -1000, -161,
	-1000, 1461, -68, 1460, -1000, 1066, 1272, 10682, 1254, 11374,
	203, -1000, -1000, 203, 203, 7559, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 20886, -1000, -1000, 785, 22491,
	1416, 18318, 22491, 22491, 22491, 22491, 22491, -1000, -1000, 2954,
	1415, 22491, 1214, -1000, -1000, 22491, 22491, 863, 711, -1000,
	-37, -1000, 23775, -1000, 876, 1455, 528, 921, 1452, 918,
	912, 1451, 22491, -20, 1648, 22491, 104, -1000, 30754, -1000,
	104, -1000, 71, -1000, 31599, -1000, 1269, 1251, 16042, 1424,
	1007, 1007, 1007, -1000, 292, 399, 442, 4829, 11374, -1000,
	20244, 1012, 97, 145, 1633, -1000, 22491, 438, -1000, 22491,
	-1000, -1000, -1000, 1381, 66, -1000, -1000, 139, -27, -1000,
	22491, 484, 118, 1641, 118, 16693, -1000, 22491, 65, 31599,
	244, 19281, 665, -1000, 539, 19602, 32055, 30387, 5841, 688,
	11374, 11374, 11374, 11374, 11374, 11374, 11374, 11374, 11374, 11374,
	11374, 11374, 11374, 11374, 11374, 11374, 11374, 11374, 11374, 11374,
	11374, 11374, 1309, 11374, 661, 11374, 11374, 11374, 11374, 1288,
	997, 246, 1097, -1000, 1701, 1701, 1701, 31738, 31738, 229,
	401, -1000, 11374, -1000, 10336, 136, 30104, -33, -1000, -1000,
	-1000, 7905, 491, 31599, 15, 4399, -1000, 1732, 738, 1427,
	1343, 290, 135, 134, 133, 11374, 11374, 12066, 12066, 11374,
	12412, 11374, 11374, 6866, 11374, 11374, 11374, 11374, 11374, 11374,
	-1000, 284, -1000, -1000, -1000, -1000, 1731, -1000, -1000, 1730,
	-1000, 687, 683, 1724, 32, 61, -1000, 728, -1000, -1000,
	-1000, -1000, 122, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 274, 956, 273, 273, 273,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 461, -1000, -1000,
	493, 493, 493, -1000, -1000, -21, -1000, 1377, -1000, 463,
	60, 579, -37, 1086, 950, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1747, -50,
	-1000, -1000, -50, -1000, -1000, 5841, -1000, -1000, 20565, -1000,
	-1000, 19602, 1639, 1450, -1000, 971, -1000, 1630, 22491, 1055,
	1142, -1000, 695, 1449, 22491, -1000, -1000, 22491, 22491, -1000,
	22491, -1000, 22491, 22491, 5841, 22491, 22491, -1000, -1000, -1000,
	31599, -1000, 359, -1000, -1000, 31599, 854, 1285, -1000, 1285,
	-56, -1000, 30619, 1243, 22491, -1000, -1000, -1000, -1000, -1000,
	22491, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 238,
	-1000, -1000, -1000, -1000, 22491, 22491, 22491, -1000, -97, 885,
	-1000, 19923, 1578, 1565, 1552, 20565, 1617, 32, 1375, 1616,
	32, 1372, 659, 22491, 656, 655, 20565, -1000, 269, 59,
	484, 9989, 16042, 5841, -1000, 484, 9297, -1000, 16042, 16042,
	1210, 1246, 16042, -1000, -1000, -1000, -1000, 20244, 386, 442,
	20244, -1000, 1722, 1241, 54, -1000, -1000, 22491, 260, -1000,
	442, 130, 1317, 1067, -1000, 759, 1370, 22491, -1000, 22491,
	-1000, 828, 11374, 947, -1000, 15717, 509, 22491, 828, 93,
	-1000, -1000, -1000, 432, 22491, -1000, -1000, 11374, -1000, -1000,
	22491, 17997, 52, -1000, -1000, -1000, -1000, -1000, 30387, 22491,
	346, 22491, 22491, -1000, 248, 1238, 1234, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 459, 440, 440,
	726, 726, 726, 726, 1672, 3776, 3842, 3623, 263, 263,
	263, 2390, 376, 376, 263, 263, 263, 31738, 31628, 2355,
	11374, 11374, 650, 995, 246, 2355, 11374, 2355, 2355, 2355,
	2355, -1000, 817, -1000, -1000, -1000, -1000, 1365, 245, 12412,
	12412, -1000, -1000, -1000, 6520, 12745, -1000, -1000, -1000, -1000,
	241, 11374, -1000, 30214, -173, 50, -1000, -1000, 11374, 4,
	-85, -1000, -1000, 718, -1000, 11374, -1000, 19, 11374, 11374,
	11374, 129, 128, -1000, 645, -1000, 627, 626, 624, -1000,
	240, 994, 233, 231, 11374, -1000, -1000, -1000, 31489, 28623,
	127, 1364, -131, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	126, 125, 31354, -131, 124, 287, -1000, 12412, 12412, 12412,
	6520, 230, 123, 30484, -131, 31244, 9643, 9643, 9643, 120,
	31109, 11374, -131, 28596, 3809, 3561, 41, 34, 33, 1720,
	27, 119, 452, 451, 116, -1000, -1000, 30387, -1000, 396,
	584, -1000, 1719, 477, 17997, 22491, -1000, 1273, -1000, -1000,
	821, -1000, 943, -1000, 15070, -1000, -1000, 114, 14, -67,
	30387, 32, 22491, 1746, 32, 22491, 1448, 1473, 426, 22491,
	113, -1000, 156, 156, -1000, 152, -1000, -1000, -68, 854,
	-1000, 11374, 1717, -1000, -1000, -1000, 7559, -1000, -1000, -1000,
	22491, -165, -91, -1000, -1000, -1000, -1000, -1000, 438, 816,
	22491, 22491, 22491, -1000, -1000, 1132, 23454, 1127, 228, 22491,
	22491, 23133, 22812, 22491, 823, 32, -1000, 227, 32, -1000,
	226, 22491, 892, 22491, 22491, 860, 32, -1000, 1329, -1000,
	-103, 1633, -1000, 1329, -1000, -1000, 1210, -1000, 224, 11374,
	16042, -1000, 397, -1000, 3, -1000, 20244, -1000, 392, -163,
	-1000, 428, -1000, 442, 223, 22491, 20244, -1000, 477, 1363,
	734, -1000, 758, -1000, -1000, -1000, 7212, 31599, -1000, 828,
	1556, 1, -1000, -1000, -1000, 484, 16693, 16042, 9297, -19,
	31599, -91, 1543, 1543, 19602, -1000, 222, 22491, 13411, 221,
	1065, 11374, 220, 217, 11374, 2355, 2355, 11374, 12412, 12412,
	-1000, 2355, -1000, -1000, -1000, -1000, -1000, 1354, 214, 11374,
	30387, 3313, 3290, -23, -1000, 8951, -83, -1000, 11374, -1000,
	29969, -1000, -1000, 322, 1471, -1000, 11374, 30999, 112, 8605,
	-1000, 30864, 6, 6, -1000, 1744, 1176, 1063, 895, 839,
	1716, -1000, 17018, 486, 1016, 29859, 32055, 30387, -1000, 11374,
	-1000, -1000, 1353, 11374, -1000, 32055, 30387, 12412, 12412, 12412,
	12412, 12412, 12412, 12412, 12412, 12412, 12412, 12412, 12412, 12412,
	12412, 12412, 12412, 12412, 12412, 12412, 1171, 12412, 1699, 1699,
	1699, -84, 8259, -1000, 1414, 1353, 11374, 11374, 30387, 111,
	110, 109, -1000, 11374, -131, 11374, 11374, 11374, -1000, -1000,
	-1000, 106, -1000, 1710, -1000, -1000, -1000, -1000, -1000, 1706,
	-1000, 391, 105, -1000, 1027, -1000, -91, -1000, -1000, -1000,
	-1000, -1000, 1301, -1000, -1000, 213, -1000, -1000, 211, 22491,
	1212, 426, 18639, -1000, 478, -136, -1000, -1000, -1000, 1024,
	29724, -1000, 1557, 5841, 22491, -1000, -1000, -1000, 617, 612,
	1447, -1000, 1123, -1000, 520, 967, -1000, 1446, 1121, 1443,
	1121, -1000, -97, 848, -1000, 11374, -1000, 11374, -1000, 611,
	-1000, -1000, 606, 102, 1323, 1602, -1000, 16042, 1323, -1000,
	22491, 31599, -1000, -171, -1000, 1696, -1000, -1000, 1241, -1000,
	5172, 20244, 22491, -25, -1000, -1000, 17997, 598, -1000, -107,
	-1000, -1000, 189, 32, 828, -1000, -114, -1000, 427, 1506,
	-1000, 1501, -1000, 1390, 13411, 207, -29, -1000, 339, 1577,
	11374, -1000, -1000, 206, 22491, -1000, 29614, 13411, 22491, 1664,
	2355, 2920, 343, 11374, 30387, 31873, -35, 11374, 11374, -1000,
	-36, -1000, 11374, 390, 31599, -1000, -1000, -1000, 31599, 11374,
	1737, 11374, 101, 100, 95, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 94, -1000, -1000, 28269, 11374, 90, -1000,
	89, 88, 31599, 1414, 31599, -1000, -1000, 499, 499, 755,
	755, 755, 755, 1699, 2104, 320, 3444, 3360, 3360, 3360,
	2301, 583, 583, 3360, 3360, 3360, 1352, 1170, 205, 29219,
	11374, -41, -1000, -1000, -1000, 31599, 31599, 86, -1000, -1000,
	-1000, -131, 3342, 29479, 29369, -1000, 85, 387, -1000, -1000,
	196, -1000, 1311, 19602, 1629, 13411, 1048, 1226, 426, 18639,
	-1000, 695, 3957, -1000, -1000, -1000, 1557, -1000, 22491, 22491,
	22491, 1442, -1000, -1000, 1200, 1300, 573, 22491, -1000, 22491,
	-1000, 22491, 22491, 22491, -46, -51, 22491, 22491, -1000, 481,
	11374, 11374, 1633, 481, -52, 442, -1000, -1000, -1000, 1693,
	-1000, -66, -1000, -121, 17676, 1482, 22491, 1550, -1000, -1000,
	195, 194, 191, -1000, 22491, -1000, 5841, 22491, 1360, 1091,
	-1000, -1000, 1232, 185, 12412, 22491, -70, 13411, 976, 13411,
	1557, 15, 5841, 1557, 29128, 4399, -75, -1000, -76, -86,
	11374, 11374, 31873, -92, -1000, 2355, 2355, -1000, 29101, -1000,
	31599, -1000, 30864, -1000, -1000, -1000, -1000, 978, -1000, 29066,
	-1000, -1000, -1000, -1000, 12412, 1350, 184, 30387, 29010, -1000,
	-1000, 11374, -1000, -1000, -1000, -1000, 1739, 982, 82, 32,
	-93, 22491, -1000, 426, 18639, -1000, 1473, -166, -1000, -1000,
	-1000, -1000, 22491, 1082, -1000, 1080, 11374, -1000, 30387, 1121,
	1121, -1000, 605, 604, 596, 592, -1000, -1000, -1000, 22491,
	31599, -131, -1000, -1000, 20244, 288, -1000, -1000, 181, 15,
	677, -98, 22491, -1000, -1000, 6174, 17997, 17997, 902, -1000,
	-1000, 22491, 1122, -1000, -1000, 11374, 29219, 177, 976, -99,
	1301, 176, -1000, -1000, -1000, -1000, -1000, -1000, 1577, 19,
	-1000, -1000, 936, 2355, 2355, -1000, -1000, 80, 1016, 1596,
	-1000, 1076, 12412, 30387, -105, -1000, 28714, -106, -1000, 425,
	22491, 1301, -1000, 976, 173, 18639, -1000, 1212, -1000, -1000,
	-1000, -1000, 31599, 1575, -1000, -1000, 22491, 22491, 171, 170,
	-127, -1000, 1626, -1000, -1000, 11374, 791, -1000, 484, -1000,
	-112, -120, -1000, -1000, 1441, 28652, 1195, 22491, 1301, 976,
	-1000, 22491, 1557, 79, 22491, -1000, 886, 11374, 1076, -126,
	-1000, -1000, 1739, -1000, -1000, 1738, 167, -1000, 1301, 13411,
	-1000, 1226, 537, 5841, -1000, -1000, 11374, 11374, 22491, 166,
	6, 16693, -1000, 477, 477, 1431, -1000, 1030, 955, 73,
	-1000, 1301, -139, -1000, -1000, 163, 67, 11720, 11720, -131,
	-1000, -1000, -1000, 22491, -1000, -140, -1000, -1000, 11374, -1000,
	-145, -146, -1000, -1000, 40, -119, 536, 529, 22491, -1000,
	1046, 1036, 781, -1000, -1000, -1000, -1000, -1000, -1000, 1195,
	-1000, -1000, -1000, 13078, 1069, 870, 30349, -1000, -154, 976,
	31599, -1000, -1000, 1737, -1000, 704, 699, -1000, -1000, 1487,
	-1000, 540, 1129, 1129, 1030, 1668, -1000, -1000, -1000, -1000,
	-1000, 1113, 1301, 750, 743, -1000, 1679, -1000, -1000, 1181,
	-1000, -1000, 11028, -1000, -1000, -1000, -1000, 17997, 17997, -1000,
	-1000, -1000, -1000, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 2120, 36, 1467, 114, 2119, 2116, 2112, 2109, 2108,
	2107, 2103, 2102, 2101, 2093, 2092, 2091, 2090, 2089, 2088,
	2087, 2084, 2082, 2080, 2079, 2077, 2076, 108, 2074, 2073,
	2071, 2069, 2056, 2053, 2052, 2051, 2050, 106, 2044, 102,
	2037, 2033, 2031, 2029, 2028, 96, 94, 2027, 118, 134,
	92, 2026, 2024, 88, 2021, 2020, 2019, 2017, 2013, 2012,
	2010, 90, 2009, 2006, 2004, 2003, 2002, 2001, 2000, 180,
	191, 1998, 83, 1996, 1995, 1993, 1992, 1988, 1983, 1981,
	1980, 1975, 1971, 1969, 1967, 1966, 1965, 1964, 1963, 1962,
	1958, 190, 1957, 1955, 65, 58, 1954, 1952, 138, 1951,
	133, 20, 1949, 13, 1948, 85, 33, 172, 2777, 167,
	1947, 1946, 1940, 1939, 57, 116, 104, 1935, 149, 1934,
	1932, 47, 22, 15, 16, 1931, 117, 1929, 1927, 1279,
	26, 1926, 1923, 170, 1923, 1920, 44, 25, 2210, 181,
	177, 142, 135, 1919, 1918, 1917, 1916, 38, 153, 9,
	1915, 1913, 11, 56, 14, 1912, 45, 41, 1909, 1908,
	163, 1907, 86, 129, 1461, 178, 145, 72, 1906, 105,
	12, 100, 1903, 1897, 186, 24, 1895, 34, 110, 168,
	1891, 51, 187, 159, 98, 160, 152, 1889, 1888, 1885,
	125, 1884, 147, 75, 1878, 1877, 73, 1875, 166, 165,
	1871, 1870, 119, 1868, 158, 1866, 1862, 188, 175, 146,
	18, 23, 82, 10, 1453, 1447, 144, 79, 49, 60,
	1859, 1695, 942, 906, 30, 127, 55, 42, 124, 62,
	70, 179, 27, 1851, 1850, 156, 1848, 1847, 1843, 1841,
	1840, 123, 1839, 1838, 87, 174, 113, 32, 46, 120,
	28, 112, 189, 162, 183, 132, 1832, 111, 161, 1831,
	196, 1830, 1829, 1492, 148, 1825, 1821, 1816, 1435, 1387,
	898, 39, 1815, 1814, 834, 101, 1807, 1806, 69, 1805,
	150, 143, 1803, 171, 184, 63, 1802, 155, 29, 128,
	1800, 3, 50, 0, 223, 35, 1797, 137, 80, 1796,
	1793, 1790, 1785, 17, 1, 8, 2, 6, 5, 76,
	48, 1784, 1783, 164, 77, 54, 1781, 185, 1780, 1776,
	1774, 31, 1773, 21, 1772, 19, 1771, 1770, 7, 4,
	1767, 1766, 169, 1763, 121, 1762, 1632, 1760, 173, 1759,
	1756, 1484, 37, 126,
>>>>>>> Fix build errors
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
<<<<<<< HEAD
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	7, 7, 8, 8, 6, 6, 6, 6, 6, 9,
	9, 10, 16, 13, 18, 12, 12, 15, 15, 113,
	113, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 110, 110, 115, 115,
	115, 117, 117, 114, 114, 109, 109, 20, 20, 58,
	58, 100, 53, 53, 53, 287, 287, 288, 288, 96,
	96, 97, 97, 97, 97, 98, 98, 99, 99, 99,
	26, 26, 26, 22, 22, 22, 22, 22, 23, 23,
	24, 24, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 36, 36,
	37, 37, 37, 37, 37, 37, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 43, 43, 43,
	41, 41, 41, 40, 40, 40, 39, 39, 39, 42,
	42, 42, 162, 162, 161, 161, 164, 164, 44, 44,
	44, 44, 47, 47, 47, 47, 47, 47, 47, 47,
	47, 47, 48, 48, 48, 48, 48, 48, 48, 48,
	255, 255, 254, 46, 46, 229, 229, 49, 49, 187,
	187, 50, 50, 50, 50, 50, 51, 51, 59, 59,
	328, 328, 328, 332, 332, 333, 333, 334, 334, 334,
	334, 334, 334, 334, 330, 330, 56, 56, 56, 95,
	95, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	65, 65, 67, 64, 64, 64, 66, 66, 66, 66,
	68, 68, 68, 68, 69, 69, 69, 69, 69, 70,
	70, 142, 142, 280, 279, 279, 285, 285, 285, 140,
	140, 140, 140, 140, 141, 141, 141, 278, 278, 278,
	278, 286, 286, 286, 286, 286, 286, 284, 284, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 83, 83, 83, 90, 90,
	90, 90, 90, 90, 90, 72, 72, 77, 77, 77,
	77, 77, 73, 73, 78, 78, 79, 79, 80, 80,
	80, 80, 80, 80, 74, 74, 74, 74, 82, 82,
	82, 82, 81, 81, 87, 87, 87, 87, 87, 87,
	84, 84, 84, 84, 85, 85, 85, 88, 88, 88,
	88, 75, 75, 76, 76, 89, 89, 86, 86, 86,
	45, 329, 329, 331, 331, 54, 54, 30, 30, 31,
	31, 143, 143, 144, 144, 208, 208, 208, 208, 145,
	145, 116, 116, 116, 207, 297, 297, 298, 298, 298,
	298, 298, 298, 299, 299, 299, 299, 299, 299, 299,
	295, 295, 296, 293, 293, 294, 294, 294, 294, 335,
	335, 206, 206, 148, 148, 302, 302, 302, 302, 300,
	300, 300, 300, 300, 303, 301, 304, 304, 304, 304,
	304, 241, 241, 241, 92, 92, 32, 32, 122, 122,
	33, 33, 29, 29, 29, 191, 191, 152, 152, 246,
	246, 246, 133, 133, 111, 111, 111, 14, 11, 11,
	11, 11, 11, 11, 19, 19, 17, 17, 192, 192,
	193, 193, 55, 55, 57, 57, 62, 62, 91, 91,
	91, 91, 91, 91, 21, 21, 21, 21, 25, 25,
	25, 25, 61, 61, 337, 337, 129, 129, 129, 129,
	130, 130, 203, 203, 204, 204, 204, 205, 205, 205,
	124, 123, 125, 125, 28, 28, 28, 34, 35, 118,
	118, 119, 119, 120, 120, 121, 121, 338, 338, 52,
	52, 52, 94, 94, 136, 136, 200, 200, 200, 202,
	202, 201, 201, 201, 177, 177, 177, 93, 93, 157,
	157, 166, 166, 167, 167, 252, 168, 168, 60, 60,
	103, 103, 101, 101, 101, 101, 101, 101, 102, 102,
	102, 104, 104, 104, 104, 104, 104, 104, 107, 107,
	107, 108, 108, 108, 106, 106, 310, 310, 310, 313,
	313, 309, 311, 311, 312, 312, 336, 336, 178, 178,
	178, 147, 146, 146, 150, 150, 149, 151, 151, 245,
	245, 245, 175, 175, 175, 175, 194, 194, 195, 195,
	196, 196, 197, 197, 197, 198, 198, 199, 199, 174,
	174, 225, 225, 105, 105, 105, 156, 156, 156, 158,
	158, 215, 215, 215, 216, 216, 214, 214, 214, 214,
	247, 247, 247, 247, 247, 247, 247, 247, 326, 326,
	326, 327, 327, 244, 244, 248, 248, 248, 248, 248,
	248, 242, 242, 242, 242, 243, 243, 253, 253, 181,
	181, 181, 181, 179, 179, 180, 180, 249, 249, 249,
	249, 176, 176, 250, 250, 250, 209, 209, 256, 256,
	256, 274, 274, 155, 155, 155, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 258, 258, 258, 258, 260, 260, 260,
	259, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 259, 273, 273,
	273, 273, 273, 261, 261, 268, 268, 269, 269, 270,
	271, 262, 262, 263, 263, 264, 265, 272, 272, 272,
	272, 276, 276, 266, 266, 266, 266, 266, 267, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 189, 189, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 219, 219, 219,
	219, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 305, 305, 305, 305, 305, 305, 305, 305,
	307, 307, 308, 308, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 314, 314, 315, 315, 317, 317, 318, 318,
	319, 320, 320, 320, 321, 322, 322, 316, 316, 323,
	323, 323, 324, 324, 325, 325, 325, 325, 325, 231,
	231, 231, 232, 232, 233, 239, 239, 239, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 131, 131, 131, 131, 131, 163,
	163, 228, 228, 226, 226, 226, 230, 230, 182, 182,
	275, 275, 275, 275, 275, 275, 275, 183, 183, 183,
	190, 184, 184, 185, 185, 185, 185, 185, 185, 222,
	223, 186, 186, 186, 224, 224, 234, 238, 238, 237,
	236, 236, 235, 235, 212, 212, 213, 213, 211, 210,
	171, 171, 170, 170, 169, 169, 339, 339, 240, 240,
	172, 172, 173, 165, 165, 251, 251, 251, 251, 159,
	159, 138, 138, 160, 160, 134, 134, 137, 137, 135,
	135, 135, 135, 153, 153, 154, 154, 132, 132, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	277, 277, 277, 227, 126, 126, 126, 127, 127, 128,
	128, 282, 282, 282, 283, 283, 283, 283, 281, 281,
	281, 281, 281, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292,
}
var sqlR2 = [...]int{

	0, 1, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 0, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 3, 1, 1, 1, 1, 3, 4,
	6, 6, 6, 5, 5, 4, 12, 4, 12, 1,
	3, 2, 5, 3, 6, 4, 6, 6, 6, 4,
	8, 3, 3, 3, 6, 4, 3, 2, 1, 1,
	0, 2, 0, 2, 0, 2, 0, 7, 2, 6,
	2, 1, 12, 12, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	4, 6, 7, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	3, 1, 2, 1, 2, 1, 1, 2, 6, 3,
	2, 2, 2, 2, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 4, 6, 3,
	4, 6, 3, 4, 6, 3, 3, 5, 3, 3,
	5, 3, 1, 3, 1, 2, 2, 3, 2, 2,
	5, 3, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 1,
	1, 3, 1, 5, 2, 3, 0, 3, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 2, 6, 2,
	1, 2, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 2, 3, 2, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	4, 3, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 3, 3, 3, 1, 3, 3, 1, 1, 2,
	2, 1, 0, 1, 1, 3, 1, 1, 1, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 2, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 3, 3, 4, 4, 3,
	4, 4, 4, 3, 2, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 2, 3,
	3, 3, 2, 3, 4, 3, 5, 3, 4, 5,
	2, 3, 3, 3, 4, 2, 3, 4, 3, 3,
	3, 4, 4, 4, 4, 2, 3, 5, 5, 5,
	2, 2, 0, 2, 0, 3, 2, 7, 10, 6,
	9, 1, 0, 1, 3, 1, 1, 1, 1, 8,
	0, 1, 1, 0, 3, 2, 0, 3, 1, 2,
	2, 3, 6, 2, 1, 1, 2, 4, 2, 5,
	7, 8, 5, 3, 1, 4, 6, 5, 10, 1,
	1, 4, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 1, 2, 1, 4, 2, 4, 3, 3, 0,
	6, 3, 11, 14, 4, 1, 0, 1, 3, 3,
	3, 5, 2, 0, 1, 1, 0, 6, 6, 8,
	8, 10, 8, 10, 6, 8, 6, 8, 1, 0,
	2, 0, 2, 2, 3, 2, 2, 2, 1, 2,
	1, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 2, 1, 0, 1, 3, 2, 0,
	2, 1, 1, 0, 1, 3, 2, 1, 1, 1,
	2, 3, 2, 2, 8, 11, 3, 2, 2, 3,
	0, 3, 0, 3, 0, 3, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 4, 2, 8,
	5, 4, 3, 0, 2, 2, 0, 8, 3, 2,
	0, 1, 3, 1, 1, 3, 5, 5, 1, 1,
	3, 3, 1, 2, 3, 2, 3, 4, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 6, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 3, 1, 3, 2,
	4, 5, 2, 2, 1, 1, 2, 5, 2, 3,
	1, 1, 1, 3, 0, 1, 1, 1, 1, 3,
	0, 2, 0, 2, 2, 3, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 3, 2, 4, 4, 0,
	8, 4, 6, 3, 3, 1, 5, 5, 0, 2,
	3, 1, 3, 2, 0, 3, 4, 5, 4, 5,
	4, 5, 2, 4, 1, 1, 0, 5, 0, 2,
	2, 2, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 0, 2, 5,
	2, 1, 1, 2, 3, 0, 1, 1, 1, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 1, 1, 5,
	2, 1, 1, 1, 1, 4, 1, 2, 2, 1,
	1, 1, 0, 1, 1, 4, 1, 4, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 3, 4,
	4, 5, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 5, 6, 6, 7, 1, 2, 1,
	2, 1, 1, 2, 1, 3, 1, 1, 2, 2,
	1, 1, 3, 5, 6, 8, 6, 6, 4, 3,
	4, 1, 1, 1, 5, 1, 3, 3, 1, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 6, 6,
	4, 3, 4, 3, 4, 3, 4, 4, 3, 6,
	5, 5, 5, 4, 8, 6, 6, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 2,
	2, 0, 1, 4, 2, 2, 2, 2, 2, 4,
	3, 5, 4, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	3, 1, 3, 3, 3, 2, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 0, 2,
	2, 3, 2, 1, 1, 3, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 2, 2,
	1, 1, 1, 2, 1, 2, 1, 0, 1, 1,
	1, 3, 3, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 1, 3, 1, 2, 3, 1, 1,
	1, 2, 2, 1, 3, 3, 0, 1, 2, 1,
	1, 1, 1, 6, 2, 1, 5, 1, 1, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
=======
	3, 3, 3, 3, 3, 3, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 7, 8, 6, 6, 6,
	6, 9, 9, 10, 16, 13, 18, 12, 12, 15,
	15, 116, 116, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 113, 113,
	118, 118, 118, 120, 120, 117, 117, 112, 112, 20,
	59, 105, 54, 54, 291, 291, 292, 292, 97, 97,
	104, 104, 101, 102, 102, 103, 103, 26, 26, 26,
	22, 22, 23, 24, 27, 27, 27, 27, 27, 27,
	27, 27, 37, 38, 38, 38, 38, 38, 39, 39,
	39, 39, 39, 44, 44, 42, 42, 41, 41, 40,
	40, 43, 43, 166, 166, 165, 165, 168, 168, 45,
	45, 48, 48, 48, 48, 48, 49, 49, 49, 49,
	49, 49, 49, 49, 259, 259, 258, 47, 233, 233,
	50, 191, 191, 51, 51, 51, 51, 52, 60, 332,
	332, 332, 336, 336, 337, 337, 338, 338, 338, 338,
	338, 338, 338, 334, 334, 57, 57, 96, 64, 64,
	64, 64, 64, 64, 66, 68, 65, 65, 65, 67,
	67, 69, 69, 69, 69, 70, 70, 70, 70, 71,
	71, 146, 146, 284, 283, 283, 289, 289, 289, 144,
	144, 144, 144, 144, 145, 145, 145, 282, 282, 282,
	282, 290, 290, 290, 290, 290, 290, 288, 288, 72,
	72, 72, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 72, 84, 84, 91,
	91, 91, 91, 91, 91, 73, 78, 78, 78, 74,
	79, 80, 81, 81, 81, 75, 75, 83, 83, 83,
	82, 88, 88, 88, 88, 85, 85, 85, 86, 86,
	89, 89, 89, 76, 77, 90, 87, 87, 87, 46,
	333, 333, 335, 335, 55, 30, 30, 31, 31, 147,
	147, 148, 148, 212, 212, 212, 212, 149, 149, 119,
	119, 119, 211, 301, 301, 302, 302, 302, 302, 302,
	302, 303, 303, 303, 303, 303, 303, 303, 299, 299,
	300, 297, 297, 298, 298, 298, 298, 339, 339, 210,
	210, 152, 152, 306, 306, 306, 306, 304, 304, 304,
	304, 304, 307, 305, 308, 308, 308, 308, 308, 245,
	245, 245, 93, 32, 125, 125, 33, 29, 29, 195,
	195, 156, 156, 250, 250, 250, 137, 137, 114, 114,
	114, 14, 11, 11, 11, 11, 11, 11, 19, 19,
	17, 17, 196, 196, 197, 197, 56, 58, 63, 92,
	92, 92, 21, 21, 25, 25, 62, 341, 341, 132,
	132, 132, 132, 133, 133, 207, 207, 208, 208, 209,
	209, 209, 127, 126, 128, 128, 28, 28, 34, 36,
	35, 98, 98, 99, 99, 100, 134, 121, 121, 122,
	122, 123, 123, 124, 124, 342, 342, 53, 53, 95,
	140, 140, 204, 204, 204, 206, 206, 205, 205, 205,
	181, 181, 181, 94, 161, 161, 170, 170, 171, 171,
	256, 172, 172, 61, 61, 108, 108, 106, 106, 106,
	106, 106, 106, 107, 107, 109, 109, 109, 109, 109,
	109, 109, 111, 314, 314, 314, 317, 317, 313, 315,
	315, 316, 316, 340, 340, 182, 182, 182, 151, 150,
	150, 154, 154, 153, 155, 155, 249, 249, 249, 179,
	179, 179, 179, 198, 198, 199, 199, 200, 200, 201,
	201, 201, 202, 202, 203, 203, 178, 178, 229, 229,
	110, 110, 160, 160, 162, 162, 219, 219, 219, 220,
	220, 218, 218, 218, 218, 251, 251, 251, 251, 251,
	251, 251, 330, 330, 330, 331, 331, 248, 248, 252,
	252, 252, 252, 252, 252, 246, 246, 246, 246, 247,
	247, 257, 257, 185, 185, 185, 185, 183, 183, 184,
	184, 253, 253, 253, 253, 180, 180, 254, 254, 254,
	213, 213, 260, 260, 260, 278, 278, 159, 159, 159,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 262, 262, 262,
	262, 264, 264, 264, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 277, 277, 277, 277, 277, 265, 265, 272,
	272, 273, 273, 274, 275, 266, 266, 267, 267, 268,
	269, 276, 276, 276, 276, 280, 280, 270, 270, 270,
	270, 270, 271, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 193, 193, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	222, 223, 223, 223, 223, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 309, 309, 309, 309,
	309, 309, 309, 311, 311, 312, 312, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 318, 318, 319, 319,
	321, 321, 322, 322, 323, 324, 324, 324, 325, 326,
	326, 320, 320, 327, 327, 327, 328, 328, 329, 329,
	329, 329, 329, 235, 235, 235, 236, 236, 237, 243,
	243, 243, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 135, 135,
	135, 135, 135, 167, 167, 232, 232, 230, 230, 230,
	234, 234, 186, 186, 279, 279, 279, 279, 279, 279,
	279, 187, 187, 187, 194, 188, 188, 189, 189, 189,
	189, 189, 189, 226, 227, 190, 190, 190, 228, 228,
	238, 242, 242, 241, 240, 240, 239, 239, 216, 216,
	217, 217, 215, 214, 175, 175, 174, 174, 173, 173,
	343, 343, 244, 244, 176, 176, 177, 169, 169, 255,
	255, 255, 255, 163, 163, 142, 142, 164, 164, 138,
	138, 141, 141, 139, 139, 139, 139, 157, 157, 158,
	158, 136, 136, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 281, 281, 281, 231, 129, 129,
	129, 130, 130, 131, 131, 286, 286, 286, 287, 287,
	287, 287, 285, 285, 285, 285, 285, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296, 296,
	296, 296, 296, 296, 296, 296, 296, 296, 296,
}
var sqlR2 = [...]int{

	0, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 6, 6, 6, 5, 5, 4, 12, 4,
	12, 1, 3, 2, 5, 3, 6, 4, 6, 6,
	6, 4, 8, 3, 3, 3, 6, 4, 3, 2,
	1, 1, 0, 2, 0, 2, 0, 2, 0, 7,
	6, 1, 16, 16, 1, 1, 1, 3, 3, 0,
	2, 0, 2, 1, 3, 5, 0, 4, 6, 7,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 4, 6, 4, 6, 4, 6, 3,
	5, 3, 5, 1, 3, 1, 2, 2, 3, 2,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 5, 3, 0,
	3, 3, 0, 2, 3, 2, 3, 6, 6, 1,
	2, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 3, 2, 1, 1,
	1, 1, 1, 3, 4, 5, 3, 2, 6, 3,
	4, 3, 3, 3, 3, 1, 3, 3, 1, 2,
	2, 1, 0, 1, 1, 3, 1, 1, 1, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 3, 1,
	1, 1, 1, 1, 2, 3, 4, 4, 4, 4,
	2, 4, 4, 4, 4, 4, 4, 2, 3, 3,
	2, 4, 5, 4, 5, 2, 3, 3, 4, 2,
	4, 3, 3, 4, 4, 2, 5, 5, 6, 2,
	2, 0, 2, 0, 3, 7, 10, 6, 9, 1,
	0, 1, 3, 1, 1, 1, 1, 8, 0, 1,
	1, 0, 3, 2, 0, 3, 1, 2, 2, 3,
	6, 2, 1, 1, 2, 4, 2, 5, 7, 8,
	5, 3, 1, 4, 6, 5, 10, 1, 1, 4,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 1,
	2, 1, 4, 4, 3, 0, 6, 11, 14, 1,
	0, 1, 3, 3, 3, 5, 2, 0, 1, 1,
	0, 6, 6, 8, 8, 10, 8, 10, 6, 8,
	6, 8, 1, 0, 2, 0, 2, 3, 2, 1,
	1, 1, 3, 3, 2, 2, 2, 1, 0, 1,
	3, 2, 0, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 2, 3, 2, 2, 8, 11, 2, 5,
	9, 1, 0, 3, 1, 2, 1, 3, 0, 3,
	0, 3, 0, 3, 0, 1, 0, 6, 7, 6,
	1, 3, 1, 4, 2, 8, 5, 4, 3, 0,
	2, 2, 0, 8, 2, 0, 1, 3, 1, 1,
	3, 5, 5, 1, 1, 3, 3, 1, 2, 3,
	2, 3, 4, 1, 1, 8, 8, 1, 1, 4,
	4, 4, 2, 2, 2, 3, 1, 3, 6, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 1,
	0, 1, 0, 3, 1, 3, 2, 4, 5, 2,
	2, 1, 1, 2, 5, 2, 3, 1, 1, 1,
	3, 0, 1, 1, 1, 1, 3, 0, 2, 0,
	2, 3, 3, 0, 1, 3, 3, 5, 1, 1,
	3, 2, 4, 4, 0, 8, 4, 6, 3, 1,
	5, 5, 0, 2, 3, 1, 3, 2, 0, 3,
	4, 5, 4, 5, 4, 5, 2, 4, 1, 1,
	0, 5, 0, 2, 2, 2, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 0, 2, 5, 2, 1, 1, 2, 3, 0,
	1, 1, 1, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	1, 1, 1, 5, 2, 1, 1, 1, 1, 4,
	1, 2, 2, 1, 1, 1, 0, 1, 1, 4,
	1, 4, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 3, 4, 4, 5, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 2, 1, 3,
	1, 1, 2, 2, 1, 1, 3, 5, 6, 8,
	6, 6, 4, 4, 1, 1, 1, 5, 1, 3,
	1, 3, 1, 3, 1, 1, 1, 1, 6, 6,
	4, 4, 4, 4, 4, 6, 5, 5, 5, 4,
	8, 6, 6, 4, 4, 4, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 2, 2, 0, 1, 4, 2, 2,
	2, 2, 2, 4, 3, 5, 4, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 3, 1, 3, 3, 3, 2,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 0, 2, 2, 3, 2, 1, 1, 3,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 2, 2, 1, 1, 1, 2, 1, 2,
	1, 0, 1, 1, 1, 3, 3, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 1, 3, 1,
	2, 3, 1, 1, 1, 2, 2, 1, 3, 3,
	0, 1, 2, 1, 1, 1, 1, 6, 2, 1,
	5, 1, 1, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
>>>>>>> Fix build errors
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
<<<<<<< HEAD
	1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, -3, -4, -20, -22, -26, -27, -50,
	-36, -37, -38, -49, -44, -51, -45, -52, -53, -54,
	-46, -58, -57, -59, -62, -60, -55, -56, -63, -71,
	-91, -92, -93, -94, -5, -6, -7, -8, 23, 34,
	-23, -24, 47, 67, -28, -29, -30, -31, 69, -32,
	-33, -34, -35, 90, -312, 94, -39, -40, -41, -43,
	-42, 98, 105, 107, 126, 132, 135, 215, 221, 242,
	244, 246, 253, -101, -103, 240, 241, -64, -65, -66,
	-67, -95, 264, -72, -73, -74, -75, -76, -77, -78,
	-79, -80, -81, -82, -83, -84, -85, -86, -87, -88,
	-89, 267, -21, -25, -61, 305, -9, -10, -13, -12,
	-11, -16, -18, -15, -17, -19, -14, -310, -104, -102,
	356, 314, 35, 276, 61, 101, 248, 330, 337, -107,
	-105, -106, -108, 257, 322, 286, 360, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 2, 286, 325, 83, 142, -328, 2, -160, 286,
	83, -135, -126, 349, 4, -289, -291, 20, 21, 23,
	33, 34, 35, 40, 44, 47, 48, 55, 60, 61,
	62, 64, 66, 67, 68, 71, 72, 73, 81, 82,
	84, 86, 90, 92, 94, 97, 98, 100, 105, 106,
	107, 113, 114, 119, 121, 125, 127, 132, 133, 134,
	135, 136, 143, 146, 148, 141, 158, 159, 160, 162,
	163, 164, 167, 166, 171, 174, 177, 179, 180, 181,
	184, 182, 186, 187, 189, 188, 194, 196, 197, 199,
	202, 205, 208, 211, 212, 213, 214, 215, 217, 219,
	221, 223, 224, 225, 226, 227, 228, 230, 231, 233,
	234, 235, 236, 237, 240, 238, 239, 241, 242, 243,
	244, 246, 248, 249, 251, 265, 266, 277, 253, 254,
	255, 256, 260, 258, 261, 262, 264, 267, 269, 272,
	275, 276, 278, 281, 282, 279, 274, 285, 287, 288,
	289, 290, 291, 292, 293, 300, 301, 305, 306, 307,
	308, 311, 312, 313, 314, 316, 319, 320, 321, 326,
	331, 332, 333, 334, 335, 28, 36, 37, 38, 39,
	41, 42, 45, 46, 51, 52, 53, 56, 85, 87,
	88, 104, 108, 109, 115, 116, 117, 128, 130, 137,
	138, 147, 149, 150, 151, 152, 153, 155, 169, 183,
	193, 195, 206, 210, 218, 220, 229, 250, 259, 270,
	271, 280, 283, 295, 296, 297, 302, 303, 318, 322,
	323, 359, 359, 2, 159, 226, -134, -126, 83, 359,
	359, 359, 359, 286, 2, 315, 325, -191, 83, 125,
	224, 310, 359, 359, -126, 221, 22, 2, 92, 146,
	313, 312, 22, 217, 258, 288, 290, 2, 359, 359,
	359, 359, 359, 2, 325, 286, 142, 83, 315, -126,
	2, -48, 2, 356, -47, -4, -27, -38, -49, -44,
	-45, -60, -71, -36, -52, -93, -94, -332, 2, 22,
	-333, -334, 69, 98, 126, 257, 146, 92, 312, -281,
	4, -289, -291, -290, -292, 58, 70, 124, 145, 139,
	157, 161, 170, 172, 185, 207, 209, 247, 268, 22,
	24, 25, 26, 27, 29, 30, 31, 32, 43, 49,
	50, 54, 57, 59, 65, 69, 74, 75, 77, 76,
	78, 79, 80, 89, 91, 93, 95, 96, 99, 101,
	103, 110, 111, 112, 120, 122, 123, 126, 129, 131,
	140, 142, 144, 154, 156, 165, 168, 173, 175, 176,
	190, 191, 192, 198, 200, 201, 203, 204, 216, 222,
	232, 245, 257, 263, 273, 284, 286, 294, 298, 299,
	304, 309, 310, 315, 317, 324, 325, 327, 328, 329,
	330, 286, 2, 159, 2, -126, 2, -328, 2, 159,
	2, -332, 2, -126, 2, -130, 2, 253, -126, -90,
	261, 2, 4, 22, 83, 184, 263, 295, 359, 359,
	359, 174, 55, 250, 261, -69, 301, -68, 295, -280,
	-70, 2, -161, 184, -126, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 2, -90, 261, 34, 55, 22, 60, 84,
	127, 142, 143, 163, 65, 66, 225, 174, 160, 300,
	164, 262, 287, 301, 69, 316, 291, 106, 359, 359,
	359, -336, 2, 286, -102, -104, -103, -149, -150, 309,
	154, 103, 204, -101, -103, 2, -310, -285, 2, -278,
	-241, 9, 304, 110, 200, -284, 8, 348, -277, -283,
	5, 7, 347, 4, -289, -291, -290, -337, 2, 301,
	301, 2, -337, 2, -337, 2, -129, 2, 301, 298,
	-313, 230, -309, -126, -313, 359, 359, 361, 359, -146,
	-147, 2, 22, 95, -173, 2, 356, -247, 2, 354,
	-249, -134, -103, -248, 356, 201, -3, 2, -249, 137,
	-134, 2, -249, 137, -134, 2, -126, 2, -137, 137,
	-134, 298, 361, -160, -153, -126, -211, -210, 358, -217,
	2, -219, 347, 348, 342, 190, 336, -231, -221, -234,
	104, 250, 356, -134, -220, 362, 9, -307, -103, 29,
	-232, -233, 49, -126, 7, 8, 5, 6, -132, -258,
	-227, -267, 304, 110, 192, -305, -306, 4, -289, -282,
	-259, -269, -263, -266, 155, 58, 75, 76, 79, 77,
	80, 263, 315, 50, 28, 108, 109, 210, 218, 283,
	302, 303, 137, 193, 138, 56, 128, 169, 97, 37,
	39, 41, 42, 51, 52, 85, 87, 88, 115, 116,
	117, 147, 149, 150, 151, 152, 153, 195, 229, 270,
	280, 296, 297, 323, -290, -270, -271, -264, -265, -272,
	-217, 2, 123, 356, -170, -171, -210, -211, 2, -161,
	137, -126, 2, -161, 2, 142, -126, 137, 2, -126,
	22, 123, 2, 156, 2, 156, 2, -250, 2, -249,
	-162, 137, 2, -161, -162, 137, 2, -138, 137, 2,
	-137, -126, 137, 2, -153, 137, 2, -187, 356, -255,
	2, -254, -283, 322, 359, 359, 359, 359, 359, 200,
	361, -161, -217, -229, 356, 123, -217, 200, -126, -90,
	335, 2, 2, 265, 2, 356, -69, 53, 301, -204,
	2, -205, -123, -124, -125, 158, 223, 228, 335, 298,
	341, 123, -285, -142, 89, -164, 358, -90, 2, -287,
	2, -284, 9, 265, 2, 225, 262, 55, 123, 2,
	2, -329, 2, 200, 123, 2, 123, 2, 123, 2,
	123, 2, 123, 2, 2, 225, 262, 2, 120, 2,
	300, 2, 2, 123, 2, 158, 223, 277, 2, 286,
	325, 2, 123, 123, -176, -249, -149, -150, -175, -194,
	-195, 173, 112, 198, -178, 22, 95, -178, -178, 44,
	357, 357, 8, 7, 7, -203, -204, -203, 298, -130,
	361, -313, -154, 356, -173, -165, -251, -217, 349, -165,
	-172, -240, -217, 89, 70, -181, 161, 185, 124, 170,
	247, 145, 7, -48, -214, 362, 356, 349, -244, 337,
	-103, -248, 356, -247, -134, 356, -113, 238, -112, 21,
	23, 98, 320, 104, 274, 292, 254, 238, 104, 238,
	274, 292, 254, 238, 104, 362, -287, -135, 361, -281,
	349, 10, 11, 57, 33, 347, 348, 349, 350, 118,
	351, 352, 345, 346, 344, 339, 340, 341, 63, 178,
	252, 13, 14, 15, 26, 203, 172, 336, 139, 268,
	342, 16, 17, 18, 157, 36, 140, -131, -139, -217,
	-217, -217, -217, -217, 209, -169, -212, 354, -103, 356,
	356, -103, -217, -163, 356, 7, -103, -226, 354, -235,
	-217, -170, 356, 5, 356, 5, -314, 331, 120, 356,
	356, 356, 356, 356, 356, 356, 356, 356, 356, 356,
	356, 356, 356, 356, 356, 356, 356, 220, -276, 326,
	-276, -276, -260, 356, -260, -261, 356, -260, 332, 337,
	356, 278, 357, -159, -134, -171, 356, -148, 190, -122,
	-311, 330, -148, 356, -127, 137, 2, -126, -311, 190,
	-250, -136, -134, -136, 264, -126, 30, -115, 361, 48,
	243, 104, -115, 104, -115, 361, 104, 104, 104, -163,
	-217, 357, 361, -328, -334, 69, 356, 30, -228, -256,
	-257, -259, -268, -262, -266, -267, 40, 46, 45, 293,
	183, 259, 271, 318, 38, 199, 148, 147, 149, 150,
	151, 152, 153, 270, 37, 229, 116, 117, 115, 97,
	88, 87, 195, 42, 41, -270, -271, -264, -265, 85,
	296, 297, 155, 39, 52, 51, 323, 280, -288, -287,
	-328, -68, -280, -163, 30, -204, 2, 361, -205, 171,
	-141, 177, 189, 133, 201, 333, -286, 5, 4, -227,
	-241, 89, 174, -267, -279, 89, -285, -279, 89, 73,
	358, -281, -161, 22, 266, 2, -280, -331, 120, -328,
	-280, -280, -280, -280, -280, 261, -48, 120, -126, 171,
	-280, 2, -280, 2, 286, 142, 286, -115, 361, -175,
	-195, -194, -196, -217, 22, -199, 114, 186, -217, -219,
	-102, -102, -102, -151, -245, -217, 222, 142, -130, -309,
	30, -153, -156, 361, 123, 30, 4, -156, 361, 357,
	161, 161, -247, -181, 161, -179, 207, -179, -179, -326,
	356, 355, -244, -281, 354, 363, -163, 2, -243, -242,
	30, -126, 205, 357, -134, 361, 298, -192, 65, 59,
	-207, 137, 59, -293, -126, 65, -294, 54, 310, 222,
	122, -192, 65, -192, 65, 65, -249, 33, -60, 123,
	298, -249, 298, 33, -60, 123, 298, -137, -281, -253,
	338, -126, -274, -256, -273, 234, 235, 233, 237, 236,
	-256, -281, 295, -217, -217, -217, -217, -217, -217, -217,
	-217, -217, -217, -217, -217, -217, -217, -217, -217, -217,
	-217, -217, -217, -217, -217, 172, 139, 268, 36, 140,
	-217, 298, -217, -217, -217, -217, 182, 190, 192, 304,
	110, 311, 95, 196, -339, 284, 32, -224, -103, 356,
	-239, 27, 273, 22, -231, 250, 356, -212, -217, -213,
	-163, 357, 357, 361, -163, -230, 355, -226, -238, -237,
	327, 357, -163, 324, 22, 95, 349, 2, 7, -188,
	334, 181, 86, 134, 180, -189, 256, -315, 113, 129,
	356, 357, 2, 357, 2, 357, 2, -217, -217, -182,
	2, -275, -163, 4, 334, 181, 86, 134, 180, 256,
	-182, 2, -183, 2, -217, -163, -184, -218, -219, 347,
	348, 342, 356, 250, -185, 2, -217, -163, -217, 43,
	168, 299, -186, -217, 123, -163, -217, -217, -217, -163,
	-163, 2, -163, 2, 356, 7, 7, 295, 295, 7,
	123, 357, 361, -143, -153, -144, -126, -208, -207, -295,
	-296, -293, 142, 310, 111, 30, 104, 214, 30, 200,
	190, -118, 289, 104, -209, 328, -200, -60, 356, 89,
	30, -200, -166, -167, -252, -168, -134, 356, -126, -161,
	-162, -162, -137, -138, -126, -153, 357, 361, -48, -254,
	298, 317, -144, -47, 357, 361, -155, 29, 354, -188,
	356, -253, 361, 123, 357, 301, -205, -140, 228, 272,
	239, 260, 361, -281, -330, -126, 261, -48, -134, -137,
	-134, -249, -197, -277, 356, 348, -198, 250, 251, 361,
	-111, 31, 93, 162, -134, 356, 357, -209, -251, -158,
	2, -247, -281, -209, -240, -247, -247, -180, 317, 200,
	161, -247, -242, 357, -327, 7, -244, -243, 7, -216,
	-215, 121, 188, 357, -126, 356, -244, 357, -112, -134,
	-126, -126, 190, -207, 137, -117, 190, -256, -126, 356,
	356, 162, 162, -126, -126, 137, -126, 137, -126, -126,
	-113, 238, -60, 356, -134, 238, -126, -60, 356, -126,
	238, -96, 136, 196, 335, -217, -217, 298, -339, 284,
	-224, -217, 182, 192, 304, 110, 311, 95, 196, 123,
	356, -218, -218, -163, -221, 356, -163, 355, 365, 357,
	-217, 355, 355, 361, -236, -237, 99, -217, -150, 361,
	-149, -217, -163, -163, 357, 357, 298, 298, 298, 298,
	356, -320, 208, 356, 356, -217, 30, 361, 357, 123,
	357, 357, -190, 216, 357, 10, 11, 347, 348, 349,
	350, 118, 351, 352, 345, 346, 344, 339, 340, 341,
	63, 178, 252, 13, 14, 15, 157, 140, -218, -218,
	-218, -163, 356, 357, -222, -223, 123, 120, 30, -186,
	-186, -186, 357, 123, -163, 361, 361, 361, 357, 357,
	357, 7, 357, 361, 357, 335, 335, 357, 278, 123,
	-134, 357, 357, 361, -127, 142, -127, -60, -161, 5,
	-60, -134, 104, -119, 100, -338, 341, -126, -177, 245,
	-217, -177, -202, 200, -159, 322, -126, -177, -157, 361,
	123, 341, -159, -115, -115, -115, -217, -330, -287, 357,
	-256, 354, 355, 7, 7, -99, 330, -287, -330, -123,
	308, 62, 228, -285, 361, -198, -217, -245, -134, 362,
	-47, -174, 129, -253, 361, -174, -180, 356, -217, -247,
	355, 357, 361, -243, 355, 361, 364, 341, -244, 356,
	-153, -242, 298, 298, 104, 190, 319, -297, -294, -217,
	-152, -246, -126, -308, 356, -305, -306, -132, 356, 356,
	-110, 98, 264, -193, 104, -115, 104, -115, 298, -192,
	65, -163, 298, -163, 298, -99, 123, 285, -217, -217,
	-218, -218, 123, 356, -217, -228, 26, 26, 357, -163,
	357, 361, -213, -217, 357, -226, 101, -217, 294, 357,
	324, -150, -150, -150, 5, 181, 134, 180, -189, 180,
	-189, -189, 7, -321, -126, 356, 328, -149, 357, -274,
	-256, -217, -222, -217, -274, -256, -218, -218, -218, -218,
	-218, -218, -218, -218, -218, -218, -218, -218, -218, -218,
	-218, -218, -218, -218, -218, 95, 190, 196, -218, 361,
	-163, 357, -223, -222, -217, -217, -256, 357, 357, 357,
	-163, -217, -217, -217, 357, 7, 278, -145, 141, -208,
	356, -127, 356, 356, -148, 356, -126, -120, 167, -338,
	-284, -311, -165, 191, -177, 64, 357, -209, -167, -158,
	-240, 357, -100, 71, -100, 7, 355, 357, -98, 202,
	-97, -126, 5, -126, 201, 357, -111, -281, 357, -225,
	131, 44, -247, -225, -153, -214, 7, -215, -281, 354,
	-243, -153, 357, -126, -126, -207, 104, -298, 65, -299,
	57, 111, 69, 190, 192, 310, 222, 54, 89, 232,
	357, 357, 361, -133, -170, 57, -133, -217, 356, -152,
	-153, 190, 89, 190, 89, 82, 306, -126, -126, -134,
	-126, -126, 357, -134, 357, -126, -288, 295, 26, 26,
	-217, -228, 357, -217, -217, 357, -217, 355, -217, 5,
	-217, 357, 357, 357, 357, -322, -126, -217, 357, 357,
	357, -223, 123, 95, 196, 356, -217, 357, 357, 361,
	357, 357, 357, 140, -152, 356, -153, -143, 30, -152,
	200, -121, 166, -338, -284, -118, -201, 356, 200, -60,
	-177, 341, 82, 82, 355, 361, 356, 341, 341, -111,
	-317, 329, -217, -163, -317, 357, -244, 7, 357, -207,
	-126, -281, -126, 111, 137, 192, 162, 356, -218, -134,
	-206, -335, 68, 282, -246, -111, -281, -111, 357, -163,
	357, 357, 192, 192, -217, -256, -115, -115, 298, 298,
	298, 298, -220, -132, -126, -217, -217, 357, 357, -150,
	-316, 213, 357, -218, 123, 356, -228, 357, -217, 211,
	357, -152, 357, 357, -60, 357, -134, -338, -284, -119,
	96, -153, 65, -173, -103, 356, 356, 356, -97, -98,
	-287, -287, -318, -319, -126, -243, 355, -299, -127, 190,
	-217, -128, 356, -145, 356, -133, -150, 232, -114, 57,
	-126, -126, 356, 356, 356, 357, -150, 44, -218, -228,
	357, 357, -134, -206, 357, -145, -206, 356, -284, -120,
	312, 191, 357, -126, -288, -288, 357, 361, 30, 104,
	357, -302, 179, -126, -153, -111, 357, -134, -109, 317,
	-281, -163, -163, -163, -323, 227, 251, -163, 357, 356,
	-145, -206, -145, -152, -121, 264, -209, 357, 357, -319,
	-321, 111, -300, -303, -301, 200, 124, 212, 269, 357,
	357, -148, -217, 357, 357, -150, 357, -324, -325, 36,
	307, 73, -217, -324, -153, -145, 357, -166, -99, -99,
	-126, -301, 200, -303, 200, 312, 92, -302, 357, -325,
	219, 119, 250, 219, 119, 357, -206, -209, -304, 187,
	243, 48, 264, -304, -300, 26, -116, 48, 243, -145,
	20, 192, 89, -325,
}
var sqlDef = [...]int{

	-2, -2, 1, 3, 4, 5, 7, 8, 9, 10,
	12, 14, 16, 17, 19, 21, 23, 24, 26, 28,
	30, 32, 34, 36, 38, 40, 41, 43, 45, 46,
	47, 48, 50, 52, 55, 57, 59, 61, 0, 0,
	143, 145, 0, 0, 152, 154, 156, 158, -2, 161,
	163, 165, 166, 0, 0, 0, 176, 178, 180, 182,
	184, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, -2, 0, 0, 271, 273, 275,
	277, 278, 0, 329, 331, 333, 335, 337, 339, 341,
	343, 345, 347, 349, 351, 353, 355, 357, 358, 360,
	362, 0, 548, 550, 552, -2, 64, 65, 66, 67,
	68, 74, 75, 76, 77, 70, 72, 664, -2, 675,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 641,
	643, 645, 647, -2, 0, 0, -2, 6, 11, 13,
	15, 18, 20, 22, 25, 27, 29, 31, 33, 35,
	37, 39, 42, 44, 49, 51, 53, 56, 58, 60,
	62, 63, 0, 0, 0, 0, 0, 118, 250, 0,
	1226, 1153, 1159, 1160, 1184, 1185, 1186, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
	1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 144, 146, 147, 0, 0, 0, 1155, 1226, 153,
	155, 157, 159, 0, 167, 0, 0, 0, 0, 587,
	588, 515, 162, 164, 241, 1287, 243, 245, 0, 0,
	0, 0, 170, 171, 172, 173, 174, 175, 177, 179,
	181, 183, 185, 186, 0, 0, 0, 0, 0, 240,
	238, 208, 209, 0, 222, 223, 224, 225, 226, 228,
	229, 212, 213, 214, 216, 218, 220, 0, 247, 253,
	254, 255, 257, 258, 259, 260, 261, 262, 263, 430,
	1198, 1199, 1200, 1201, 1202, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 0, 124, 0, 436, 236, 234, 0, 120, 0,
	545, 0, 249, 546, 547, 542, 543, 1315, 571, 266,
	0, 268, 368, 369, 370, 371, 372, 0, 272, 274,
	276, -2, -2, 1404, -2, 284, -2, 294, 1410, 0,
	297, 298, 303, -2, 204, 330, 332, 334, 336, 338,
	340, 342, 344, 346, 348, 350, 352, 354, 356, 359,
	361, 363, 364, 365, 0, 0, 0, 369, 0, -2,
	-2, 0, 0, 0, 0, 0, -2, 0, -2, 0,
	0, -2, -2, 0, 0, -2, 0, 0, 549, 551,
	553, 0, 505, 666, -2, 639, 640, -2, 0, 670,
	670, 670, 0, 0, 640, 638, 0, 269, 270, 306,
	307, 308, 317, 318, 319, 320, 501, 0, 503, 327,
	328, 1180, 0, 1194, 1195, 1196, 1197, 573, 555, 564,
	573, 557, 558, 559, 560, 561, 562, 563, 566, 0,
	656, 1294, 659, 1166, 657, 642, 644, 0, 646, 0,
	0, 650, 672, 671, 703, 704, 0, 654, 655, 665,
	719, 757, 734, 725, 0, 0, 2, 69, 0, 1386,
	757, 71, 0, 1386, 757, 73, 0, 78, 0, 1386,
	1158, 0, 0, 251, 252, 1163, 1161, 1162, 0, 148,
	149, 865, 0, 0, 0, 0, 0, 0, 957, 959,
	1378, 1404, 0, 961, 962, 0, 964, 966, 967, 0,
	970, 971, 1123, 1155, 1169, 1170, 1171, 1172, 0, 0,
	1175, 0, 1177, 1178, 1179, 1023, 981, -2, -2, 1167,
	793, 794, 795, 796, -2, 1418, 985, 988, 991, 994,
	995, 996, 997, 0, 1362, 1379, 1380, 1400, 1401, 1409,
	1413, 1414, 1386, 1397, 1387, 1374, 1384, 1395, 1232, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1193, 827, 828, 833, 834, 836,
	150, 151, 0, 0, 1156, 1132, 1130, 1131, 160, 484,
	1386, -2, 507, 484, 511, -2, 663, 1386, 586, 242,
	244, 0, 169, 0, 601, 0, 603, 0, 618, 763,
	110, 1386, 189, 202, 110, 1386, 192, 110, 1386, 195,
	1151, 196, 1386, 198, 199, 1386, 201, 237, 0, 0,
	-2, 230, 232, -2, 227, 215, 217, 219, 221, 0,
	0, 0, 435, 0, 0, 0, 544, 0, 570, 267,
	373, 374, 279, 0, 281, 0, 283, 1373, -2, 286,
	287, 574, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 205, 0, 366, 367, 375,
	376, 125, 126, 0, 379, 400, 412, 0, 0, 383,
	385, 434, 387, 0, 0, 389, 0, 391, 0, 393,
	0, 395, 0, 397, 399, 401, 413, 403, 665, 405,
	0, 407, 411, 0, 416, 0, 418, 419, 420, 0,
	0, 426, 0, 0, 110, 761, -2, 0, 634, 684,
	685, 0, 0, 0, 0, 668, 669, 0, 0, 0,
	630, 631, 502, 1182, 1181, 554, 572, 556, 0, 568,
	0, 658, 0, 0, 705, 708, 1143, 1147, 1148, 708,
	0, 1140, 1138, 1139, 0, 0, 0, 0, 754, 754,
	754, 752, 728, 0, 734, 0, 0, 758, 746, 0,
	-2, 725, 0, 0, 759, 0, 79, 539, 89, 0,
	539, 539, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 748, 1154, 0, 1128,
	1129, 0, 0, 0, 0, 1058, 1059, 1060, 1061, 1062,
	1063, 1066, 1067, 1064, 1065, 1068, 1069, 1070, 0, 0,
	0, 1071, 1072, 1073, 0, 0, 1075, 0, 1077, 0,
	0, 0, 0, 0, 0, 1137, 0, 0, 1074, 870,
	871, 872, 894, 895, 0, 958, 1134, 1127, 960, 0,
	0, -2, 1079, 0, 0, 963, 968, 969, 0, 0,
	1122, -2, 0, 1174, 0, 862, 1025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1102, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 812, 830, 841,
	838, 837, 814, 0, 813, 811, 0, 815, 0, 0,
	0, 140, 0, 0, 1149, 1133, 442, 0, 0, 506,
	0, 662, 0, 0, 0, 1386, 514, 1187, 590, 0,
	767, 0, 604, 0, 0, 764, 0, 187, 0, 108,
	109, 0, 190, 0, 193, 0, 0, 0, 0, 0,
	1079, 665, 0, 0, 256, 0, 0, 665, 0, 1081,
	775, 776, 777, 778, 779, 862, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 800, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 824, 0,
	799, 799, 799, 816, 817, 825, 826, 831, 832, 843,
	844, 846, 848, 842, 842, 842, 839, 840, 748, 127,
	0, 280, 0, 0, 0, 288, 289, 0, 576, 0,
	580, 314, 315, 316, 582, 583, 295, 321, 322, 323,
	324, 325, 326, 0, 290, 292, 304, 291, 293, 296,
	0, 206, 377, 378, 380, 381, 382, 386, 0, 431,
	388, 390, 392, 394, 396, 404, 408, 665, 414, 417,
	421, 422, 423, 424, 0, 0, 0, 504, 0, 637,
	682, 683, 686, 690, 691, 694, 697, 698, 688, 865,
	651, 652, 653, 676, 677, 526, 0, 0, 567, 660,
	0, 0, 767, 0, 0, 0, 1146, 767, 0, 1142,
	0, 0, 0, 0, 0, 749, 753, 750, 751, 0,
	0, 734, 746, 716, 0, 0, 0, 723, 724, 745,
	0, 744, 733, -2, 0, 0, 0, 0, 0, 538,
	91, 1386, 0, 112, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 83, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 1157, 130,
	0, 1164, 866, 771, 772, 818, 819, 820, 821, 822,
	867, 868, 0, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, -2, -2, -2, 886, 887, 888, -2,
	-2, -2, 892, 893, -2, 1076, 1078, 0, 1137, 0,
	-2, 0, -2, -2, -2, -2, 906, 0, 908, 911,
	913, 915, 0, 0, 0, 0, 1136, 925, 1114, 0,
	0, 1055, 1056, 1057, 910, 0, 0, 1135, 1126, 0,
	0, -2, 965, 0, 0, 0, 1085, 1086, 1121, 1117,
	0, 972, 675, 0, 0, 0, 0, 979, 0, 1183,
	849, 850, 851, 852, 853, 854, 863, 1033, 0, 0,
	0, 986, 987, 989, 990, 992, 993, 0, 0, 0,
	1001, 0, 1089, -2, -2, -2, -2, -2, -2, -2,
	0, 1003, 0, 1005, 1079, 1099, 0, 0, 928, 0,
	0, 0, 0, 1404, 0, 1008, 1079, 1107, 0, 0,
	0, 0, 0, 1079, 0, 1113, 0, 0, 0, 0,
	0, 1019, 0, 1021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 441, 1163, 443, 445, 446,
	447, 448, 1188, 0, 1188, 0, 0, 0, 0, 0,
	0, 592, 598, 0, 616, 0, 616, 606, 0, 0,
	0, 616, 620, 621, 623, 624, 0, 0, 765, 203,
	110, 110, 1152, 110, 197, 200, 239, 0, 210, 231,
	0, 0, 0, 233, 235, 0, 768, 770, 0, 780,
	0, 139, 0, 0, 282, 0, 575, 581, 0, 311,
	0, 313, 0, 207, 433, 264, 406, 409, 427, 428,
	429, 762, 0, 692, 0, 0, 689, 695, 696, 0,
	679, 524, 525, 0, 0, 665, 1165, 700, 1144, 748,
	707, 709, 1145, 700, 1141, 736, 0, 738, 0, 0,
	0, 740, 0, 729, 0, 731, 746, 721, 0, 0,
	714, 0, 713, 734, 742, 0, 0, 760, 90, 528,
	0, 0, 0, 93, 1386, 101, 0, 456, 0, 0,
	0, 0, 0, 541, 102, 1386, 110, 1386, 110, 103,
	80, 539, 81, 0, 534, 0, 527, 82, 0, 536,
	0, 139, 0, 0, 0, -2, -2, 0, 0, 0,
	926, -2, 907, 909, 912, 914, 916, 0, 0, 0,
	0, 0, 0, 0, 927, 0, 0, 1124, 1127, -2,
	1080, 1083, 1084, 0, 0, 1118, 0, 0, 0, 0,
	674, 675, 675, 675, 978, 0, 0, 0, 0, 0,
	0, 980, 0, 0, 0, 0, 0, 0, 1000, 0,
	1002, 1004, 0, 0, 1006, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 931, 932,
	933, 0, 0, 1007, 1105, 1106, 0, 0, 0, 0,
	0, 0, 1013, 0, 1112, 0, 0, 0, 1017, 1018,
	1020, 0, 797, 0, 823, 845, 847, 835, 141, 0,
	1150, 450, 483, 0, 0, 1188, 0, 439, 484, 508,
	510, 0, 0, 594, 598, 0, 597, 663, 168, 0,
	766, 599, 616, 0, 0, 608, 605, 602, 767, 0,
	0, 0, 0, 188, 191, 194, 1080, 246, 0, 0,
	1082, 0, 773, 0, 0, 119, 0, 128, 248, 285,
	309, 310, 312, 305, 0, 0, 0, 678, 526, 0,
	0, 702, 0, 706, 0, 702, 737, 0, 756, 739,
	719, 730, 0, 727, 717, 0, 718, 0, 746, 0,
	0, 726, 0, 0, 0, 0, 111, 454, 473, 0,
	0, 517, 523, 523, 0, 982, 983, 0, 0, 0,
	95, 0, 0, 0, 0, 99, 0, 105, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 869, -2,
	0, 0, 0, 0, -2, 0, 0, 0, 1115, 0,
	1050, 0, 0, 1126, -2, 1087, 1116, 1120, 0, 973,
	0, 0, 0, 0, 1176, 855, 856, 857, 858, 859,
	860, 861, 0, 1031, 1032, 1036, 0, 0, 984, 0,
	0, 1088, 1098, 1100, 929, 930, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, -2, -2, -2, 947,
	948, 949, -2, -2, -2, 0, 0, 0, 1101, 0,
	0, 1053, 1103, 1104, 1109, 1110, 0, 1010, 1011, 1012,
	1111, 0, 0, 0, 829, 0, 142, 437, 0, 444,
	0, 0, 0, 442, 0, 0, 0, 596, 598, 0,
	589, 590, 614, 615, 600, 613, 0, 616, 622, 619,
	625, 0, 0, 121, 0, 0, 774, 781, 137, 1277,
	135, 132, 134, 265, 687, 693, 680, 526, 661, 1027,
	0, 0, 710, 1027, 0, 734, 732, 715, 711, 0,
	722, 0, 743, 530, 532, 92, 0, 455, 0, 458,
	0, 0, 0, 0, 464, 465, 0, 0, 0, 0,
	475, 482, 0, 526, 1168, 0, 526, 0, 0, 0,
	0, 0, 107, 0, 0, 540, 0, 110, 110, 529,
	0, 0, 0, 535, 0, 537, 129, 0, 0, 0,
	-2, 0, 919, -2, -2, 1049, 1080, 1125, 1119, 1173,
	675, 974, 976, 977, 864, 1038, 1035, 0, 1022, 998,
	999, 1097, 0, 0, 0, 0, 1080, 1052, 1009, 0,
	1015, 1016, 798, 0, 0, 0, 0, 0, 0, 0,
	0, 584, 598, 0, 591, 592, 0, 0, 0, 607,
	617, 0, 0, 0, 769, 0, 0, 0, 0, 681,
	648, 0, 701, 699, 649, 755, 746, 0, 741, 94,
	0, 459, 460, 1188, 0, 463, 466, 0, 468, 1190,
	450, 0, 479, 480, 518, 519, 522, 520, 523, 675,
	477, 0, 96, 97, 106, 114, 98, 104, 0, 0,
	0, 0, 747, 0, 0, -2, -2, 920, 1051, 0,
	675, 0, 1024, -2, 0, 0, 0, 1054, 0, 0,
	482, 0, 472, 450, 440, 482, 0, 0, 593, 594,
	0, 0, 0, 626, 627, 0, 0, 0, 136, 0,
	131, 133, 1026, 1028, 0, 720, 712, 457, 461, 0,
	0, 488, 0, 476, 0, 526, 0, 0, 116, 0,
	531, 533, 0, 0, 0, 975, 1041, 0, -2, 0,
	955, 1014, 0, 450, 482, 438, 450, 0, 595, 596,
	0, 610, 767, 612, 0, 0, 138, 0, 0, 0,
	467, 493, 0, 0, 0, 521, 973, 484, 100, 0,
	113, 0, 0, 675, 0, 0, 0, 1037, 956, 0,
	470, 450, 512, 0, 585, 0, 611, 139, 139, 1029,
	1030, 0, 469, 489, 490, 0, 485, 486, 487, 1189,
	481, 488, 115, 86, 88, 0, 1034, 1039, 1042, -2,
	1346, 1223, 0, 1040, 0, 471, 482, 767, 122, 123,
	462, 491, 0, 492, 0, 0, 0, 493, 0, 0,
	1044, 1045, 1046, 1047, 1048, 453, 450, 609, 494, 0,
	497, 498, 0, 495, 478, 0, 449, 451, 452, 513,
	496, 499, 500, 1043,
=======
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, -3, -4, -20, -22, -26, -27, -36,
	-51, -37, -38, -39, -50, -45, -52, -46, -53, -54,
	-55, -47, -59, -58, -60, -63, -61, -56, -57, -64,
	-72, -92, -93, -94, -95, -5, -6, -7, -8, 34,
	-23, -24, 68, -28, -29, -30, -31, -32, -33, -34,
	-35, 47, 91, -316, 95, -40, -41, -42, -44, -43,
	106, 108, 127, 133, 136, 216, 222, 243, 245, 247,
	254, -106, -108, 241, 242, -65, -66, -67, -68, -96,
	265, -73, -74, -75, -76, -77, -78, -79, -80, -81,
	-82, -83, -84, -85, -86, -87, -88, -89, -90, -21,
	-25, -62, 306, -9, -10, -13, -12, -11, -16, -18,
	-15, -17, -19, -14, 48, 70, -314, 99, -109, -107,
	357, 315, 268, 35, 277, 62, 102, 249, 23, 331,
	338, 258, -110, -111, 323, 287, 360, -332, -164, 287,
	84, -139, -129, 350, 4, -293, -295, 20, 21, 23,
	33, 34, 35, 40, 44, 47, 48, 49, 56, 61,
	62, 63, 65, 67, 68, 69, 72, 73, 74, 82,
	83, 85, 87, 91, 93, 95, 98, 99, 101, 106,
	107, 108, 114, 115, 120, 122, 126, 128, 133, 134,
	135, 136, 137, 144, 147, 149, 142, 159, 160, 161,
	163, 164, 165, 168, 167, 172, 175, 178, 180, 181,
	182, 185, 183, 187, 188, 190, 189, 195, 197, 198,
	200, 203, 206, 209, 212, 213, 214, 215, 216, 218,
	220, 222, 224, 225, 226, 227, 228, 229, 231, 232,
	234, 235, 236, 237, 238, 241, 239, 240, 242, 243,
	244, 245, 247, 249, 250, 252, 266, 267, 278, 254,
	255, 256, 257, 261, 259, 262, 263, 265, 268, 270,
	273, 276, 277, 279, 282, 283, 280, 275, 286, 288,
	289, 290, 291, 292, 293, 294, 301, 302, 306, 307,
	308, 309, 312, 313, 314, 315, 317, 320, 321, 322,
	327, 332, 333, 334, 335, 336, 28, 36, 37, 38,
	39, 41, 42, 45, 46, 52, 53, 54, 57, 86,
	88, 89, 105, 109, 110, 116, 117, 118, 129, 131,
	138, 139, 148, 150, 151, 152, 153, 154, 156, 170,
	184, 194, 196, 207, 211, 219, 221, 230, 251, 260,
	271, 272, 281, 284, 296, 297, 298, 303, 304, 319,
	323, 324, -138, -129, 84, -129, -129, 222, 22, 93,
	147, 314, 313, 22, 218, 259, 289, 291, -129, -49,
	357, -48, -4, -27, -39, -50, -45, -46, -72, -61,
	-37, -53, -94, -95, -336, 22, -337, -338, 70, 99,
	127, 258, 147, 93, 313, -285, 4, -293, -295, -294,
	-296, 59, 71, 125, 146, 140, 158, 162, 171, 173,
	186, 208, 210, 248, 269, 22, 24, 25, 26, 27,
	29, 30, 31, 32, 43, 50, 51, 55, 58, 60,
	66, 70, 75, 76, 78, 77, 79, 80, 81, 90,
	92, 94, 96, 97, 100, 102, 104, 111, 112, 113,
	121, 123, 124, 127, 130, 132, 141, 143, 145, 155,
	157, 166, 169, 174, 176, 177, 191, 192, 193, 199,
	201, 202, 204, 205, 217, 223, 233, 246, 258, 264,
	274, 285, 287, 295, 299, 300, 305, 310, 311, 316,
	318, 325, 326, 328, 329, 330, 331, 287, 160, -129,
	-332, 160, -336, -133, 254, -129, -133, -91, 262, 4,
	22, 84, 185, 264, 296, 175, 56, 251, 262, -70,
	302, -69, 296, -284, -71, -165, 185, -129, -340, 287,
	160, 227, 287, 316, 326, -195, 84, 126, 225, 311,
	-107, -109, -108, 326, 287, 143, 84, 316, -153, -154,
	310, 155, 104, 205, -106, -108, -314, -289, -282, -245,
	9, 305, 111, 201, -288, 8, 349, -281, -287, 5,
	7, 348, 4, -293, -295, -294, -91, 262, 34, 56,
	22, 61, 85, 128, 143, 144, 164, 66, 67, 226,
	175, 161, 301, 165, 263, 288, 302, 70, 317, 292,
	107, -341, 302, 302, -341, -341, -132, 302, 299, 287,
	143, 84, 326, -317, 231, -313, -129, -317, -150, -151,
	22, 96, 361, -177, 357, -251, 355, -253, -138, -108,
	-252, 357, 202, -3, 299, 361, -164, -157, -129, -215,
	-214, 359, 124, 357, -174, -175, -214, -215, 357, -129,
	22, 124, 157, 157, -254, -253, -138, -191, 357, -259,
	-258, -287, 323, 201, 361, -165, -221, -223, 348, 349,
	343, 191, 337, -235, -225, -238, 105, 251, 357, -138,
	-224, 364, 9, -311, -108, 29, -236, -237, 50, -129,
	7, 8, 5, 6, -136, -262, -231, -271, 305, 111,
	193, -309, -310, 4, -293, -286, -263, -273, -267, -270,
	156, 59, 76, 77, 80, 78, 81, 264, 316, 51,
	28, 109, 110, 211, 219, 284, 303, 304, 138, 194,
	139, 57, 129, 170, 98, 37, 39, 41, 42, 52,
	53, 86, 88, 89, 116, 117, 118, 148, 150, 151,
	152, 153, 154, 196, 230, 271, 281, 297, 298, 324,
	-294, -274, -275, -268, -269, -276, -233, 357, 124, -221,
	201, -129, -91, 336, 2, 266, 357, -70, 54, 302,
	-208, -209, -126, -127, -128, 159, 224, 229, 336, 299,
	342, 124, -289, -146, 90, -168, 359, -180, -253, -221,
	-221, -165, 138, -129, -165, 143, -129, 138, -129, -153,
	-154, -166, 138, -165, -166, 138, -142, 138, -141, -138,
	-129, 138, -157, 138, -179, -198, -199, 174, 113, 199,
	-182, 22, 96, -182, -182, 44, 358, 358, 8, 7,
	7, -91, -291, -288, 9, 266, 226, 263, 56, 124,
	-333, 201, 124, 124, 124, 124, 124, 226, 263, 121,
	301, 124, 159, 224, 278, 287, 326, 124, 124, -207,
	-208, -207, 299, -133, -253, 138, -138, -141, 138, -129,
	-253, 138, 361, -317, -158, 357, -169, -255, -221, 350,
	-169, -177, -176, -244, -221, 90, 71, -185, 162, 186,
	125, 171, 248, 146, 7, -49, -218, 364, 357, 350,
	-248, 338, -108, -252, -251, -138, 357, -291, -139, 361,
	-285, 350, 279, 358, -163, -138, -175, -98, -99, -100,
	-129, -254, -140, -138, -140, 265, -129, 30, -167, -221,
	358, 361, -332, -338, 70, 357, 10, 11, 58, 33,
	348, 349, 350, 351, 119, 352, 353, 346, 347, 345,
	340, 341, 342, 64, 179, 253, 13, 14, 15, 26,
	204, 173, 337, 140, 269, 343, 16, 17, 18, 158,
	36, 141, -135, -143, -221, -221, -221, -221, -221, 210,
	-173, -216, 355, -108, 357, -108, -221, -167, 7, -108,
	-230, 355, -239, -221, -174, 357, 5, 357, 5, -318,
	332, 121, 357, 357, 357, 357, 357, 357, 357, 357,
	357, 357, 357, 357, 357, 357, 357, 357, 357, 357,
	221, -280, 327, -280, -280, -264, 357, -264, -265, 357,
	-264, 333, 338, 357, 30, -232, -260, -261, -263, -272,
	-266, -270, -271, 40, 46, 45, 294, 184, 260, 272,
	319, 38, 200, 149, 148, 150, 151, 152, 153, 154,
	271, 37, 230, 117, 118, 116, 98, 89, 88, 196,
	42, 41, -274, -275, -268, -269, 86, 297, 298, 156,
	39, 53, 52, 324, 281, -292, -291, -332, -69, -284,
	-167, 30, -208, 361, 172, -145, 178, 190, 134, 202,
	334, -290, 5, 4, -231, -245, 90, 175, -271, -283,
	90, -289, -283, 90, 74, 359, -285, -118, 361, 49,
	244, 357, -152, 191, -125, -315, 331, -152, 357, -130,
	138, -129, -315, 191, 357, -179, -118, 361, 105, -118,
	105, -118, 361, 105, 364, 105, 105, -199, -198, -200,
	-221, 22, -203, 115, 187, -221, -223, -107, -107, -107,
	-155, -249, -221, 223, 143, -165, 22, 267, -284, -335,
	121, -332, -284, -284, -284, -284, -284, 262, -49, 121,
	-129, 172, -284, -284, 287, 143, 287, -133, -116, 239,
	-115, 21, 23, 99, 321, 105, 275, 293, 255, 275,
	293, 255, 239, 105, 239, 239, 105, -313, 30, -157,
	-160, 361, 124, 30, 4, -160, 361, 358, 162, 162,
	-251, -185, 162, -183, 208, -183, -183, -330, 357, 356,
	-248, -285, 355, 362, -167, -247, -246, 30, -129, 206,
	358, -138, -257, 339, -129, 124, 358, 361, 358, 361,
	-129, -213, 329, -204, -61, 357, 90, 30, -204, -170,
	-171, -256, -172, -138, 357, -129, 358, 361, -49, -258,
	299, 318, -148, -212, -211, -299, -300, -297, -129, 143,
	311, 112, 66, -298, 55, 223, 123, -278, -260, -277,
	235, 236, 234, 238, 237, -260, -285, 296, -221, -221,
	-221, -221, -221, -221, -221, -221, -221, -221, -221, -221,
	-221, -221, -221, -221, -221, -221, -221, -221, -221, -221,
	173, 140, 269, 36, 141, -221, 299, -221, -221, -221,
	-221, 183, 191, 193, 305, 111, 312, 96, 197, -343,
	285, 32, -228, -108, 357, -243, 27, 274, 22, -235,
	251, 357, -216, -221, -217, -167, 358, 358, 361, -167,
	-234, 356, -230, -242, -241, 328, 358, -167, 325, 22,
	96, 350, 7, -192, 335, 182, 87, 135, 181, -193,
	257, -319, 114, 130, 357, 358, 358, 358, -221, -221,
	-186, -279, -167, 4, 335, 182, 87, 135, 181, 257,
	-186, -187, -221, -167, -188, -222, -223, 348, 349, 343,
	357, 251, -189, -221, -167, -221, 43, 169, 300, -190,
	-221, 124, -167, -221, -221, -221, -167, -167, -167, 357,
	7, 7, 296, 296, 7, -48, 358, 361, -159, 29,
	355, -192, 357, -257, 361, 124, 358, 302, -209, -144,
	229, 273, 240, 261, 361, -285, -253, -147, -157, -148,
	-129, 30, 105, 215, 30, 201, 191, -121, 290, 105,
	-98, -165, -166, -166, -141, -142, -285, -129, -157, -201,
	-281, 357, 349, -202, 251, 252, 361, -114, 31, 94,
	163, -138, -334, -129, 262, -49, -138, -141, -138, 361,
	299, -196, 66, 60, -211, 138, 60, -297, 311, -196,
	66, -196, 66, 66, -253, 33, -61, 124, 33, -61,
	124, 299, -141, 299, 299, -253, 357, 358, -213, -255,
	-162, -251, -285, -213, -244, -251, -251, -184, 318, 201,
	162, -251, -246, 358, -331, 7, -248, -247, 7, -220,
	-219, 122, 189, 358, -129, 357, -248, 358, -97, 137,
	197, 279, 124, -138, -100, -181, 246, -221, -181, -206,
	201, -163, 323, -129, -181, -161, 361, 124, 342, -163,
	-221, -334, -291, 358, 361, -260, -130, 143, 357, -130,
	-129, 357, 163, 163, 336, -221, -221, 299, -343, 285,
	-228, -221, 183, 193, 305, 111, 312, 96, 197, 124,
	357, -222, -222, -167, -225, 357, -167, 356, 365, 358,
	-221, 356, 356, 361, -240, -241, 100, -221, -154, 361,
	-153, -221, -167, -167, 358, 358, 299, 299, 299, 299,
	357, -324, 209, 357, 357, -221, 30, 361, 358, 124,
	358, 358, -194, 217, 358, 10, 11, 348, 349, 350,
	351, 119, 352, 353, 346, 347, 345, 340, 341, 342,
	64, 179, 253, 13, 14, 15, 158, 141, -222, -222,
	-222, -167, 357, 358, -226, -227, 124, 121, 30, -190,
	-190, -190, 358, 124, -167, 361, 361, 361, 358, 358,
	358, 7, 358, 361, 358, 336, 336, 358, -260, 355,
	356, 7, 7, -103, 331, -291, -334, -126, 309, 63,
	229, -289, 358, 358, -61, -165, 5, -61, -138, 105,
	-122, 101, -342, 342, -129, 358, -118, -118, -118, -202,
	-221, -249, -138, 364, 361, -257, -115, -138, -129, -129,
	191, -211, 138, -120, 191, -129, -129, 138, -129, 138,
	-129, -129, -116, 239, -61, 357, -61, 357, -129, 239,
	-129, -138, 239, -48, -178, 130, -257, 361, -178, -184,
	357, -221, -251, 356, 358, 361, -247, 356, 361, 363,
	342, -248, 357, -157, -246, -103, 124, 286, 279, -169,
	192, -181, 65, 358, -213, -171, -162, -244, 358, -105,
	72, -105, -212, -301, 357, -130, -156, -250, -129, -312,
	357, -309, -310, -136, 357, -298, -221, 357, 357, -221,
	-221, -222, -222, 124, 357, -221, -232, 26, 26, 358,
	-167, 358, 361, -217, -221, 358, -230, 102, -221, 295,
	358, 325, -154, -154, -154, 5, 182, 135, 181, -193,
	181, -193, -193, 7, -325, -129, 357, 329, -153, 358,
	-278, -260, -221, -226, -221, -278, -260, -222, -222, -222,
	-222, -222, -222, -222, -222, -222, -222, -222, -222, -222,
	-222, -222, -222, -222, -222, -222, 96, 191, 197, -222,
	361, -167, 358, -227, -226, -221, -221, -260, 358, 358,
	358, -167, -221, -221, -221, 358, 7, 7, 356, 358,
	203, -149, 142, 357, -152, 357, -129, -123, 168, -342,
	-288, -315, 362, 202, 358, -114, -285, -129, 299, 299,
	105, 191, 320, -113, 99, 265, -197, 105, -118, 105,
	-118, 299, -196, 66, -167, -167, 299, 299, 358, -229,
	132, 44, -251, -229, -157, -218, 7, -219, -285, 355,
	-247, -157, 358, -292, 296, -205, 357, 201, -61, -181,
	342, 83, 83, -302, 66, -303, 58, 112, 70, 191,
	193, 311, 223, 55, 90, 233, -156, 357, 358, 361,
	-137, -174, 58, -137, -221, 357, -157, 358, -156, -157,
	26, 26, -221, -232, 358, -221, -221, 358, -221, 356,
	-221, 5, -221, 358, 358, 358, 358, -326, -129, -221,
	358, 358, 358, -227, 124, 96, 197, 357, -221, 358,
	358, 361, 358, 358, 358, 356, 357, 141, -147, 30,
	-156, 201, -124, 167, -342, -288, -121, -2, -114, -129,
	-129, -211, 105, 191, 90, 191, 90, 83, 307, -129,
	-129, -138, -129, -129, 358, 358, -129, -138, -321, 330,
	-221, -167, -321, 358, -248, 7, 358, -224, -136, -129,
	97, -157, 66, -177, -108, 357, 357, 357, -129, -285,
	-129, 112, 138, 193, 163, 357, -222, -138, 358, -156,
	-210, -339, 69, 283, -250, -114, -285, -114, 358, -167,
	358, 358, 358, -221, -221, 358, 358, -154, -320, 214,
	358, -222, 124, 357, -232, 358, -221, -102, -101, 5,
	212, 358, -61, 358, -138, -342, -288, -122, 363, -211,
	193, 193, -221, -260, -118, -118, 299, 299, 299, 299,
	-322, -323, -129, -247, 356, 357, 313, 192, 358, -129,
	-292, -292, -303, -130, 191, -221, -131, 357, -210, 358,
	-149, 357, -137, -154, 233, 358, -154, 44, -222, -232,
	358, 358, 361, 358, -104, 342, -138, -149, -210, 357,
	-288, -123, -117, 58, -129, -129, 357, 357, 361, 30,
	-167, 265, -213, 358, 358, 105, 358, -306, 180, -129,
	-149, -210, -157, -114, 358, -138, -327, 228, 252, -167,
	358, -101, 5, 357, -149, -156, -124, -112, 318, -285,
	-167, -167, -323, -325, -154, -170, -103, -103, 112, -304,
	-307, -305, 201, 125, 213, 270, 358, -149, 358, -152,
	358, -328, -329, 36, 308, 74, -221, -328, -157, 358,
	-221, 358, 358, 358, -213, 318, 318, -129, -305, 201,
	-307, 201, 313, 93, -306, -329, 220, 120, 251, 220,
	120, 358, -210, 289, 289, -308, 188, 244, 49, 265,
	-308, -304, 26, -119, 49, 244, -149, 282, 282, 20,
	193, 90, -329, -291, -291,
}
var sqlDef = [...]int{

	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 36, 37, 38, 39, 0,
	110, 111, 0, 114, 115, 116, 117, 118, 119, 120,
	121, 0, 0, 0, 0, 128, 129, 130, 131, 132,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 493, -2, 0, 0, 198, 199, 200, 201, 202,
	0, 249, 250, 251, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 419,
	420, 421, 524, 40, 41, 42, 43, 44, 47, 48,
	49, 50, 45, 46, 0, 390, 521, 0, -2, 532,
	0, 0, 0, 428, 0, 428, 428, 432, 0, 0,
	0, 530, 507, 508, 0, 0, -2, 0, 179, 0,
	1071, 997, 1003, 1004, 1028, 1029, 1030, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 0, 999, 1071, 0, 173, 1132, 175, 0,
	0, 0, 0, 123, 124, 125, 126, 127, 172, 149,
	0, 156, 157, 158, 159, 160, 161, 162, 163, 151,
	152, 153, 154, 155, 0, 182, 183, 184, 186, 187,
	188, 189, 190, 191, 192, 309, 1042, 1043, 1044, 1045,
	1046, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 0, 0, 169,
	0, 0, 0, 418, 1160, 434, 416, 195, 0, 269,
	270, 271, 272, 273, 0, -2, 1058, 1249, 1166, 207,
	1188, 215, 1255, 0, 218, 223, -2, 145, 0, 523,
	0, 0, 0, 0, 0, 0, 0, 448, 0, 389,
	-2, 503, 504, 0, 0, 0, 0, 0, -2, 0,
	527, 527, 527, 0, 0, 504, 0, 197, 226, 227,
	228, 237, 238, 239, 240, 379, 0, 381, 247, 248,
	1024, 0, 1038, 1039, 1040, 1041, 267, 0, 0, 0,
	270, 0, 280, 311, 0, 0, 0, 0, 0, 287,
	0, 290, 0, 0, 295, 299, 0, 0, 305, 0,
	0, 436, 427, 436, 424, 425, 426, 429, 0, 0,
	0, 0, 0, 513, 1139, 516, 1010, 514, 0, 0,
	529, 528, 0, 560, 0, 512, 522, 574, 611, 588,
	579, 0, 0, 2, 0, 0, 180, 181, 1007, 1005,
	1006, 0, 0, 0, 1000, 976, 974, 975, 452, 174,
	176, 0, 0, 0, 0, 617, 611, 170, 0, 0,
	164, 166, 1261, 0, 0, 0, 314, 719, 0, 0,
	0, 0, 0, 0, 811, 813, 1223, 1249, 0, 815,
	816, 0, 818, 820, 821, 0, 824, 825, 967, 999,
	1013, 1014, 1015, 1016, 0, 0, 1019, 0, 1021, 1022,
	1023, 867, 834, -2, -2, 1011, 647, 648, 649, 650,
	-2, 1263, 838, 840, 842, 844, 845, 846, 847, 0,
	1207, 1224, 1225, 1245, 1246, 1254, 1258, 1259, 1231, 1242,
	1232, 1219, 1229, 1240, 1077, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1037, 681, 682, 687, 688, 690, 0, 0, 0, 417,
	0, 433, 196, 274, 203, 0, 0, 206, 1218, 1188,
	209, 437, 439, 440, 441, 0, 0, 0, 0, 0,
	0, 0, 219, 220, 221, 146, 0, 82, 615, 112,
	113, 362, 1231, -2, 362, 1032, 520, 1231, 0, -2,
	0, 82, 1231, 143, 82, 1231, 82, 1231, 995, 1002,
	139, 1231, 141, 1231, 499, 541, 542, 0, 0, 0,
	0, 525, 526, 0, 0, 0, 495, 496, 380, 1026,
	1025, 268, 275, 94, 95, 0, 288, 296, 0, 0,
	313, 0, 0, 0, 0, 0, 0, 289, 297, 522,
	0, 0, 0, 301, 302, 0, 0, 0, 0, 422,
	435, 423, 0, 431, 0, 1231, 611, 0, 1231, 0,
	0, 1231, 0, 515, 0, 0, 563, 987, 991, 992,
	563, 561, 0, 984, 982, 983, 0, 0, 0, 0,
	608, 608, 608, 606, 582, 0, 588, 0, 0, 612,
	600, 0, -2, 579, 0, 613, 0, 602, 998, 0,
	972, 973, 107, 0, 0, 993, 977, 0, 451, 454,
	0, 621, 0, 470, 0, 0, 618, 0, 0, 923,
	522, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	902, 903, 904, 905, 906, 907, 910, 911, 908, 909,
	912, 913, 914, 0, 0, 0, 915, 916, 917, 0,
	0, 919, 0, 921, 0, 0, 0, 0, 0, 0,
	981, 0, 0, 918, 724, 725, 726, 748, 749, 0,
	812, 978, 971, 814, 0, -2, 923, 0, 817, 822,
	823, 0, 0, 966, -2, 0, 1018, 0, 716, 869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	946, 952, 0, 0, 0, 0, 0, 0, 0, 0,
	666, 684, 695, 692, 691, 668, 0, 667, 665, 0,
	669, 0, 0, 0, 522, 0, 925, 629, 630, 631,
	632, 633, 716, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 678, 0, 653, 653, 653,
	670, 671, 679, 680, 685, 686, 697, 698, 700, 702,
	696, 696, 696, 693, 694, 602, 96, 0, 204, 0,
	0, 0, 210, 0, 0, 442, 234, 235, 236, 444,
	445, 216, 241, 242, 243, 244, 245, 246, 0, 211,
	213, 224, 212, 214, 217, 0, 147, 382, 0, 80,
	81, 320, 0, 0, 383, 0, 519, 0, 0, 0,
	1231, 1031, 458, 0, 452, 502, 133, 0, 0, 135,
	0, 137, 0, 0, 0, 0, 0, 539, 540, 543,
	547, 548, 551, 554, 555, 545, 719, 509, 510, 511,
	533, 534, 400, 0, 0, 276, 277, 278, 279, 281,
	0, 310, 282, 283, 284, 285, 286, 291, 293, 522,
	298, 300, 303, 304, 0, 0, 0, 430, 51, 413,
	61, 0, 413, 413, 0, 0, 0, 0, 57, 0,
	0, 59, 0, 0, 0, 0, 0, 517, 0, 0,
	621, 0, 0, 0, 990, 621, 0, 986, 0, 0,
	0, 0, 0, 603, 607, 604, 605, 0, 0, 588,
	600, 571, 0, 0, 0, 578, 599, 0, 598, 587,
	-2, 0, 99, 0, 1008, 0, 0, 0, 449, 0,
	455, 482, 0, 482, 472, 0, 0, 0, 482, 485,
	486, 488, 489, 0, 0, 619, 171, 0, 150, 165,
	0, 0, 0, 321, 323, 324, 325, 326, 0, 1032,
	0, 1032, 0, 352, 0, 0, 0, 720, 625, 626,
	672, 673, 674, 675, 676, 721, 722, 0, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, -2, -2,
	-2, 740, 741, 742, -2, -2, -2, 746, 747, -2,
	920, 922, 0, 981, 0, -2, 0, -2, -2, -2,
	-2, 760, 0, 762, 765, 767, 769, 0, 0, 0,
	0, 980, 779, 958, 0, 0, 899, 900, 901, 764,
	0, 0, 979, 970, 0, 0, -2, 819, 0, 0,
	0, 929, 930, 965, 961, 0, 826, 532, 0, 0,
	0, 0, 0, 1027, 703, 704, 705, 706, 707, 708,
	717, 877, 0, 0, 0, 839, 841, 843, 0, 0,
	0, 0, 933, -2, -2, -2, -2, -2, -2, -2,
	0, 0, 923, 943, 0, 0, 782, 0, 0, 0,
	0, 1249, 0, 923, 951, 0, 0, 0, 0, 0,
	923, 0, 957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 168, 0, 622, 624,
	0, 634, 0, 106, 0, 0, 205, 0, 438, 443,
	0, 231, 0, 233, 0, 148, 616, 0, 0, 319,
	1007, 0, 0, 0, 0, 0, 0, 460, 466, 0,
	0, 144, 82, 82, 996, 82, 1001, 140, 142, 0,
	549, 0, 0, 546, 552, 553, 0, 536, 398, 399,
	0, 0, 312, 193, 292, 294, 306, 307, 602, 0,
	0, 0, 0, 412, 63, 1231, 0, 84, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 0, 0, 56,
	0, 0, 0, 0, 0, 0, 522, 1009, 557, 988,
	602, 564, 989, 557, 985, 590, 0, 592, 0, 0,
	0, 594, 0, 583, 0, 585, 600, 576, 0, 0,
	569, 0, 568, 588, 596, 0, 0, 614, 106, 0,
	0, 108, 0, 994, 453, 122, 0, 620, 467, 482,
	0, 0, 474, 471, 469, 621, 0, 0, 0, 0,
	924, 177, 0, 0, 0, 334, 0, 1032, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	780, -2, 761, 763, 766, 768, 770, 0, 0, 0,
	0, 0, 0, 0, 781, 0, 0, 968, 971, -2,
	924, 927, 928, 0, 0, 962, 0, 0, 0, 0,
	531, 532, 532, 532, 832, 0, 0, 0, 0, 0,
	0, 833, 0, 0, 0, 0, 0, 0, 850, 0,
	851, 852, 0, 0, 853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 785, 786,
	787, 0, 0, 854, 949, 950, 0, 0, 0, 0,
	0, 0, 859, 0, 956, 0, 0, 0, 863, 864,
	865, 0, 651, 0, 677, 699, 701, 689, 926, 0,
	627, 0, 0, 90, 0, 97, 178, 208, 229, 230,
	232, 225, 328, 361, 317, 362, 384, 386, 0, 0,
	462, 466, 0, 465, 520, 0, 134, 136, 138, 0,
	0, 535, 400, 0, 0, 308, 62, 402, 0, 0,
	0, 65, 1231, 73, 0, 415, 74, 1231, 82, 1231,
	82, 75, 52, 413, 53, 0, 54, 0, 410, 0,
	401, 408, 0, 0, 559, 0, 562, 0, 559, 591,
	0, 610, 593, 574, 584, 0, 581, 572, 0, 573,
	0, 600, 0, 0, 580, 89, 0, 0, 109, 480,
	481, 468, 479, 0, 482, 487, 484, 490, 0, 0,
	91, 0, 322, 332, 0, 0, 0, 391, 397, 397,
	0, 835, 836, 0, 0, 351, 0, 0, 0, 723,
	-2, 0, 0, 0, 0, -2, 0, 0, 0, 959,
	0, 894, 0, 0, 970, -2, 931, 960, 964, 0,
	827, 0, 0, 0, 0, 1020, 709, 710, 711, 712,
	713, 714, 715, 0, 875, 876, 880, 0, 0, 837,
	0, 0, 932, 942, 944, 783, 784, 788, 789, 790,
	791, 792, 793, 794, 795, 796, 797, -2, -2, -2,
	801, 802, 803, -2, -2, -2, 0, 0, 0, 945,
	0, 0, 897, 947, 948, 953, 954, 0, 856, 857,
	858, 955, 0, 0, 0, 683, 0, 0, 628, 635,
	0, 315, 0, 320, 0, 0, 0, 464, 466, 0,
	457, 458, -2, 544, 550, 537, 400, 194, 0, 0,
	0, 0, 83, 67, 0, 0, 0, 0, 71, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 518, 871,
	0, 0, 565, 871, 0, 588, 586, 570, 566, 0,
	577, 0, 597, 98, 0, 0, 0, 0, 473, 483,
	0, 0, 0, 333, 0, 336, 0, 0, 0, 0,
	342, 343, 0, 0, 0, 0, 0, 0, 360, 0,
	400, 1012, 0, 400, 0, 0, 0, 353, 0, 0,
	0, 0, -2, 0, 773, -2, -2, 893, 924, 969,
	963, 1017, 532, 828, 830, 831, 718, 882, 879, 0,
	866, 848, 849, 941, 0, 0, 0, 0, 924, 896,
	855, 0, 861, 862, 652, 623, 0, 0, 0, 0,
	0, 0, 446, 466, 0, 459, 460, 0, 538, 404,
	406, 64, 0, 0, 79, 0, 0, 414, 0, 82,
	82, 403, 0, 0, 0, 0, 411, 409, 505, 0,
	558, 556, 506, 609, 600, 0, 595, 601, 0, 0,
	0, 0, 0, 491, 492, 0, 0, 0, 0, 337,
	338, 1032, 0, 341, 344, 0, 346, 1034, 360, 0,
	328, 0, 357, 358, 392, 393, 396, 394, 397, 532,
	350, 355, 0, -2, -2, 774, 895, 0, 532, 0,
	868, -2, 0, 0, 0, 898, 0, 0, 103, 101,
	0, 328, 318, 360, 0, 0, 461, 462, 450, 66,
	68, 69, 78, 86, 70, 76, 0, 0, 0, 0,
	870, 872, 0, 575, 567, 0, 0, 476, 621, 478,
	0, 0, 335, 339, 0, 0, 366, 0, 328, 360,
	354, 0, 400, 0, 0, 829, 885, 0, -2, 0,
	809, 860, 0, 105, 102, 0, 0, 316, 328, 0,
	463, 464, 88, 0, 405, 407, 0, 0, 0, 0,
	532, 0, 477, 106, 106, 0, 345, 371, 0, 0,
	348, 328, 0, 395, 827, 362, 0, 0, 0, 881,
	810, 104, 100, 0, 387, 0, 447, 72, 0, 85,
	0, 0, 873, 874, 0, 621, 0, 0, 0, 347,
	367, 368, 0, 363, 364, 365, 1033, 349, 359, 366,
	878, 883, 886, -2, 1191, 1068, 0, 884, 0, 360,
	87, 58, 60, 0, 475, 0, 0, 340, 369, 0,
	370, 0, 0, 0, 371, 0, 888, 889, 890, 891,
	892, 331, 328, 0, 0, 372, 0, 375, 376, 0,
	373, 356, 0, 327, 329, 330, 388, 0, 0, 374,
	377, 378, 887, 92, 93,
>>>>>>> Fix build errors
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
<<<<<<< HEAD
	3, 3, 3, 3, 3, 345, 3, 351, 346, 3,
	356, 357, 349, 347, 361, 348, 358, 350, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 365, 360,
	339, 341, 340, 3, 362, 3, 3, 3, 3, 3,
=======
	3, 3, 3, 3, 3, 346, 3, 352, 347, 3,
	357, 358, 350, 348, 361, 349, 359, 351, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 365, 360,
	340, 342, 341, 3, 364, 3, 3, 3, 3, 3,
>>>>>>> Fix build errors
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 355, 3, 356, 353, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
<<<<<<< HEAD
	3, 3, 3, 363, 344, 364, 342,
=======
	3, 3, 3, 362, 345, 363, 343,
>>>>>>> Fix build errors
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
<<<<<<< HEAD
	57680, 338, 57681, 343, 57682, 353, 57683, 359, 0,
=======
	57680, 338, 57681, 339, 57682, 344, 57683, 354, 0,
>>>>>>> Fix build errors
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:864
=======
		//line sql.y:874
>>>>>>> Fix build errors
		{
			sqllex.(*Scanner).stmts = sqlDollar[1].union.stmts()
		}
	case 2:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:870
=======
		//line sql.y:880
>>>>>>> Fix build errors
		{
			if sqlDollar[3].union.stmt() != nil {
				sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[3].union.stmt())
			}
		}
	case 3:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:876
=======
		//line sql.y:886
>>>>>>> Fix build errors
		{
			if sqlDollar[1].union.stmt() != nil {
				sqlVAL.union.val = []Statement{sqlDollar[1].union.stmt()}
			} else {
				sqlVAL.union.val = []Statement(nil)
			}
		}
<<<<<<< HEAD
	case 6:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:886
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:890
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:891
		{
			return helpWith(sqllex, "DELETE")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:892
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:894
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:895
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:896
		{
			return helpWith(sqllex, "GRANT")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:898
		{
			return helpWith(sqllex, "INSERT")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:899
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:900
		{
			return helpWith(sqllex, "PAUSE JOB")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:901
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:902
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:903
		{
			return helpWith(sqllex, "RESUME JOB")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:904
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:905
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:907
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:910
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:911
		{
			return helpWith(sqllex, "RESET")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:915
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:916
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:917
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:919
		{
			sqlVAL.union.val = Statement(nil)
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:927
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:928
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:929
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:930
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:931
		{
			return helpWith(sqllex, "ALTER")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:966
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:977
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:988
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1008
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1012
		{
			sqlVAL.union.val = &AlterTable{Table: sqlDollar[3].union.normalizableTableName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1016
		{
			sqlVAL.union.val = &AlterTable{Table: sqlDollar[5].union.normalizableTableName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1022
=======
	case 26:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:918
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:930
		{
			sqlVAL.union.val = Statement(nil)
		}
	case 51:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:961
		{
			sqlVAL.union.val = &AlterTable{Table: sqlDollar[3].union.normalizableTableName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 52:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:965
		{
			sqlVAL.union.val = &AlterTable{Table: sqlDollar[5].union.normalizableTableName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 53:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:971
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &Split{Table: sqlDollar[3].union.newNormalizableTableName(), Rows: sqlDollar[6].union.slct()}
		}
<<<<<<< HEAD
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1028
=======
	case 54:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:977
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &Split{Index: sqlDollar[3].union.tableWithIdx(), Rows: sqlDollar[6].union.slct()}
		}
<<<<<<< HEAD
	case 83:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1034
=======
	case 55:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:983
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = &TestingRelocate{Table: sqlDollar[3].union.newNormalizableTableName(), Rows: sqlDollar[5].union.slct()}
		}
<<<<<<< HEAD
	case 84:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1040
=======
	case 56:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:989
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = &TestingRelocate{Index: sqlDollar[3].union.tableWithIdx(), Rows: sqlDollar[5].union.slct()}
		}
<<<<<<< HEAD
	case 85:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1046
=======
	case 57:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:995
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &Scatter{Table: sqlDollar[3].union.newNormalizableTableName()}
		}
<<<<<<< HEAD
	case 86:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
		//line sql.y:1050
=======
	case 58:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
		//line sql.y:999
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &Scatter{Table: sqlDollar[3].union.newNormalizableTableName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
<<<<<<< HEAD
	case 87:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1056
=======
	case 59:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1005
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &Scatter{Index: sqlDollar[3].union.tableWithIdx()}
		}
<<<<<<< HEAD
	case 88:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
		//line sql.y:1060
=======
	case 60:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
		//line sql.y:1009
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &Scatter{Index: sqlDollar[3].union.tableWithIdx(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
<<<<<<< HEAD
	case 89:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1066
		{
			sqlVAL.union.val = AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 91:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1077
		{
			sqlVAL.union.val = &AlterTableAddColumn{columnKeyword: false, IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1082
		{
			sqlVAL.union.val = &AlterTableAddColumn{columnKeyword: false, IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1087
		{
			sqlVAL.union.val = &AlterTableAddColumn{columnKeyword: true, IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1092
		{
			sqlVAL.union.val = &AlterTableAddColumn{columnKeyword: true, IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1097
		{
			sqlVAL.union.val = &AlterTableSetDefault{columnKeyword: sqlDollar[2].union.bool(), Column: Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1102
		{
			sqlVAL.union.val = &AlterTableDropNotNull{columnKeyword: sqlDollar[2].union.bool(), Column: Name(sqlDollar[3].str)}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1106
		{
			return unimplemented(sqllex, "alter set non null")
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1109
=======
	case 61:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1015
		{
			sqlVAL.union.val = AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1019
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1026
		{
			sqlVAL.union.val = &AlterTableAddColumn{columnKeyword: false, IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 64:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1031
		{
			sqlVAL.union.val = &AlterTableAddColumn{columnKeyword: false, IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1036
		{
			sqlVAL.union.val = &AlterTableAddColumn{columnKeyword: true, IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 66:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1041
		{
			sqlVAL.union.val = &AlterTableAddColumn{columnKeyword: true, IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 67:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1046
		{
			sqlVAL.union.val = &AlterTableSetDefault{columnKeyword: sqlDollar[2].union.bool(), Column: Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 68:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1051
		{
			sqlVAL.union.val = &AlterTableDropNotNull{columnKeyword: sqlDollar[2].union.bool(), Column: Name(sqlDollar[3].str)}
		}
	case 69:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1055
		{
			return unimplemented(sqllex, "alter set non null")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1058
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &AlterTableDropColumn{
				columnKeyword: sqlDollar[2].union.bool(),
				IfExists:      true,
				Column:        Name(sqlDollar[5].str),
				DropBehavior:  sqlDollar[6].union.dropBehavior(),
			}
		}
<<<<<<< HEAD
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1119
=======
	case 71:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1068
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &AlterTableDropColumn{
				columnKeyword: sqlDollar[2].union.bool(),
				IfExists:      false,
				Column:        Name(sqlDollar[3].str),
				DropBehavior:  sqlDollar[4].union.dropBehavior(),
			}
		}
<<<<<<< HEAD
	case 100:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1129
		{
			return unimplemented(sqllex, "alter set type")
		}
	case 101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1132
=======
	case 72:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:1078
		{
			return unimplemented(sqllex, "alter set type")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1081
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
<<<<<<< HEAD
	case 102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1139
		{
			return unimplemented(sqllex, "alter constraint")
		}
	case 103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1142
=======
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1088
		{
			return unimplemented(sqllex, "alter constraint")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1091
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &AlterTableValidateConstraint{
				Constraint: Name(sqlDollar[3].str),
			}
		}
<<<<<<< HEAD
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1149
=======
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1098
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
<<<<<<< HEAD
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1158
=======
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1107
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
<<<<<<< HEAD
	case 106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1168
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1172
		{
			sqlVAL.union.val = nil
		}
	case 108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1178
		{
			sqlVAL.union.val = DropCascade
		}
	case 109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1182
		{
			sqlVAL.union.val = DropRestrict
		}
	case 110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1186
		{
			sqlVAL.union.val = DropDefault
		}
	case 111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1192
		{
			sqlVAL.union.val = ValidationSkip
		}
	case 112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1196
		{
			sqlVAL.union.val = ValidationDefault
		}
	case 113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1201
		{
			return unimplementedWithIssue(sqllex, 9851)
		}
	case 114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1202
		{
		}
	case 115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1205
		{
			return unimplemented(sqllex, "alter using")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1206
		{
		}
	case 117:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:1230
		{
			sqlVAL.union.val = &Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.expr(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1233
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1256
		{
			sqlVAL.union.val = &Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1259
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1263
		{
			sqlVAL.str = "CSV"
		}
	case 122:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
		//line sql.y:1290
=======
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1117
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1121
		{
			sqlVAL.union.val = nil
		}
	case 80:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1127
		{
			sqlVAL.union.val = DropCascade
		}
	case 81:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1131
		{
			sqlVAL.union.val = DropRestrict
		}
	case 82:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1135
		{
			sqlVAL.union.val = DropDefault
		}
	case 83:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1141
		{
			sqlVAL.union.val = ValidationSkip
		}
	case 84:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1145
		{
			sqlVAL.union.val = ValidationDefault
		}
	case 85:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1150
		{
			return unimplementedWithIssue(sqllex, 9851)
		}
	case 86:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1151
		{
		}
	case 87:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1154
		{
			return unimplemented(sqllex, "alter using")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1155
		{
		}
	case 89:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:1159
		{
			sqlVAL.union.val = &Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.expr(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1165
		{
			sqlVAL.union.val = &Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1171
		{
			sqlVAL.str = "CSV"
		}
	case 92:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
		//line sql.y:1177
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &Import{Table: sqlDollar[3].union.unresolvedName(), CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
<<<<<<< HEAD
	case 123:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
		//line sql.y:1294
=======
	case 93:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
		//line sql.y:1181
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &Import{Table: sqlDollar[3].union.unresolvedName(), CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
<<<<<<< HEAD
	case 124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1297
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1301
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1305
		{
			sqlVAL.union.val = NewPlaceholder(sqlDollar[1].str)
		}
	case 127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1311
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1315
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1321
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1325
		{
			sqlVAL.union.val = Exprs(nil)
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1331
=======
	case 94:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1187
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1191
		{
			sqlVAL.union.val = NewPlaceholder(sqlDollar[1].str)
		}
	case 96:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1197
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1201
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 98:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1207
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 99:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1211
		{
			sqlVAL.union.val = Exprs(nil)
		}
	case 100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1217
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = KVOption{Key: Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
<<<<<<< HEAD
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1335
=======
	case 101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1221
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = KVOption{Key: Name(sqlDollar[1].str)}
		}
<<<<<<< HEAD
	case 133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1339
=======
	case 102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1227
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = KVOption{Key: Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
<<<<<<< HEAD
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1343
		{
			sqlVAL.union.val = KVOption{Key: Name(sqlDollar[1].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1349
		{
			sqlVAL.union.val = []KVOption{sqlDollar[1].union.kvOption()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1359
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1363
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1366
		{
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1370
		{
			sqlVAL.union.val = &CopyFrom{Table: sqlDollar[2].union.normalizableTableName(), Stdin: true}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1374
		{
			sqlVAL.union.val = &CopyFrom{Table: sqlDollar[2].union.normalizableTableName(), Stdin: true}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:1378
		{
			sqlVAL.union.val = &CopyFrom{Table: sqlDollar[2].union.normalizableTableName(), Columns: sqlDollar[4].union.unresolvedNames(), Stdin: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1386
		{
			return helpWith(sqllex, "CANCEL JOB")
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1387
		{
			return helpWith(sqllex, "CANCEL QUERY")
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1388
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1396
=======
	case 103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1233
		{
			sqlVAL.union.val = []KVOption{sqlDollar[1].union.kvOption()}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1237
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1243
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1246
		{
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1250
		{
			sqlVAL.union.val = &CopyFrom{Table: sqlDollar[2].union.normalizableTableName(), Stdin: true}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1254
		{
			sqlVAL.union.val = &CopyFrom{Table: sqlDollar[2].union.normalizableTableName(), Stdin: true}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:1258
		{
			sqlVAL.union.val = &CopyFrom{Table: sqlDollar[2].union.normalizableTableName(), Columns: sqlDollar[4].union.unresolvedNames(), Stdin: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1269
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &CancelJob{ID: sqlDollar[3].union.expr()}
		}
<<<<<<< HEAD
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1399
		{
			return helpWith(sqllex, "CANCEL JOB")
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1407
=======
	case 113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1275
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &CancelQuery{ID: sqlDollar[3].union.expr()}
		}
<<<<<<< HEAD
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1410
		{
			return helpWith(sqllex, "CANCEL QUERY")
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1418
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1419
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1420
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1421
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1423
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1424
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1425
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1428
		{
			return helpWith(sqllex, "CREATE")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1436
		{
			sqlVAL.union.val = &Delete{Table: sqlDollar[4].union.tblExpr(), Where: newWhere(astWhere, sqlDollar[5].union.expr()), Returning: sqlDollar[6].union.retClause()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1439
		{
			return helpWith(sqllex, "DELETE")
		}
	case 170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1446
		{
			sqlVAL.union.val = &Discard{Mode: DiscardModeAll}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1449
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1450
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1451
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1452
		{
			return unimplemented(sqllex, "discard temporary")
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1453
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1459
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1460
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1461
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1462
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1463
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1464
		{
			return helpWith(sqllex, "DROP")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1472
		{
			sqlVAL.union.val = &DropView{Names: sqlDollar[3].union.tableNameReferences(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1476
		{
			sqlVAL.union.val = &DropView{Names: sqlDollar[5].union.tableNameReferences(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1479
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1487
		{
			sqlVAL.union.val = &DropTable{Names: sqlDollar[3].union.tableNameReferences(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1491
		{
			sqlVAL.union.val = &DropTable{Names: sqlDollar[5].union.tableNameReferences(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1494
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1502
=======
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1293
		{
			sqlVAL.union.val = &Delete{Table: sqlDollar[4].union.tblExpr(), Where: newWhere(astWhere, sqlDollar[5].union.expr()), Returning: sqlDollar[6].union.retClause()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1300
		{
			sqlVAL.union.val = &Discard{Mode: DiscardModeAll}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1303
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1304
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1305
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1306
		{
			return unimplemented(sqllex, "discard temporary")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1318
		{
			sqlVAL.union.val = &DropView{Names: sqlDollar[3].union.tableNameReferences(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1322
		{
			sqlVAL.union.val = &DropView{Names: sqlDollar[5].union.tableNameReferences(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1328
		{
			sqlVAL.union.val = &DropTable{Names: sqlDollar[3].union.tableNameReferences(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1332
		{
			sqlVAL.union.val = &DropTable{Names: sqlDollar[5].union.tableNameReferences(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1338
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &DropIndex{
				IndexList:    sqlDollar[3].union.tableWithIdxList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
<<<<<<< HEAD
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1510
=======
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1346
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &DropIndex{
				IndexList:    sqlDollar[5].union.tableWithIdxList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
<<<<<<< HEAD
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1517
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1525
		{
			sqlVAL.union.val = &DropDatabase{Name: Name(sqlDollar[3].str), IfExists: false}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1529
		{
			sqlVAL.union.val = &DropDatabase{Name: Name(sqlDollar[5].str), IfExists: true}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1532
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1540
		{
			sqlVAL.union.val = &DropUser{Names: sqlDollar[3].union.nameList(), IfExists: false}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1544
		{
			sqlVAL.union.val = &DropUser{Names: sqlDollar[5].union.nameList(), IfExists: true}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1547
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1551
		{
			sqlVAL.union.val = TableNameReferences{sqlDollar[1].union.unresolvedName()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableNameReferences(), sqlDollar[3].union.unresolvedName())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1561
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[1].str)}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1565
		{
			sqlVAL.union.val = append(UnresolvedName{Name(sqlDollar[1].str)}, sqlDollar[2].union.unresolvedName()...)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1571
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[2].str)}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedName(), Name(sqlDollar[3].str))
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1595
		{
			sqlVAL.union.val = &Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1598
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1600
		{
			sqlVAL.union.val = &Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1607
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1611
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1615
		{
			return helpWith(sqllex, "DELETE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1616
		{
			return helpWith(sqllex, "INSERT")
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1617
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1618
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1625
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1626
		{ /* SKIP DOC */
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1631
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1635
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1648
=======
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1356
		{
			sqlVAL.union.val = &DropDatabase{Name: Name(sqlDollar[3].str), IfExists: false}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1360
		{
			sqlVAL.union.val = &DropDatabase{Name: Name(sqlDollar[5].str), IfExists: true}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1366
		{
			sqlVAL.union.val = &DropUser{Names: sqlDollar[3].union.nameList(), IfExists: false}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1370
		{
			sqlVAL.union.val = &DropUser{Names: sqlDollar[5].union.nameList(), IfExists: true}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1376
		{
			sqlVAL.union.val = TableNameReferences{sqlDollar[1].union.unresolvedName()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1380
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableNameReferences(), sqlDollar[3].union.unresolvedName())
		}
	case 145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1386
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[1].str)}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1390
		{
			sqlVAL.union.val = append(UnresolvedName{Name(sqlDollar[1].str)}, sqlDollar[2].union.unresolvedName()...)
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1396
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[2].str)}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedName(), Name(sqlDollar[3].str))
		}
	case 149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1407
		{
			sqlVAL.union.val = &Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1411
		{
			sqlVAL.union.val = &Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1417
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1431
		{ /* SKIP DOC */
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1437
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1441
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1451
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &Prepare{
				Name:      Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
<<<<<<< HEAD
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1655
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1659
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1663
		{
			sqlVAL.union.val = []ColumnType(nil)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1673
=======
	case 168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1461
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1465
		{
			sqlVAL.union.val = []ColumnType(nil)
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1472
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &Execute{
				Name:   Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
<<<<<<< HEAD
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1679
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1685
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1689
		{
			sqlVAL.union.val = Exprs(nil)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1699
=======
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1483
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1487
		{
			sqlVAL.union.val = Exprs(nil)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1494
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &Deallocate{Name: Name(sqlDollar[2].str)}
		}
<<<<<<< HEAD
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1703
=======
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1500
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &Deallocate{Name: Name(sqlDollar[3].str)}
		}
<<<<<<< HEAD
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1707
		{
			sqlVAL.union.val = &Deallocate{}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1711
		{
			sqlVAL.union.val = &Deallocate{}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1714
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1731
		{
			sqlVAL.union.val = &Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1734
		{
			return helpWith(sqllex, "GRANT")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1751
		{
			sqlVAL.union.val = &Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1754
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1758
		{
			sqlVAL.union.val = TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1762
		{
			sqlVAL.union.val = TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1766
		{
			sqlVAL.union.val = TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1773
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1776
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1780
		{
			sqlVAL.union.val = privilege.List{sqlDollar[1].union.privilegeType()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1784
		{
			sqlVAL.union.val = append(sqlDollar[1].union.privilegeList(), sqlDollar[3].union.privilegeType())
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1791
		{
			sqlVAL.union.val = privilege.CREATE
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1795
		{
			sqlVAL.union.val = privilege.DROP
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1799
		{
			sqlVAL.union.val = privilege.GRANT
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1803
		{
			sqlVAL.union.val = privilege.SELECT
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1807
		{
			sqlVAL.union.val = privilege.INSERT
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1811
		{
			sqlVAL.union.val = privilege.DELETE
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1815
		{
			sqlVAL.union.val = privilege.UPDATE
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1823
		{
			sqlVAL.union.val = NameList{Name(sqlDollar[1].str)}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1827
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), Name(sqlDollar[3].str))
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1837
		{
			sqlVAL.union.val = &Set{Name: UnresolvedName{Name(sqlDollar[2].str)}, SetMode: SetModeReset}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1841
		{
			sqlVAL.union.val = &Set{Name: UnresolvedName{Name(sqlDollar[3].str)}, SetMode: SetModeReset}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1844
		{
			return helpWith(sqllex, "RESET")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1849
=======
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1506
		{
			sqlVAL.union.val = &Deallocate{}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1510
		{
			sqlVAL.union.val = &Deallocate{}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1517
		{
			sqlVAL.union.val = &Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1524
		{
			sqlVAL.union.val = &Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1531
		{
			sqlVAL.union.val = TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1535
		{
			sqlVAL.union.val = TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1539
		{
			sqlVAL.union.val = TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1546
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1549
		{
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1553
		{
			sqlVAL.union.val = privilege.List{sqlDollar[1].union.privilegeType()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.privilegeList(), sqlDollar[3].union.privilegeType())
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1564
		{
			sqlVAL.union.val = privilege.CREATE
		}
	case 187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1568
		{
			sqlVAL.union.val = privilege.DROP
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1572
		{
			sqlVAL.union.val = privilege.GRANT
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1576
		{
			sqlVAL.union.val = privilege.SELECT
		}
	case 190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1580
		{
			sqlVAL.union.val = privilege.INSERT
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1584
		{
			sqlVAL.union.val = privilege.DELETE
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1588
		{
			sqlVAL.union.val = privilege.UPDATE
		}
	case 193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1596
		{
			sqlVAL.union.val = NameList{Name(sqlDollar[1].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), Name(sqlDollar[3].str))
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1607
		{
			sqlVAL.union.val = &Set{Name: UnresolvedName{Name(sqlDollar[2].str)}, SetMode: SetModeReset}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1611
		{
			sqlVAL.union.val = &Set{Name: UnresolvedName{Name(sqlDollar[3].str)}, SetMode: SetModeReset}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1618
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = &Set{Name: UnresolvedName{Name("database")}, Values: Exprs{sqlDollar[2].union.expr()}}
		}
<<<<<<< HEAD
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1852
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1856
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1857
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1858
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1859
		{ /* SKIP DOC */
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1860
		{ /* SKIP DOC */
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1861
		{
			return unimplemented(sqllex, "set local")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1870
=======
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1629
		{ /* SKIP DOC */
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1630
		{ /* SKIP DOC */
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1631
		{
			return unimplemented(sqllex, "set local")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1635
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = sqlDollar[4].union.stmt()
			sqlVAL.union.val.(*Set).SetMode = SetModeClusterSetting
		}
<<<<<<< HEAD
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1874
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1880
		{
			sqlVAL.union.val = &Set{Values: sqlDollar[4].union.exprs()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1895
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1899
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1904
		{
			sqlVAL.union.val = &SetDefaultIsolation{Isolation: sqlDollar[6].union.isoLevel()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1921
		{
			sqlVAL.union.val = &SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1924
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1926
		{
			sqlVAL.union.val = &SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1929
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1933
		{
			sqlVAL.union.val = &Set{Name: sqlDollar[1].union.unresolvedName(), Values: sqlDollar[3].union.exprs()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1937
		{
			sqlVAL.union.val = &Set{Name: sqlDollar[1].union.unresolvedName(), Values: sqlDollar[3].union.exprs()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1941
		{
			sqlVAL.union.val = &Set{Name: sqlDollar[1].union.unresolvedName()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1945
		{
			sqlVAL.union.val = &Set{Name: sqlDollar[1].union.unresolvedName()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1954
=======
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1644
		{
			sqlVAL.union.val = &Set{Values: sqlDollar[4].union.exprs()}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1650
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1654
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:1659
		{
			sqlVAL.union.val = &SetDefaultIsolation{Isolation: sqlDollar[6].union.isoLevel()}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1665
		{
			sqlVAL.union.val = &SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1669
		{
			sqlVAL.union.val = &SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1675
		{
			sqlVAL.union.val = &Set{Name: sqlDollar[1].union.unresolvedName(), Values: sqlDollar[3].union.exprs()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1679
		{
			sqlVAL.union.val = &Set{Name: sqlDollar[1].union.unresolvedName(), Values: sqlDollar[3].union.exprs()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1683
		{
			sqlVAL.union.val = &Set{Name: sqlDollar[1].union.unresolvedName()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1687
		{
			sqlVAL.union.val = &Set{Name: sqlDollar[1].union.unresolvedName()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1696
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = &Set{Name: UnresolvedName{Name("time zone")}, Values: Exprs{sqlDollar[3].union.expr()}}
		}
<<<<<<< HEAD
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1957
		{
			return unimplemented(sqllex, "set from current")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1959
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1965
=======
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1699
		{
			return unimplemented(sqllex, "set from current")
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1706
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = &Set{Name: UnresolvedName{Name("client_encoding")}, Values: Exprs{sqlDollar[2].union.expr()}}
		}
<<<<<<< HEAD
	case 300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1969
=======
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1710
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = &Set{Name: UnresolvedName{Name("client_encoding")}, SetMode: SetModeReset}
		}
<<<<<<< HEAD
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1975
		{
		}
	case 302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1977
		{
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1984
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1996
		{
			sqlVAL.union.val = NewPlaceholder(sqlDollar[1].str)
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2002
		{
			sqlVAL.union.val = SnapshotIsolation
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2006
		{
			sqlVAL.union.val = SnapshotIsolation
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2010
		{
			sqlVAL.union.val = SnapshotIsolation
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2014
=======
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1716
		{
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:1718
		{
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1725
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1737
		{
			sqlVAL.union.val = NewPlaceholder(sqlDollar[1].str)
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1743
		{
			sqlVAL.union.val = SnapshotIsolation
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1747
		{
			sqlVAL.union.val = SnapshotIsolation
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1751
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = SnapshotIsolation
		}
<<<<<<< HEAD
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2018
=======
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1755
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = SerializableIsolation
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2024
=======
		//line sql.y:1759
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = SerializableIsolation
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2028
=======
		//line sql.y:1765
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = Low
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2032
=======
		//line sql.y:1769
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = Normal
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2038
=======
		//line sql.y:1773
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = High
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2042
=======
		//line sql.y:1779
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = MakeDBool(true)
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2046
=======
		//line sql.y:1783
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = MakeDBool(false)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2053
=======
		//line sql.y:1787
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2064
=======
		//line sql.y:1794
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2068
=======
		//line sql.y:1805
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2072
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2077
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2081
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2096
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2097
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2098
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2099
		{
			return helpWith(sqllex, "SHOW CREATE TABLE")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2100
		{
			return helpWith(sqllex, "SHOW CREATE VIEW")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2101
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2102
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2103
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2104
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2105
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2106
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2107
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2108
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2109
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2111
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2112
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2113
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2114
		{
			return helpWith(sqllex, "SHOW")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2121
		{
			sqlVAL.union.val = &Show{Name: sqlDollar[2].str}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2122
		{
			sqlVAL.union.val = &Show{Name: sqlDollar[3].str}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2123
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2134
		{
			sqlVAL.str = "client_encoding"
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2137
		{
			sqlVAL.str = "TIME ZONE"
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2138
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2146
		{
			sqlVAL.union.val = &ShowBackup{Path: sqlDollar[3].union.expr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2149
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2159
		{
			sqlVAL.union.val = &Show{Name: AsStringWithFlags(sqlDollar[4].union.unresolvedName(), FmtBareIdentifiers), ClusterSetting: true}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2163
		{
			sqlVAL.union.val = &Show{Name: "all", ClusterSetting: true}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2166
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2168
		{
			sqlVAL.union.val = &Show{Name: "all", ClusterSetting: true}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2171
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2179
		{
			sqlVAL.union.val = &ShowColumns{Table: sqlDollar[4].union.normalizableTableName()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2182
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2190
		{
			sqlVAL.union.val = &ShowDatabases{}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2193
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2201
		{
			sqlVAL.union.val = &ShowGrants{Targets: sqlDollar[3].union.targetListPtr(), Grantees: sqlDollar[4].union.nameList()}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2204
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2212
=======
		//line sql.y:1809
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1813
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1818
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1822
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1851
		{
			sqlVAL.union.val = &Show{Name: sqlDollar[2].str}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1852
		{
			sqlVAL.union.val = &Show{Name: sqlDollar[3].str}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:1863
		{
			sqlVAL.str = "client_encoding"
		}
	case 274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1866
		{
			sqlVAL.str = "TIME ZONE"
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1870
		{
			sqlVAL.union.val = &ShowBackup{Path: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1876
		{
			sqlVAL.union.val = &Show{Name: AsStringWithFlags(sqlDollar[4].union.unresolvedName(), FmtBareIdentifiers), ClusterSetting: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1880
		{
			sqlVAL.union.val = &Show{Name: "all", ClusterSetting: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1884
		{
			sqlVAL.union.val = &Show{Name: "all", ClusterSetting: true}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1890
		{
			sqlVAL.union.val = &ShowColumns{Table: sqlDollar[4].union.normalizableTableName()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1896
		{
			sqlVAL.union.val = &ShowDatabases{}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1902
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &ShowGrants{Targets: sqlDollar[3].union.targetListPtr(), Grantees: sqlDollar[4].union.nameList()}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2215
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2217
=======
		//line sql.y:1908
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &ShowIndex{Table: sqlDollar[4].union.normalizableTableName()}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2220
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2222
=======
		//line sql.y:1912
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &ShowIndex{Table: sqlDollar[4].union.normalizableTableName()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2225
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2233
=======
		//line sql.y:1916
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &ShowIndex{Table: sqlDollar[4].union.normalizableTableName()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2236
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2238
		{
			sqlVAL.union.val = &ShowConstraints{Table: sqlDollar[4].union.normalizableTableName()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2241
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2249
		{
			sqlVAL.union.val = &ShowQueries{Cluster: true}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2252
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2254
		{
			sqlVAL.union.val = &ShowQueries{Cluster: true}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2258
		{
			sqlVAL.union.val = &ShowQueries{Cluster: false}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2268
		{
			sqlVAL.union.val = &ShowJobs{}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2271
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2281
		{
			sqlVAL.union.val = &ShowTrace{Statement: nil}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2284
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2286
		{
			sqlVAL.union.val = &ShowTrace{Statement: nil, OnlyKVTrace: true}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2289
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2291
		{
			sqlVAL.union.val = &ShowTrace{Statement: sqlDollar[4].union.stmt()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2295
		{
			sqlVAL.union.val = &ShowTrace{Statement: sqlDollar[5].union.stmt(), OnlyKVTrace: true}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2304
		{
			sqlVAL.union.val = &ShowSessions{Cluster: true}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2307
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2309
		{
			sqlVAL.union.val = &ShowSessions{Cluster: true}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2313
		{
			sqlVAL.union.val = &ShowSessions{Cluster: false}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2323
		{
			sqlVAL.union.val = &ShowTables{Database: Name(sqlDollar[4].str)}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2327
		{
			sqlVAL.union.val = &ShowTables{}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2330
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2338
=======
		//line sql.y:1922
		{
			sqlVAL.union.val = &ShowConstraints{Table: sqlDollar[4].union.normalizableTableName()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1926
		{
			sqlVAL.union.val = &ShowConstraints{Table: sqlDollar[4].union.normalizableTableName()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1932
		{
			sqlVAL.union.val = &ShowQueries{Cluster: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1936
		{
			sqlVAL.union.val = &ShowQueries{Cluster: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1940
		{
			sqlVAL.union.val = &ShowQueries{Cluster: false}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1946
		{
			sqlVAL.union.val = &ShowJobs{}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1952
		{
			sqlVAL.union.val = &ShowTrace{Statement: nil}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1956
		{
			sqlVAL.union.val = &ShowTrace{Statement: nil, OnlyKVTrace: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1960
		{
			sqlVAL.union.val = &ShowTrace{Statement: sqlDollar[4].union.stmt()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:1964
		{
			sqlVAL.union.val = &ShowTrace{Statement: sqlDollar[5].union.stmt(), OnlyKVTrace: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1970
		{
			sqlVAL.union.val = &ShowSessions{Cluster: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1974
		{
			sqlVAL.union.val = &ShowSessions{Cluster: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1978
		{
			sqlVAL.union.val = &ShowSessions{Cluster: false}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1984
		{
			sqlVAL.union.val = &ShowTables{Database: Name(sqlDollar[4].str)}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:1988
		{
			sqlVAL.union.val = &ShowTables{}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:1994
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = &Show{Name: "TRANSACTION ISOLATION LEVEL"}
		}
<<<<<<< HEAD
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2342
=======
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:1998
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = &Show{Name: "TRANSACTION PRIORITY"}
		}
<<<<<<< HEAD
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2346
=======
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2002
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = &ShowTransactionStatus{}
		}
<<<<<<< HEAD
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2349
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2357
		{
			sqlVAL.union.val = &ShowCreateTable{Table: sqlDollar[4].union.normalizableTableName()}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2360
		{
			return helpWith(sqllex, "SHOW CREATE TABLE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2368
		{
			sqlVAL.union.val = &ShowCreateView{View: sqlDollar[4].union.normalizableTableName()}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2371
		{
			return helpWith(sqllex, "SHOW CREATE VIEW")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2379
		{
			sqlVAL.union.val = &ShowUsers{}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2382
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2386
=======
	case 303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2008
		{
			sqlVAL.union.val = &ShowCreateTable{Table: sqlDollar[4].union.normalizableTableName()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2014
		{
			sqlVAL.union.val = &ShowCreateView{View: sqlDollar[4].union.normalizableTableName()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2020
		{
			sqlVAL.union.val = &ShowUsers{}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2026
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = &ShowRanges{Table: sqlDollar[5].union.newNormalizableTableName()}
		}
<<<<<<< HEAD
	case 428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2390
=======
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2030
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = &ShowRanges{Index: sqlDollar[5].union.tableWithIdx()}
		}
<<<<<<< HEAD
	case 429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2394
=======
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2034
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = &ShowFingerprints{Table: sqlDollar[5].union.newNormalizableTableName()}
		}
<<<<<<< HEAD
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2400
		{
			sqlVAL.union.val = &Help{Name: Name(sqlDollar[2].str)}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2406
=======
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2040
		{
			sqlVAL.union.val = &Help{Name: Name(sqlDollar[2].str)}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2046
>>>>>>> Fix build errors
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
<<<<<<< HEAD
	case 432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2411
		{
			sqlVAL.union.val = (*TargetList)(nil)
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2417
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2421
		{
			sqlVAL.union.val = NameList(nil)
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2431
=======
	case 311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2051
		{
			sqlVAL.union.val = (*TargetList)(nil)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2057
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2061
		{
			sqlVAL.union.val = NameList(nil)
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2068
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &PauseJob{ID: sqlDollar[3].union.expr()}
		}
<<<<<<< HEAD
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2434
		{
			return helpWith(sqllex, "PAUSE JOB")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2469
		{
			sqlVAL.union.val = &CreateTable{Table: sqlDollar[3].union.normalizableTableName(), IfNotExists: false, Interleave: sqlDollar[7].union.interleave(), Defs: sqlDollar[5].union.tblDefs(), AsSource: nil, AsColumnNames: nil}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:2473
		{
			sqlVAL.union.val = &CreateTable{Table: sqlDollar[6].union.normalizableTableName(), IfNotExists: true, Interleave: sqlDollar[10].union.interleave(), Defs: sqlDollar[8].union.tblDefs(), AsSource: nil, AsColumnNames: nil}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2479
		{
			sqlVAL.union.val = &CreateTable{Table: sqlDollar[3].union.normalizableTableName(), IfNotExists: false, Interleave: nil, Defs: nil, AsSource: sqlDollar[6].union.slct(), AsColumnNames: sqlDollar[4].union.nameList()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
		//line sql.y:2483
		{
			sqlVAL.union.val = &CreateTable{Table: sqlDollar[6].union.normalizableTableName(), IfNotExists: true, Interleave: nil, Defs: nil, AsSource: sqlDollar[9].union.slct(), AsColumnNames: sqlDollar[7].union.nameList()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2490
		{
			sqlVAL.union.val = TableDefs(nil)
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2496
		{
			sqlVAL.union.val = TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2500
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2506
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2512
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2518
=======
	case 315:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2075
		{
			sqlVAL.union.val = &CreateTable{Table: sqlDollar[3].union.normalizableTableName(), IfNotExists: false, Interleave: sqlDollar[7].union.interleave(), Defs: sqlDollar[5].union.tblDefs(), AsSource: nil, AsColumnNames: nil}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:2079
		{
			sqlVAL.union.val = &CreateTable{Table: sqlDollar[6].union.normalizableTableName(), IfNotExists: true, Interleave: sqlDollar[10].union.interleave(), Defs: sqlDollar[8].union.tblDefs(), AsSource: nil, AsColumnNames: nil}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2085
		{
			sqlVAL.union.val = &CreateTable{Table: sqlDollar[3].union.normalizableTableName(), IfNotExists: false, Interleave: nil, Defs: nil, AsSource: sqlDollar[6].union.slct(), AsColumnNames: sqlDollar[4].union.nameList()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
		//line sql.y:2089
		{
			sqlVAL.union.val = &CreateTable{Table: sqlDollar[6].union.normalizableTableName(), IfNotExists: true, Interleave: nil, Defs: nil, AsSource: sqlDollar[9].union.slct(), AsColumnNames: sqlDollar[7].union.nameList()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2096
		{
			sqlVAL.union.val = TableDefs(nil)
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2102
		{
			sqlVAL.union.val = TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2112
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2118
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2124
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &InterleaveDef{
				Parent:       sqlDollar[4].union.newNormalizableTableName(),
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
<<<<<<< HEAD
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2526
		{
			sqlVAL.union.val = (*InterleaveDef)(nil)
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2533
=======
	case 328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2132
		{
			sqlVAL.union.val = (*InterleaveDef)(nil)
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2139
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = DropCascade
		}
<<<<<<< HEAD
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2537
=======
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2143
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = DropRestrict
		}
<<<<<<< HEAD
	case 453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2541
		{
			sqlVAL.union.val = DropDefault
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2547
=======
	case 331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2147
		{
			sqlVAL.union.val = DropDefault
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2153
>>>>>>> Fix build errors
		{
			tableDef, err := newColumnTableDef(Name(sqlDollar[1].str), sqlDollar[2].union.colType(), sqlDollar[3].union.colQuals())
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = tableDef
		}
<<<<<<< HEAD
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2558
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2562
		{
			sqlVAL.union.val = []NamedColumnQualification(nil)
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2568
		{
			sqlVAL.union.val = NamedColumnQualification{Name: Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2572
		{
			sqlVAL.union.val = NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2576
		{
			sqlVAL.union.val = NamedColumnQualification{Qualification: ColumnCollation(sqlDollar[2].str)}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2580
		{
			sqlVAL.union.val = NamedColumnQualification{Qualification: &ColumnFamilyConstraint{Family: Name(sqlDollar[2].str)}}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2584
		{
			sqlVAL.union.val = NamedColumnQualification{Qualification: &ColumnFamilyConstraint{Family: Name(sqlDollar[3].str), Create: true}}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2588
		{
			sqlVAL.union.val = NamedColumnQualification{Qualification: &ColumnFamilyConstraint{Family: Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2606
		{
			sqlVAL.union.val = NotNullConstraint{}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2610
		{
			sqlVAL.union.val = NullConstraint{}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2614
		{
			sqlVAL.union.val = UniqueConstraint{}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2618
		{
			sqlVAL.union.val = PrimaryKeyConstraint{}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2622
		{
			sqlVAL.union.val = &ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2626
		{
			sqlVAL.union.val = &ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2630
=======
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2164
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2168
		{
			sqlVAL.union.val = []NamedColumnQualification(nil)
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2174
		{
			sqlVAL.union.val = NamedColumnQualification{Name: Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2178
		{
			sqlVAL.union.val = NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2182
		{
			sqlVAL.union.val = NamedColumnQualification{Qualification: ColumnCollation(sqlDollar[2].str)}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2186
		{
			sqlVAL.union.val = NamedColumnQualification{Qualification: &ColumnFamilyConstraint{Family: Name(sqlDollar[2].str)}}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2190
		{
			sqlVAL.union.val = NamedColumnQualification{Qualification: &ColumnFamilyConstraint{Family: Name(sqlDollar[3].str), Create: true}}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2194
		{
			sqlVAL.union.val = NamedColumnQualification{Qualification: &ColumnFamilyConstraint{Family: Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2212
		{
			sqlVAL.union.val = NotNullConstraint{}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2216
		{
			sqlVAL.union.val = NullConstraint{}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2220
		{
			sqlVAL.union.val = UniqueConstraint{}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2224
		{
			sqlVAL.union.val = PrimaryKeyConstraint{}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2228
		{
			sqlVAL.union.val = &ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2232
		{
			sqlVAL.union.val = &ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2236
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &ColumnFKConstraint{
				Table: sqlDollar[2].union.normalizableTableName(),
				Col:   Name(sqlDollar[3].str),
			}
		}
<<<<<<< HEAD
	case 470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2639
=======
	case 348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2245
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &IndexTableDef{
				Name:       Name(sqlDollar[2].str),
				Columns:    sqlDollar[4].union.idxElems(),
				Storing:    sqlDollar[6].union.nameList(),
				Interleave: sqlDollar[7].union.interleave(),
			}
		}
<<<<<<< HEAD
	case 471:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2648
=======
	case 349:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2254
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &UniqueConstraintTableDef{
				IndexTableDef: IndexTableDef{
					Name:       Name(sqlDollar[3].str),
					Columns:    sqlDollar[5].union.idxElems(),
					Storing:    sqlDollar[7].union.nameList(),
					Interleave: sqlDollar[8].union.interleave(),
				},
			}
		}
<<<<<<< HEAD
	case 472:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2661
=======
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2267
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &FamilyTableDef{
				Name:    Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
<<<<<<< HEAD
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2673
=======
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2279
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(ConstraintTableDef).setName(Name(sqlDollar[2].str))
		}
<<<<<<< HEAD
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2678
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2684
=======
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2284
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2290
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
<<<<<<< HEAD
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2690
=======
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2296
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &UniqueConstraintTableDef{
				IndexTableDef: IndexTableDef{
					Columns:    sqlDollar[3].union.idxElems(),
					Storing:    sqlDollar[5].union.nameList(),
					Interleave: sqlDollar[6].union.interleave(),
				},
			}
		}
<<<<<<< HEAD
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2700
=======
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2306
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &UniqueConstraintTableDef{
				IndexTableDef: IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
<<<<<<< HEAD
	case 478:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:2710
=======
	case 356:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:2316
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &ForeignKeyConstraintTableDef{
				Table:    sqlDollar[7].union.normalizableTableName(),
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
			}
		}
<<<<<<< HEAD
	case 481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2733
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2737
		{
			sqlVAL.union.val = NameList(nil)
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2743
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2747
		{
			sqlVAL.union.val = NameList(nil)
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2752
		{
			return unimplemented(sqllex, "match full")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2753
		{
			return unimplemented(sqllex, "match partial")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2754
		{
			return unimplemented(sqllex, "match simple")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2755
		{
		}
	case 489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2761
=======
	case 359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2339
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2343
		{
			sqlVAL.union.val = NameList(nil)
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2349
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2353
		{
			sqlVAL.union.val = NameList(nil)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2358
		{
			return unimplemented(sqllex, "match full")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2359
		{
			return unimplemented(sqllex, "match partial")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2360
		{
			return unimplemented(sqllex, "match simple")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2361
>>>>>>> Fix build errors
		{
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2762
		{
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2763
=======
		//line sql.y:2367
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2368
>>>>>>> Fix build errors
		{
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2764
		{
		}
	case 493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2765
		{
		}
	case 494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2768
=======
		//line sql.y:2369
		{
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2370
		{
		}
	case 371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2371
>>>>>>> Fix build errors
		{
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
<<<<<<< HEAD
		//line sql.y:2771
		{
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2774
		{
			return unimplemented(sqllex, "no action")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2777
		{
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2778
		{
			return unimplemented(sqllex, "action cascade")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2779
		{
			return unimplemented(sqllex, "action set null")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2780
		{
			return unimplemented(sqllex, "action set default")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2784
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2788
		{
			sqlVAL.union.val = &NumVal{Value: constant.UnaryOp(token.SUB, sqlDollar[2].union.numVal().Value, 0)}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2792
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2802
		{
			sqlVAL.union.val = &Truncate{Tables: sqlDollar[3].union.tableNameReferences(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2805
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2813
		{
			sqlVAL.union.val = &CreateUser{Name: Name(sqlDollar[3].str), Password: sqlDollar[4].union.strPtr()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2816
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2820
=======
		//line sql.y:2374
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2377
		{
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2380
		{
			return unimplemented(sqllex, "no action")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2383
		{
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2384
		{
			return unimplemented(sqllex, "action cascade")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2385
		{
			return unimplemented(sqllex, "action set null")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2386
		{
			return unimplemented(sqllex, "action set default")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2390
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2394
		{
			sqlVAL.union.val = &NumVal{Value: constant.UnaryOp(token.SUB, sqlDollar[2].union.numVal().Value, 0)}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2398
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2405
		{
			sqlVAL.union.val = &Truncate{Tables: sqlDollar[3].union.tableNameReferences(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2412
		{
			sqlVAL.union.val = &CreateUser{Name: Name(sqlDollar[3].str), Password: sqlDollar[4].union.strPtr()}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2418
>>>>>>> Fix build errors
		{
			pwd := sqlDollar[3].str
			sqlVAL.union.val = &pwd
		}
<<<<<<< HEAD
	case 509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2824
		{
			sqlVAL.union.val = (*string)(nil)
		}
	case 510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2834
=======
	case 385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2422
		{
			sqlVAL.union.val = (*string)(nil)
		}
	case 386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2429
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &CreateView{
				Name:        sqlDollar[3].union.normalizableTableName(),
				ColumnNames: sqlDollar[4].union.nameList(),
				AsSource:    sqlDollar[6].union.slct(),
			}
		}
<<<<<<< HEAD
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2841
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
		//line sql.y:2859
=======
	case 387:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
		//line sql.y:2442
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &CreateIndex{
				Name:       Name(sqlDollar[4].str),
				Table:      sqlDollar[6].union.normalizableTableName(),
				Unique:     sqlDollar[2].union.bool(),
				Columns:    sqlDollar[8].union.idxElems(),
				Storing:    sqlDollar[10].union.nameList(),
				Interleave: sqlDollar[11].union.interleave(),
			}
		}
<<<<<<< HEAD
	case 513:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
		//line sql.y:2870
=======
	case 388:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
		//line sql.y:2453
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &CreateIndex{
				Name:        Name(sqlDollar[7].str),
				Table:       sqlDollar[9].union.normalizableTableName(),
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[11].union.idxElems(),
				Storing:     sqlDollar[13].union.nameList(),
				Interleave:  sqlDollar[14].union.interleave(),
			}
		}
<<<<<<< HEAD
	case 514:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2881
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2885
		{
			sqlVAL.union.val = true
		}
	case 516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2889
		{
			sqlVAL.union.val = false
		}
	case 517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2895
		{
			sqlVAL.union.val = IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2899
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2908
		{
			sqlVAL.union.val = IndexElem{Column: Name(sqlDollar[1].str), Direction: sqlDollar[3].union.dir()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2911
		{
			return unimplemented(sqllex, "index_elem func expr")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2912
		{
			return unimplemented(sqllex, "index_elem a_expr")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2915
		{
			return unimplementedWithIssue(sqllex, 16619)
		}
	case 523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2916
		{
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2920
		{
			sqlVAL.union.val = Ascending
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2924
		{
			sqlVAL.union.val = Descending
		}
	case 526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2928
		{
			sqlVAL.union.val = DefaultDirection
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2934
		{
			sqlVAL.union.val = &RenameDatabase{Name: Name(sqlDollar[3].str), NewName: Name(sqlDollar[6].str)}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2940
		{
			sqlVAL.union.val = &RenameTable{Name: sqlDollar[3].union.normalizableTableName(), NewName: sqlDollar[6].union.normalizableTableName(), IfExists: false, IsView: false}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2944
		{
			sqlVAL.union.val = &RenameTable{Name: sqlDollar[5].union.normalizableTableName(), NewName: sqlDollar[8].union.normalizableTableName(), IfExists: true, IsView: false}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2948
		{
			sqlVAL.union.val = &RenameColumn{Table: sqlDollar[3].union.normalizableTableName(), Name: Name(sqlDollar[6].str), NewName: Name(sqlDollar[8].str), IfExists: false}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:2952
		{
			sqlVAL.union.val = &RenameColumn{Table: sqlDollar[5].union.normalizableTableName(), Name: Name(sqlDollar[8].str), NewName: Name(sqlDollar[10].str), IfExists: true}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2956
		{
			return unimplemented(sqllex, "alter table rename constraint")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:2958
		{
			return unimplemented(sqllex, "alter table rename constraint")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2962
		{
			sqlVAL.union.val = &RenameTable{Name: sqlDollar[3].union.normalizableTableName(), NewName: sqlDollar[6].union.normalizableTableName(), IfExists: false, IsView: true}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2966
		{
			sqlVAL.union.val = &RenameTable{Name: sqlDollar[5].union.normalizableTableName(), NewName: sqlDollar[8].union.normalizableTableName(), IfExists: true, IsView: true}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2972
		{
			sqlVAL.union.val = &RenameIndex{Index: sqlDollar[3].union.tableWithIdx(), NewName: Name(sqlDollar[6].str), IfExists: false}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2976
		{
			sqlVAL.union.val = &RenameIndex{Index: sqlDollar[5].union.tableWithIdx(), NewName: Name(sqlDollar[8].str), IfExists: true}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2982
		{
			sqlVAL.union.val = true
		}
	case 539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2986
		{
			sqlVAL.union.val = false
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2991
		{
		}
	case 541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2992
		{
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3000
		{
			sqlVAL.union.val = &ReleaseSavepoint{Savepoint: sqlDollar[2].str}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3003
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3011
=======
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2467
		{
			sqlVAL.union.val = true
		}
	case 390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2471
		{
			sqlVAL.union.val = false
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2477
		{
			sqlVAL.union.val = IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2490
		{
			sqlVAL.union.val = IndexElem{Column: Name(sqlDollar[1].str), Direction: sqlDollar[3].union.dir()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2493
		{
			return unimplemented(sqllex, "index_elem func expr")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2494
		{
			return unimplemented(sqllex, "index_elem a_expr")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2497
		{
			return unimplementedWithIssue(sqllex, 16619)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2498
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2502
		{
			sqlVAL.union.val = Ascending
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2506
		{
			sqlVAL.union.val = Descending
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2510
		{
			sqlVAL.union.val = DefaultDirection
		}
	case 401:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2516
		{
			sqlVAL.union.val = &RenameDatabase{Name: Name(sqlDollar[3].str), NewName: Name(sqlDollar[6].str)}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2522
		{
			sqlVAL.union.val = &RenameTable{Name: sqlDollar[3].union.normalizableTableName(), NewName: sqlDollar[6].union.normalizableTableName(), IfExists: false, IsView: false}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2526
		{
			sqlVAL.union.val = &RenameTable{Name: sqlDollar[5].union.normalizableTableName(), NewName: sqlDollar[8].union.normalizableTableName(), IfExists: true, IsView: false}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2530
		{
			sqlVAL.union.val = &RenameColumn{Table: sqlDollar[3].union.normalizableTableName(), Name: Name(sqlDollar[6].str), NewName: Name(sqlDollar[8].str), IfExists: false}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:2534
		{
			sqlVAL.union.val = &RenameColumn{Table: sqlDollar[5].union.normalizableTableName(), Name: Name(sqlDollar[8].str), NewName: Name(sqlDollar[10].str), IfExists: true}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2538
		{
			return unimplemented(sqllex, "alter table rename constraint")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
		//line sql.y:2540
		{
			return unimplemented(sqllex, "alter table rename constraint")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2544
		{
			sqlVAL.union.val = &RenameTable{Name: sqlDollar[3].union.normalizableTableName(), NewName: sqlDollar[6].union.normalizableTableName(), IfExists: false, IsView: true}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2548
		{
			sqlVAL.union.val = &RenameTable{Name: sqlDollar[5].union.normalizableTableName(), NewName: sqlDollar[8].union.normalizableTableName(), IfExists: true, IsView: true}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2554
		{
			sqlVAL.union.val = &RenameIndex{Index: sqlDollar[3].union.tableWithIdx(), NewName: Name(sqlDollar[6].str), IfExists: false}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2558
		{
			sqlVAL.union.val = &RenameIndex{Index: sqlDollar[5].union.tableWithIdx(), NewName: Name(sqlDollar[8].str), IfExists: true}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2564
		{
			sqlVAL.union.val = true
		}
	case 413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2568
		{
			sqlVAL.union.val = false
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2573
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2574
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2578
		{
			sqlVAL.union.val = &ReleaseSavepoint{Savepoint: sqlDollar[2].str}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2585
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &ResumeJob{ID: sqlDollar[3].union.expr()}
		}
<<<<<<< HEAD
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3014
		{
			return helpWith(sqllex, "RESUME JOB")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3022
		{
			sqlVAL.union.val = &Savepoint{Name: sqlDollar[2].str}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3025
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3029
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3030
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3031
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3046
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3049
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3051
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3054
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3064
		{
			sqlVAL.union.val = &CommitTransaction{}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3067
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3069
		{
			sqlVAL.union.val = &CommitTransaction{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3072
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3080
=======
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2591
		{
			sqlVAL.union.val = &Savepoint{Name: sqlDollar[2].str}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2603
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2607
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2613
		{
			sqlVAL.union.val = &CommitTransaction{}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2617
		{
			sqlVAL.union.val = &CommitTransaction{}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2623
>>>>>>> Fix build errors
		{
			if sqlDollar[2].str != "" {
				sqlVAL.union.val = &RollbackToSavepoint{Savepoint: sqlDollar[2].str}
			} else {
				sqlVAL.union.val = &RollbackTransaction{}
			}
		}
<<<<<<< HEAD
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3087
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3090
		{
		}
	case 565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3091
		{
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3095
		{
			sqlVAL.str = ""
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3099
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3103
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 569:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3107
		{
			sqlVAL.str = ""
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3113
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3117
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3123
		{
			sqlVAL.union.val = &BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3127
		{
			sqlVAL.union.val = &BeginTransaction{}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3133
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3138
=======
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2632
		{
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2633
		{
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2637
		{
			sqlVAL.str = ""
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2641
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2645
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2649
		{
			sqlVAL.str = ""
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2655
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2659
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2665
		{
			sqlVAL.union.val = &BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2669
		{
			sqlVAL.union.val = &BeginTransaction{}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2675
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2679
>>>>>>> Fix build errors
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.merge(b)
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = a
		}
<<<<<<< HEAD
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3147
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[2].union.transactionModes()
			err := a.merge(b)
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = a
		}
	case 577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3157
		{
			sqlVAL.union.val = TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3161
		{
			sqlVAL.union.val = TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3165
		{
			sqlVAL.union.val = TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3171
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3177
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3183
		{
			sqlVAL.union.val = ReadOnly
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3187
		{
			sqlVAL.union.val = ReadWrite
		}
	case 584:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:3197
=======
	case 439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2689
		{
			sqlVAL.union.val = TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2693
		{
			sqlVAL.union.val = TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2697
		{
			sqlVAL.union.val = TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2703
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2709
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2715
		{
			sqlVAL.union.val = ReadOnly
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2719
		{
			sqlVAL.union.val = ReadWrite
		}
	case 446:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2725
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &CreateDatabase{
				Name:     Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
<<<<<<< HEAD
	case 585:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
		//line sql.y:3207
=======
	case 447:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
		//line sql.y:2735
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &CreateDatabase{
				IfNotExists: true,
				Name:        Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
<<<<<<< HEAD
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3217
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3221
		{
			sqlVAL.union.val = &CreateFunction{}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3227
=======
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2748
		{
			sqlVAL.union.val = &CreateFunction{}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2754
		{
			sqlVAL.union.val = &CallProcedure{
				Name: sqlDollar[2].str,
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
		//line sql.y:2765
		{
			sqlVAL.union.val = &CreateProcedure{
				Name:       sqlDollar[3].str,
				Parameters: sqlDollar[5].union.parameters(),
				Body:       sqlDollar[8].union.stmts(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2776
		{
			sqlVAL.union.val = ParameterList(nil)
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2782
		{
			sqlVAL.union.val = append(sqlDollar[1].union.parameters(), sqlDollar[3].union.parameter())
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2786
		{
			sqlVAL.union.val = ParameterList{sqlDollar[1].union.parameter()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2792
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = Parameter{
				Name: sqlDollar[2].str,
				Type: sqlDollar[1].str,
			}
		}
<<<<<<< HEAD
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3233
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3237
		{
			sqlVAL.str = ""
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3243
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3247
		{
			sqlVAL.str = ""
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3253
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3257
		{
			sqlVAL.str = ""
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3263
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3267
		{
			sqlVAL.str = ""
		}
	case 597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3272
		{
		}
	case 598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3273
		{
		}
	case 599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:3285
=======
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2801
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2807
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2811
		{
			sqlVAL.str = ""
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2817
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2821
		{
			sqlVAL.str = ""
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2827
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2831
		{
			sqlVAL.str = ""
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2837
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2841
		{
			sqlVAL.str = ""
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2846
		{
		}
	case 466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2847
		{
		}
	case 467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2851
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*Insert).Returning = sqlDollar[6].union.retClause()
		}
<<<<<<< HEAD
	case 600:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:3291
=======
	case 468:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:2857
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*Insert).Returning = sqlDollar[7].union.retClause()
		}
<<<<<<< HEAD
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3297
		{
			return helpWith(sqllex, "INSERT")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:3308
=======
	case 469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:2866
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*Insert).OnConflict = &OnConflict{}
			sqlVAL.union.val.(*Insert).Returning = sqlDollar[6].union.retClause()
		}
<<<<<<< HEAD
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3314
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3318
		{
			sqlVAL.union.val = sqlDollar[1].union.newNormalizableTableName()
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3326
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: sqlDollar[1].union.newNormalizableTableName(), As: AliasClause{Alias: Name(sqlDollar[3].str)}}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3332
		{
			sqlVAL.union.val = &Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3336
		{
			sqlVAL.union.val = &Insert{Columns: sqlDollar[2].union.unresolvedNames(), Rows: sqlDollar[4].union.slct()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3340
		{
			sqlVAL.union.val = &Insert{Rows: &Select{}}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:3346
		{
			sqlVAL.union.val = &OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: newWhere(astWhere, sqlDollar[8].union.expr())}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3350
		{
			sqlVAL.union.val = &OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3356
=======
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2879
		{
			sqlVAL.union.val = sqlDollar[1].union.newNormalizableTableName()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2883
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: sqlDollar[1].union.newNormalizableTableName(), As: AliasClause{Alias: Name(sqlDollar[3].str)}}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2889
		{
			sqlVAL.union.val = &Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2893
		{
			sqlVAL.union.val = &Insert{Columns: sqlDollar[2].union.unresolvedNames(), Rows: sqlDollar[4].union.slct()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2897
		{
			sqlVAL.union.val = &Insert{Rows: &Select{}}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2903
		{
			sqlVAL.union.val = &OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: newWhere(astWhere, sqlDollar[8].union.expr())}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2907
		{
			sqlVAL.union.val = &OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:2913
>>>>>>> Fix build errors
		{
			// TODO(dan): Support the where_clause.
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
<<<<<<< HEAD
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3360
		{
			return unimplemented(sqllex, "on conflict on constraint")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3362
		{
			sqlVAL.union.val = NameList(nil)
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3368
=======
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2917
		{
			return unimplemented(sqllex, "on conflict on constraint")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2919
		{
			sqlVAL.union.val = NameList(nil)
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2925
>>>>>>> Fix build errors
		{
			ret := ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
<<<<<<< HEAD
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3373
		{
			sqlVAL.union.val = returningNothingClause
		}
	case 616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3377
		{
			sqlVAL.union.val = AbsentReturningClause
		}
	case 617:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:3388
		{
			sqlVAL.union.val = &Update{Table: sqlDollar[3].union.tblExpr(), Exprs: sqlDollar[5].union.updateExprs(), Where: newWhere(astWhere, sqlDollar[7].union.expr()), Returning: sqlDollar[8].union.retClause()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3391
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3395
		{
			return unimplementedWithIssue(sqllex, 7841)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3396
		{
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3400
		{
			sqlVAL.union.val = UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3414
		{
			sqlVAL.union.val = &UpdateExpr{Names: UnresolvedNames{sqlDollar[1].union.unresolvedName()}, Expr: sqlDollar[3].union.expr()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3426
		{
			sqlVAL.union.val = &UpdateExpr{Tuple: true, Names: sqlDollar[2].union.unresolvedNames(), Expr: &Tuple{Exprs: sqlDollar[5].union.exprs()}}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3430
		{
			sqlVAL.union.val = &UpdateExpr{Tuple: true, Names: sqlDollar[2].union.unresolvedNames(), Expr: &Subquery{Select: sqlDollar[5].union.selectStmt()}}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3473
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3479
		{
			sqlVAL.union.val = &ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3483
		{
			sqlVAL.union.val = &ParenSelect{Select: &Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3498
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3502
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3506
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3510
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[2].union.selectStmt()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3514
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3518
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3525
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3560
		{
			return helpWith(sqllex, "SELECT")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3561
		{
			return helpWith(sqllex, "VALUES")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3562
		{
			return helpWith(sqllex, "TABLE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:3584
=======
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2930
		{
			sqlVAL.union.val = returningNothingClause
		}
	case 482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2934
		{
			sqlVAL.union.val = AbsentReturningClause
		}
	case 483:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:2941
		{
			sqlVAL.union.val = &Update{Table: sqlDollar[3].union.tblExpr(), Exprs: sqlDollar[5].union.updateExprs(), Where: newWhere(astWhere, sqlDollar[7].union.expr()), Returning: sqlDollar[8].union.retClause()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:2947
		{
			return unimplementedWithIssue(sqllex, 7841)
		}
	case 485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:2948
		{
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:2952
		{
			sqlVAL.union.val = UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2956
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:2966
		{
			sqlVAL.union.val = &UpdateExpr{Names: UnresolvedNames{sqlDollar[1].union.unresolvedName()}, Expr: sqlDollar[3].union.expr()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2978
		{
			sqlVAL.union.val = &UpdateExpr{Tuple: true, Names: sqlDollar[2].union.unresolvedNames(), Expr: &Tuple{Exprs: sqlDollar[5].union.exprs()}}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:2982
		{
			sqlVAL.union.val = &UpdateExpr{Tuple: true, Names: sqlDollar[2].union.unresolvedNames(), Expr: &Subquery{Select: sqlDollar[5].union.selectStmt()}}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3026
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3032
		{
			sqlVAL.union.val = &ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3036
		{
			sqlVAL.union.val = &ParenSelect{Select: &Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3051
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3055
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3059
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3063
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[2].union.selectStmt()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3067
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3071
		{
			sqlVAL.union.val = &Select{Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:3105
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   newWhere(astWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  newWhere(astHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
<<<<<<< HEAD
	case 649:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:3597
=======
	case 506:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:3118
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    newWhere(astWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   newWhere(astHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
<<<<<<< HEAD
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3608
		{
			return helpWith(sqllex, "SELECT")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3612
=======
	case 509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3132
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &UnionClause{
				Type:  UnionOp,
				Left:  &Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
<<<<<<< HEAD
	case 652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3621
=======
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3141
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &UnionClause{
				Type:  IntersectOp,
				Left:  &Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
<<<<<<< HEAD
	case 653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3630
=======
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3150
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &UnionClause{
				Type:  ExceptOp,
				Left:  &Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
<<<<<<< HEAD
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3645
=======
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3161
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &SelectClause{
				Exprs:       SelectExprs{starSelectExpr()},
				From:        &From{Tables: TableExprs{sqlDollar[2].union.tblExpr()}},
				tableSelect: true,
			}
		}
<<<<<<< HEAD
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3652
		{
			return helpWith(sqllex, "TABLE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3663
		{
			return unimplemented(sqllex, "with cte_list")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3664
		{
			return unimplemented(sqllex, "with cte_list")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3665
		{
			return unimplemented(sqllex, "with cte_list")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3668
		{
			return unimplemented(sqllex, "cte_list")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3669
		{
			return unimplemented(sqllex, "cte_list")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:3672
		{
			return unimplemented(sqllex, "cte")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3675
		{
		}
	case 663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3676
		{
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3679
		{
			return unimplemented(sqllex, "with_clause")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3680
		{
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3683
		{
		}
	case 667:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3684
		{
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3688
		{
			sqlVAL.union.val = true
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3692
		{
			sqlVAL.union.val = false
		}
	case 670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3696
		{
			sqlVAL.union.val = false
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3702
		{
			sqlVAL.union.val = true
		}
	case 672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3707
		{
		}
	case 673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3708
		{
		}
	case 674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3712
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3716
		{
			sqlVAL.union.val = OrderBy(nil)
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3722
		{
			sqlVAL.union.val = OrderBy(sqlDollar[3].union.orders())
		}
	case 677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3728
		{
			sqlVAL.union.val = []*Order{sqlDollar[1].union.order()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3738
		{
			sqlVAL.union.val = &Order{OrderType: OrderByColumn, Expr: sqlDollar[1].union.expr(), Direction: sqlDollar[2].union.dir()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3742
		{
			sqlVAL.union.val = &Order{OrderType: OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: sqlDollar[3].union.normalizableTableName()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3746
		{
			sqlVAL.union.val = &Order{OrderType: OrderByIndex, Direction: sqlDollar[5].union.dir(), Table: sqlDollar[2].union.normalizableTableName(), Index: Name(sqlDollar[4].str)}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3755
=======
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3178
		{
			return unimplemented(sqllex, "with cte_list")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3179
		{
			return unimplemented(sqllex, "with cte_list")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3180
		{
			return unimplemented(sqllex, "with cte_list")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3183
		{
			return unimplemented(sqllex, "cte_list")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3184
		{
			return unimplemented(sqllex, "cte_list")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:3187
		{
			return unimplemented(sqllex, "cte")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3190
		{
		}
	case 520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3191
		{
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3194
		{
			return unimplemented(sqllex, "with_clause")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3195
		{
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3198
		{
		}
	case 524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3199
		{
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3203
		{
			sqlVAL.union.val = true
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3207
		{
			sqlVAL.union.val = false
		}
	case 527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3211
		{
			sqlVAL.union.val = false
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3217
		{
			sqlVAL.union.val = true
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3222
		{
		}
	case 530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3223
		{
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3227
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3231
		{
			sqlVAL.union.val = OrderBy(nil)
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3237
		{
			sqlVAL.union.val = OrderBy(sqlDollar[3].union.orders())
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3243
		{
			sqlVAL.union.val = []*Order{sqlDollar[1].union.order()}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3253
		{
			sqlVAL.union.val = &Order{OrderType: OrderByColumn, Expr: sqlDollar[1].union.expr(), Direction: sqlDollar[2].union.dir()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3257
		{
			sqlVAL.union.val = &Order{OrderType: OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: sqlDollar[3].union.normalizableTableName()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3261
		{
			sqlVAL.union.val = &Order{OrderType: OrderByIndex, Direction: sqlDollar[5].union.dir(), Table: sqlDollar[2].union.normalizableTableName(), Index: Name(sqlDollar[4].str)}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3270
>>>>>>> Fix build errors
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
<<<<<<< HEAD
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3764
=======
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3279
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*Limit).Count = sqlDollar[2].union.limit().Count
			}
		}
<<<<<<< HEAD
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3775
=======
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3290
>>>>>>> Fix build errors
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*Limit)(nil)
			} else {
				sqlVAL.union.val = &Limit{Count: sqlDollar[2].union.expr()}
			}
		}
<<<<<<< HEAD
	case 687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3784
		{
			sqlVAL.union.val = &Limit{Count: sqlDollar[3].union.expr()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3790
		{
			sqlVAL.union.val = &Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3797
		{
			sqlVAL.union.val = &Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3804
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3813
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3817
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3821
		{
			sqlVAL.union.val = &NumVal{Value: constant.MakeInt64(1)}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3827
		{
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3828
		{
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3831
		{
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3832
		{
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3854
		{
			sqlVAL.union.val = GroupBy(sqlDollar[3].union.exprs())
		}
	case 700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3858
		{
			sqlVAL.union.val = GroupBy(nil)
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3864
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 702:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3868
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3887
		{
			sqlVAL.union.val = &ValuesClause{[]*Tuple{{Exprs: sqlDollar[2].union.exprs()}}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3890
		{
			return helpWith(sqllex, "VALUES")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3892
=======
	case 544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3299
		{
			sqlVAL.union.val = &Limit{Count: sqlDollar[3].union.expr()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3305
		{
			sqlVAL.union.val = &Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3312
		{
			sqlVAL.union.val = &Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3319
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3328
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3332
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3336
		{
			sqlVAL.union.val = &NumVal{Value: constant.MakeInt64(1)}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3342
		{
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3343
		{
		}
	case 554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3346
		{
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3347
		{
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3369
		{
			sqlVAL.union.val = GroupBy(sqlDollar[3].union.exprs())
		}
	case 557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3373
		{
			sqlVAL.union.val = GroupBy(nil)
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3379
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3383
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3397
		{
			sqlVAL.union.val = &ValuesClause{[]*Tuple{{Exprs: sqlDollar[2].union.exprs()}}}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3401
>>>>>>> Fix build errors
		{
			valNode := sqlDollar[1].union.selectStmt().(*ValuesClause)
			valNode.Tuples = append(valNode.Tuples, &Tuple{Exprs: sqlDollar[3].union.exprs()})
			sqlVAL.union.val = valNode
		}
<<<<<<< HEAD
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3904
		{
			sqlVAL.union.val = &From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3907
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3909
		{
			sqlVAL.union.val = &From{}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3915
		{
			sqlVAL.union.val = TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3919
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3925
		{
			sqlVAL.union.val = &IndexHints{Index: Name(sqlDollar[3].str)}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3929
=======
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3413
		{
			sqlVAL.union.val = &From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3417
		{
			sqlVAL.union.val = &From{}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3423
		{
			sqlVAL.union.val = TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3427
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3433
		{
			sqlVAL.union.val = &IndexHints{Index: Name(sqlDollar[3].str)}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3437
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			id, err := sqlDollar[4].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = &IndexHints{IndexID: IndexID(id)}
		}
<<<<<<< HEAD
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3936
		{
			sqlVAL.union.val = &IndexHints{NoIndexJoin: true}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3942
		{
			sqlVAL.union.val = sqlDollar[1].union.indexHints()
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3947
=======
	case 568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3444
		{
			sqlVAL.union.val = &IndexHints{NoIndexJoin: true}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3450
		{
			sqlVAL.union.val = sqlDollar[1].union.indexHints()
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3455
>>>>>>> Fix build errors
		{
			a := sqlDollar[1].union.indexHints()
			b := sqlDollar[3].union.indexHints()
			if a.NoIndexJoin && b.NoIndexJoin {
				sqllex.Error("NO_INDEX_JOIN specified multiple times")
				return 1
			}
			if (a.Index != "" || a.IndexID != 0) && (b.Index != "" || b.IndexID != 0) {
				sqllex.Error("FORCE_INDEX specified multiple times")
				return 1
			}
			// At this point either a or b contains "no information"
			// (the empty string for Index and the value 0 for IndexID).
			// Using the addition operator automatically selects the non-zero
			// value, avoiding a conditional branch.
			a.Index = a.Index + b.Index
			a.IndexID = a.IndexID + b.IndexID
			a.NoIndexJoin = a.NoIndexJoin || b.NoIndexJoin
			sqlVAL.union.val = a
		}
<<<<<<< HEAD
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3970
		{
			sqlVAL.union.val = &IndexHints{Index: Name(sqlDollar[2].str)}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3974
=======
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3478
		{
			sqlVAL.union.val = &IndexHints{Index: Name(sqlDollar[2].str)}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3482
>>>>>>> Fix build errors
		{
			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = &IndexHints{IndexID: IndexID(id)}
		}
<<<<<<< HEAD
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3980
		{
			sqlVAL.union.val = sqlDollar[3].union.indexHints()
		}
	case 719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3984
		{
			sqlVAL.union.val = (*IndexHints)(nil)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:4011
=======
	case 573:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3488
		{
			sqlVAL.union.val = sqlDollar[3].union.indexHints()
		}
	case 574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3492
		{
			sqlVAL.union.val = (*IndexHints)(nil)
		}
	case 575:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:3499
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			id, err := sqlDollar[2].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = &AliasedTableExpr{
				Expr: &TableRef{
					TableID: id,
					Columns: sqlDollar[3].union.tableRefCols(),
					As:      sqlDollar[4].union.aliasClause(),
				},
				Hints:      sqlDollar[6].union.indexHints(),
				Ordinality: sqlDollar[7].union.bool(),
				As:         sqlDollar[8].union.aliasClause(),
			}
		}
<<<<<<< HEAD
	case 721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4029
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: sqlDollar[1].union.newNormalizableTableName(), Hints: sqlDollar[2].union.indexHints(), Ordinality: sqlDollar[3].union.bool(), As: sqlDollar[4].union.aliasClause()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4033
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: &FuncExpr{Func: sqlDollar[1].union.resolvableFunctionReference(), Exprs: sqlDollar[3].union.exprs()}, Ordinality: sqlDollar[5].union.bool(), As: sqlDollar[6].union.aliasClause()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4036
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFunctionReference())
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4038
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: &Subquery{Select: sqlDollar[1].union.selectStmt()}, Ordinality: sqlDollar[2].union.bool(), As: sqlDollar[3].union.aliasClause()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4042
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4046
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: &ParenTableExpr{sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4066
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: &StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4071
		{
			sqlVAL.union.val = nil
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4072
		{
			sqlVAL.union.val = []ColumnID{}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4073
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4077
=======
	case 576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3517
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: sqlDollar[1].union.newNormalizableTableName(), Hints: sqlDollar[2].union.indexHints(), Ordinality: sqlDollar[3].union.bool(), As: sqlDollar[4].union.aliasClause()}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:3521
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: &FuncExpr{Func: sqlDollar[1].union.resolvableFunctionReference(), Exprs: sqlDollar[3].union.exprs()}, Ordinality: sqlDollar[5].union.bool(), As: sqlDollar[6].union.aliasClause()}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3525
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: &Subquery{Select: sqlDollar[1].union.selectStmt()}, Ordinality: sqlDollar[2].union.bool(), As: sqlDollar[3].union.aliasClause()}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3529
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3533
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: &ParenTableExpr{sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3553
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: &StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3558
		{
			sqlVAL.union.val = nil
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3559
		{
			sqlVAL.union.val = []ColumnID{}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3560
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3564
>>>>>>> Fix build errors
		{
			id, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = []ColumnID{ColumnID(id)}
		}
<<<<<<< HEAD
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4083
=======
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3570
>>>>>>> Fix build errors
		{
			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), ColumnID(id))
		}
<<<<<<< HEAD
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4091
		{
			sqlVAL.union.val = true
		}
	case 734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4095
		{
			sqlVAL.union.val = false
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4115
		{
			sqlVAL.union.val = &ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4119
		{
			sqlVAL.union.val = &JoinTableExpr{Join: astCrossJoin, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4123
		{
			sqlVAL.union.val = &JoinTableExpr{Join: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: sqlDollar[5].union.joinCond()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4127
		{
			sqlVAL.union.val = &JoinTableExpr{Join: astJoin, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4131
		{
			sqlVAL.union.val = &JoinTableExpr{Join: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: NaturalJoinCond{}}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4135
		{
			sqlVAL.union.val = &JoinTableExpr{Join: astJoin, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: NaturalJoinCond{}}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4141
		{
			sqlVAL.union.val = AliasClause{Alias: Name(sqlDollar[2].str), Cols: sqlDollar[4].union.nameList()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4145
		{
			sqlVAL.union.val = AliasClause{Alias: Name(sqlDollar[2].str)}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4149
		{
			sqlVAL.union.val = AliasClause{Alias: Name(sqlDollar[1].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4153
		{
			sqlVAL.union.val = AliasClause{Alias: Name(sqlDollar[1].str)}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4160
		{
			sqlVAL.union.val = AliasClause{}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4166
		{
			sqlVAL.union.val = AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4170
		{
			sqlVAL.union.val = AsOfClause{}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4176
		{
			sqlVAL.str = astFullJoin
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4180
		{
			sqlVAL.str = astLeftJoin
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4184
		{
			sqlVAL.str = astRightJoin
		}
	case 752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4188
		{
			sqlVAL.str = astInnerJoin
		}
	case 753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4194
		{
		}
	case 754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4195
		{
		}
	case 755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4206
		{
			sqlVAL.union.val = &UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4210
		{
			sqlVAL.union.val = &OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4216
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedName()
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4220
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedName()
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4224
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedName()
		}
	case 760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4228
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedName()
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4234
		{
			sqlVAL.union.val = TableNameReferences{sqlDollar[1].union.unresolvedName()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableNameReferences(), sqlDollar[3].union.unresolvedName())
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4251
		{
			sqlVAL.union.val = sqlDollar[1].union.newNormalizableTableName()
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4255
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: sqlDollar[1].union.newNormalizableTableName(), As: AliasClause{Alias: Name(sqlDollar[2].str)}}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4259
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: sqlDollar[1].union.newNormalizableTableName(), As: AliasClause{Alias: Name(sqlDollar[3].str)}}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4265
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 767:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4269
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4281
=======
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3578
		{
			sqlVAL.union.val = true
		}
	case 588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3582
		{
			sqlVAL.union.val = false
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3602
		{
			sqlVAL.union.val = &ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3606
		{
			sqlVAL.union.val = &JoinTableExpr{Join: astCrossJoin, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3610
		{
			sqlVAL.union.val = &JoinTableExpr{Join: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: sqlDollar[5].union.joinCond()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3614
		{
			sqlVAL.union.val = &JoinTableExpr{Join: astJoin, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3618
		{
			sqlVAL.union.val = &JoinTableExpr{Join: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: NaturalJoinCond{}}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3622
		{
			sqlVAL.union.val = &JoinTableExpr{Join: astJoin, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: NaturalJoinCond{}}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3628
		{
			sqlVAL.union.val = AliasClause{Alias: Name(sqlDollar[2].str), Cols: sqlDollar[4].union.nameList()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3632
		{
			sqlVAL.union.val = AliasClause{Alias: Name(sqlDollar[2].str)}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3636
		{
			sqlVAL.union.val = AliasClause{Alias: Name(sqlDollar[1].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3640
		{
			sqlVAL.union.val = AliasClause{Alias: Name(sqlDollar[1].str)}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3647
		{
			sqlVAL.union.val = AliasClause{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3653
		{
			sqlVAL.union.val = AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3657
		{
			sqlVAL.union.val = AsOfClause{}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3663
		{
			sqlVAL.str = astFullJoin
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3667
		{
			sqlVAL.str = astLeftJoin
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3671
		{
			sqlVAL.str = astRightJoin
		}
	case 606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3675
		{
			sqlVAL.str = astInnerJoin
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3681
		{
		}
	case 608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3682
		{
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3693
		{
			sqlVAL.union.val = &UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3697
		{
			sqlVAL.union.val = &OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3703
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedName()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3707
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedName()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3711
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedName()
		}
	case 614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3715
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedName()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3721
		{
			sqlVAL.union.val = TableNameReferences{sqlDollar[1].union.unresolvedName()}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableNameReferences(), sqlDollar[3].union.unresolvedName())
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3738
		{
			sqlVAL.union.val = sqlDollar[1].union.newNormalizableTableName()
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3742
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: sqlDollar[1].union.newNormalizableTableName(), As: AliasClause{Alias: Name(sqlDollar[2].str)}}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3746
		{
			sqlVAL.union.val = &AliasedTableExpr{Expr: sqlDollar[1].union.newNormalizableTableName(), As: AliasClause{Alias: Name(sqlDollar[3].str)}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3752
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3756
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3768
>>>>>>> Fix build errors
		{
			if exprs := sqlDollar[2].union.exprs(); exprs != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), exprs)
				if err != nil {
					sqllex.Error(err.Error())
					return 1
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
<<<<<<< HEAD
	case 769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4295
=======
	case 623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3781
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), Exprs{NewDInt(DInt(-1))})
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
		}
<<<<<<< HEAD
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4303
=======
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3782
>>>>>>> Fix build errors
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), Exprs{NewDInt(DInt(-1))})
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
		}
<<<<<<< HEAD
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4314
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4318
		{
			sqlVAL.union.val = sqlDollar[1].union.castTargetType()
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4325
		{
			sqlVAL.union.val = Exprs{NewDInt(DInt(-1))}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4327
=======
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3786
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3790
		{
			sqlVAL.union.val = sqlDollar[1].union.castTargetType()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3797
		{
			sqlVAL.union.val = Exprs{NewDInt(DInt(-1))}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3798
>>>>>>> Fix build errors
		{
			/* SKIP DOC */
			sqlVAL.union.val = Exprs{NewDInt(DInt(-1))}
		}
<<<<<<< HEAD
	case 775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4330
		{
			sqlVAL.union.val = Exprs(nil)
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4338
		{
			return unimplemented(sqllex, "simple_type const_interval")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4340
		{
			sqlVAL.union.val = bytesColTypeBlob
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4344
		{
			sqlVAL.union.val = bytesColTypeBytes
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4348
		{
			sqlVAL.union.val = bytesColTypeBytea
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4352
		{
			sqlVAL.union.val = stringColTypeText
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4356
		{
			sqlVAL.union.val = nameColTypeName
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4360
		{
			sqlVAL.union.val = intColTypeSerial
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4364
		{
			sqlVAL.union.val = intColTypeSmallSerial
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4368
		{
			sqlVAL.union.val = uuidColTypeUUID
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4372
		{
			sqlVAL.union.val = intColTypeBigSerial
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4376
		{
			sqlVAL.union.val = oidColTypeOid
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4380
		{
			sqlVAL.union.val = int2vectorColType
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4401
=======
	case 629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3799
		{
			sqlVAL.union.val = Exprs(nil)
		}
	case 635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:3807
		{
			return unimplemented(sqllex, "simple_type const_interval")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3809
		{
			sqlVAL.union.val = bytesColTypeBlob
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3813
		{
			sqlVAL.union.val = bytesColTypeBytes
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3817
		{
			sqlVAL.union.val = bytesColTypeBytea
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3821
		{
			sqlVAL.union.val = stringColTypeText
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3825
		{
			sqlVAL.union.val = nameColTypeName
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3829
		{
			sqlVAL.union.val = intColTypeSerial
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3833
		{
			sqlVAL.union.val = intColTypeSmallSerial
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3837
		{
			sqlVAL.union.val = uuidColTypeUUID
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3841
		{
			sqlVAL.union.val = intColTypeBigSerial
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3845
		{
			sqlVAL.union.val = oidColTypeOid
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3849
		{
			sqlVAL.union.val = int2vectorColType
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:3870
>>>>>>> Fix build errors
		{
			prec, err := sqlDollar[2].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = &DecimalColType{Prec: int(prec)}
		}
<<<<<<< HEAD
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4410
=======
	case 652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:3879
>>>>>>> Fix build errors
		{
			prec, err := sqlDollar[2].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			scale, err := sqlDollar[4].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = &DecimalColType{Prec: int(prec), Scale: int(scale)}
		}
<<<<<<< HEAD
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4424
		{
			sqlVAL.union.val = nil
		}
	case 800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4431
		{
			sqlVAL.union.val = intColTypeInt
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4435
		{
			sqlVAL.union.val = intColTypeInt2
		}
	case 802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4439
		{
			sqlVAL.union.val = intColTypeInt4
		}
	case 803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4443
		{
			sqlVAL.union.val = intColTypeInt8
		}
	case 804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4447
		{
			sqlVAL.union.val = intColTypeInt64
		}
	case 805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4451
		{
			sqlVAL.union.val = intColTypeInteger
		}
	case 806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4455
		{
			sqlVAL.union.val = intColTypeSmallInt
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4459
		{
			sqlVAL.union.val = intColTypeBigInt
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4463
		{
			sqlVAL.union.val = floatColTypeReal
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4467
		{
			sqlVAL.union.val = floatColTypeFloat4
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4471
		{
			sqlVAL.union.val = floatColTypeFloat8
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4475
=======
	case 653:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:3893
		{
			sqlVAL.union.val = nil
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3900
		{
			sqlVAL.union.val = intColTypeInt
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3904
		{
			sqlVAL.union.val = intColTypeInt2
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3908
		{
			sqlVAL.union.val = intColTypeInt4
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3912
		{
			sqlVAL.union.val = intColTypeInt8
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3916
		{
			sqlVAL.union.val = intColTypeInt64
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3920
		{
			sqlVAL.union.val = intColTypeInteger
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3924
		{
			sqlVAL.union.val = intColTypeSmallInt
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3928
		{
			sqlVAL.union.val = intColTypeBigInt
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3932
		{
			sqlVAL.union.val = floatColTypeReal
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3936
		{
			sqlVAL.union.val = floatColTypeFloat4
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3940
		{
			sqlVAL.union.val = floatColTypeFloat8
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3944
>>>>>>> Fix build errors
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = NewFloatColType(int(prec), len(nv.OrigString) > 0)
		}
<<<<<<< HEAD
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4485
		{
			sqlVAL.union.val = floatColTypeDouble
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4489
=======
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3954
		{
			sqlVAL.union.val = floatColTypeDouble
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3958
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
			if sqlVAL.union.val == nil {
				sqlVAL.union.val = decimalColTypeDecimal
			} else {
				sqlVAL.union.val.(*DecimalColType).Name = "DECIMAL"
			}
		}
<<<<<<< HEAD
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4498
=======
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3967
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
			if sqlVAL.union.val == nil {
				sqlVAL.union.val = decimalColTypeDec
			} else {
				sqlVAL.union.val.(*DecimalColType).Name = "DEC"
			}
		}
<<<<<<< HEAD
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4507
=======
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:3976
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
			if sqlVAL.union.val == nil {
				sqlVAL.union.val = decimalColTypeNumeric
			} else {
				sqlVAL.union.val.(*DecimalColType).Name = "NUMERIC"
			}
		}
<<<<<<< HEAD
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4516
		{
			sqlVAL.union.val = boolColTypeBoolean
		}
	case 817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4520
		{
			sqlVAL.union.val = boolColTypeBool
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4527
		{
			sqlVAL.union.val = oidColTypeRegProc
		}
	case 819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4531
		{
			sqlVAL.union.val = oidColTypeRegProcedure
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4535
		{
			sqlVAL.union.val = oidColTypeRegClass
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4539
		{
			sqlVAL.union.val = oidColTypeRegType
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4543
		{
			sqlVAL.union.val = oidColTypeRegNamespace
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4549
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4553
		{
			sqlVAL.union.val = &NumVal{Value: constant.MakeInt64(0)}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4571
=======
	case 670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3985
		{
			sqlVAL.union.val = boolColTypeBoolean
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3989
		{
			sqlVAL.union.val = boolColTypeBool
		}
	case 672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:3996
		{
			sqlVAL.union.val = oidColTypeRegProc
		}
	case 673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4000
		{
			sqlVAL.union.val = oidColTypeRegProcedure
		}
	case 674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4004
		{
			sqlVAL.union.val = oidColTypeRegClass
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4008
		{
			sqlVAL.union.val = oidColTypeRegType
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4012
		{
			sqlVAL.union.val = oidColTypeRegNamespace
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4018
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4022
		{
			sqlVAL.union.val = &NumVal{Value: constant.MakeInt64(0)}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4040
>>>>>>> Fix build errors
		{
			n, err := sqlDollar[4].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			bit, err := newIntBitType(int(n))
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = bit
		}
<<<<<<< HEAD
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4587
		{
			sqlVAL.union.val = intColTypeBit
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4603
=======
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4056
		{
			sqlVAL.union.val = intColTypeBit
		}
	case 689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4072
>>>>>>> Fix build errors
		{
			n, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = sqlDollar[1].union.colType()
			if n != 0 {
				strType := &StringColType{N: int(n)}
				strType.Name = sqlVAL.union.val.(*StringColType).Name
				sqlVAL.union.val = strType
			}
		}
<<<<<<< HEAD
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4619
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4625
		{
			sqlVAL.union.val = stringColTypeChar
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4629
		{
			sqlVAL.union.val = stringColTypeChar
		}
	case 839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4633
		{
			sqlVAL.union.val = stringColTypeVarChar
		}
	case 840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4637
		{
			sqlVAL.union.val = stringColTypeString
		}
	case 841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4642
		{
		}
	case 842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4643
		{
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4648
		{
			sqlVAL.union.val = dateColTypeDate
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4652
		{
			sqlVAL.union.val = timestampColTypeTimestamp
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4656
		{
			sqlVAL.union.val = timestampColTypeTimestamp
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4660
		{
			sqlVAL.union.val = timestampTzColTypeTimestampWithTZ
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4664
		{
			sqlVAL.union.val = timestampTzColTypeTimestampWithTZ
		}
	case 848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4669
		{
			sqlVAL.union.val = intervalColTypeInterval
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4675
		{
			sqlVAL.union.val = year
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4679
		{
			sqlVAL.union.val = month
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4683
		{
			sqlVAL.union.val = day
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4687
		{
			sqlVAL.union.val = hour
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4691
		{
			sqlVAL.union.val = minute
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4695
		{
			sqlVAL.union.val = sqlDollar[1].union.durationField()
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4701
		{
			sqlVAL.union.val = month
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4705
		{
			sqlVAL.union.val = hour
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4709
		{
			sqlVAL.union.val = minute
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4713
		{
			sqlVAL.union.val = sqlDollar[3].union.durationField()
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4717
		{
			sqlVAL.union.val = minute
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4721
		{
			sqlVAL.union.val = sqlDollar[3].union.durationField()
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4725
		{
			sqlVAL.union.val = sqlDollar[3].union.durationField()
		}
	case 862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4729
		{
			sqlVAL.union.val = nil
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4735
		{
			sqlVAL.union.val = second
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4738
		{
			return unimplemented(sqllex, "interval_second")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4762
		{
			sqlVAL.union.val = &CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.castTargetType(), syntaxMode: castShort}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4766
		{
			sqlVAL.union.val = &AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), syntaxMode: annotateShort}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4770
		{
			sqlVAL.union.val = &CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4773
		{
			return unimplemented(sqllex, "at tz")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4782
		{
			sqlVAL.union.val = &UnaryExpr{Operator: UnaryPlus, Expr: sqlDollar[2].union.expr()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4786
		{
			sqlVAL.union.val = &UnaryExpr{Operator: UnaryMinus, Expr: sqlDollar[2].union.expr()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4790
		{
			sqlVAL.union.val = &UnaryExpr{Operator: UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4794
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4798
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4802
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4806
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4810
		{
			sqlVAL.union.val = &BinaryExpr{Operator: FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4814
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4818
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4822
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4826
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4830
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4834
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4838
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4842
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4846
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4850
		{
			sqlVAL.union.val = &BinaryExpr{Operator: LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4854
		{
			sqlVAL.union.val = &BinaryExpr{Operator: RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4858
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4862
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4866
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4870
		{
			sqlVAL.union.val = &AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4874
		{
			sqlVAL.union.val = &OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4878
		{
			sqlVAL.union.val = &NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4882
		{
			sqlVAL.union.val = &NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4886
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4890
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4894
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4898
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4902
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4906
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4910
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4914
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4918
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4922
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4926
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction("ISNAN"), Exprs: Exprs{sqlDollar[1].union.expr()}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4930
		{
			sqlVAL.union.val = &NotExpr{Expr: &FuncExpr{Func: wrapFunction("ISNAN"), Exprs: Exprs{sqlDollar[1].union.expr()}}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4934
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: Is, Left: sqlDollar[1].union.expr(), Right: DNull}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4938
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsNot, Left: sqlDollar[1].union.expr(), Right: DNull}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4941
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4943
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: Is, Left: sqlDollar[1].union.expr(), Right: MakeDBool(true)}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4947
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsNot, Left: sqlDollar[1].union.expr(), Right: MakeDBool(true)}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4951
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: Is, Left: sqlDollar[1].union.expr(), Right: MakeDBool(false)}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4955
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsNot, Left: sqlDollar[1].union.expr(), Right: MakeDBool(false)}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4959
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: Is, Left: sqlDollar[1].union.expr(), Right: DNull}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4963
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsNot, Left: sqlDollar[1].union.expr(), Right: DNull}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4967
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4971
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4975
		{
			sqlVAL.union.val = &IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:4979
		{
			sqlVAL.union.val = &IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4983
		{
			sqlVAL.union.val = &RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:4987
		{
			sqlVAL.union.val = &RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4991
		{
			sqlVAL.union.val = &RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:4995
		{
			sqlVAL.union.val = &RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4999
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5003
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5007
=======
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4088
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4094
		{
			sqlVAL.union.val = stringColTypeChar
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4098
		{
			sqlVAL.union.val = stringColTypeChar
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4102
		{
			sqlVAL.union.val = stringColTypeVarChar
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4106
		{
			sqlVAL.union.val = stringColTypeString
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4111
		{
		}
	case 696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4112
		{
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4117
		{
			sqlVAL.union.val = dateColTypeDate
		}
	case 698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4121
		{
			sqlVAL.union.val = timestampColTypeTimestamp
		}
	case 699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4125
		{
			sqlVAL.union.val = timestampColTypeTimestamp
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4129
		{
			sqlVAL.union.val = timestampTzColTypeTimestampWithTZ
		}
	case 701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4133
		{
			sqlVAL.union.val = timestampTzColTypeTimestampWithTZ
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4138
		{
			sqlVAL.union.val = intervalColTypeInterval
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4144
		{
			sqlVAL.union.val = year
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4148
		{
			sqlVAL.union.val = month
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4152
		{
			sqlVAL.union.val = day
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4156
		{
			sqlVAL.union.val = hour
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4160
		{
			sqlVAL.union.val = minute
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4164
		{
			sqlVAL.union.val = sqlDollar[1].union.durationField()
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4170
		{
			sqlVAL.union.val = month
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4174
		{
			sqlVAL.union.val = hour
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4178
		{
			sqlVAL.union.val = minute
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4182
		{
			sqlVAL.union.val = sqlDollar[3].union.durationField()
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4186
		{
			sqlVAL.union.val = minute
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4190
		{
			sqlVAL.union.val = sqlDollar[3].union.durationField()
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4194
		{
			sqlVAL.union.val = sqlDollar[3].union.durationField()
		}
	case 716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4198
		{
			sqlVAL.union.val = nil
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4204
		{
			sqlVAL.union.val = second
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4207
		{
			return unimplemented(sqllex, "interval_second")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4231
		{
			sqlVAL.union.val = &CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.castTargetType(), syntaxMode: castShort}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4235
		{
			sqlVAL.union.val = &AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), syntaxMode: annotateShort}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4239
		{
			sqlVAL.union.val = &CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4242
		{
			return unimplemented(sqllex, "at tz")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4251
		{
			sqlVAL.union.val = &UnaryExpr{Operator: UnaryPlus, Expr: sqlDollar[2].union.expr()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4255
		{
			sqlVAL.union.val = &UnaryExpr{Operator: UnaryMinus, Expr: sqlDollar[2].union.expr()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4259
		{
			sqlVAL.union.val = &UnaryExpr{Operator: UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4263
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4267
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4271
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4275
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4279
		{
			sqlVAL.union.val = &BinaryExpr{Operator: FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4283
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4287
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4291
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4295
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4299
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4303
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4307
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4311
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4315
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4319
		{
			sqlVAL.union.val = &BinaryExpr{Operator: LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4323
		{
			sqlVAL.union.val = &BinaryExpr{Operator: RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4327
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4331
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4335
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4339
		{
			sqlVAL.union.val = &AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4343
		{
			sqlVAL.union.val = &OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4347
		{
			sqlVAL.union.val = &NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4351
		{
			sqlVAL.union.val = &NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4355
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4359
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4363
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4367
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4371
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4375
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4379
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4383
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4387
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4391
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4395
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction("ISNAN"), Exprs: Exprs{sqlDollar[1].union.expr()}}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4399
		{
			sqlVAL.union.val = &NotExpr{Expr: &FuncExpr{Func: wrapFunction("ISNAN"), Exprs: Exprs{sqlDollar[1].union.expr()}}}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4403
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: Is, Left: sqlDollar[1].union.expr(), Right: DNull}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4407
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsNot, Left: sqlDollar[1].union.expr(), Right: DNull}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4410
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4412
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: Is, Left: sqlDollar[1].union.expr(), Right: MakeDBool(true)}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4416
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsNot, Left: sqlDollar[1].union.expr(), Right: MakeDBool(true)}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4420
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: Is, Left: sqlDollar[1].union.expr(), Right: MakeDBool(false)}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4424
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsNot, Left: sqlDollar[1].union.expr(), Right: MakeDBool(false)}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4428
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: Is, Left: sqlDollar[1].union.expr(), Right: DNull}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4432
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsNot, Left: sqlDollar[1].union.expr(), Right: DNull}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4436
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4440
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4444
		{
			sqlVAL.union.val = &IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:4448
		{
			sqlVAL.union.val = &IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4452
		{
			sqlVAL.union.val = &RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:4456
		{
			sqlVAL.union.val = &RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4460
		{
			sqlVAL.union.val = &RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:4464
		{
			sqlVAL.union.val = &RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4468
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4472
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4476
>>>>>>> Fix build errors
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
<<<<<<< HEAD
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5035
		{
			sqlVAL.union.val = &CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.castTargetType(), syntaxMode: castShort}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5039
		{
			sqlVAL.union.val = &AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), syntaxMode: annotateShort}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5043
		{
			sqlVAL.union.val = &UnaryExpr{Operator: UnaryPlus, Expr: sqlDollar[2].union.expr()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5047
		{
			sqlVAL.union.val = &UnaryExpr{Operator: UnaryMinus, Expr: sqlDollar[2].union.expr()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5051
		{
			sqlVAL.union.val = &UnaryExpr{Operator: UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5055
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5059
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5063
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5067
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5071
		{
			sqlVAL.union.val = &BinaryExpr{Operator: FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5075
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5079
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5083
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5087
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5091
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5095
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5099
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5103
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5107
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5111
		{
			sqlVAL.union.val = &BinaryExpr{Operator: LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5115
		{
			sqlVAL.union.val = &BinaryExpr{Operator: RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5119
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5123
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5127
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5131
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:5135
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:5139
		{
			sqlVAL.union.val = &IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:5143
		{
			sqlVAL.union.val = &IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5156
=======
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4504
		{
			sqlVAL.union.val = &CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.castTargetType(), syntaxMode: castShort}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4508
		{
			sqlVAL.union.val = &AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), syntaxMode: annotateShort}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4512
		{
			sqlVAL.union.val = &UnaryExpr{Operator: UnaryPlus, Expr: sqlDollar[2].union.expr()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4516
		{
			sqlVAL.union.val = &UnaryExpr{Operator: UnaryMinus, Expr: sqlDollar[2].union.expr()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4520
		{
			sqlVAL.union.val = &UnaryExpr{Operator: UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4524
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4528
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4532
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4536
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4540
		{
			sqlVAL.union.val = &BinaryExpr{Operator: FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4544
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4548
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4552
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4556
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4560
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4564
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4568
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4572
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4576
		{
			sqlVAL.union.val = &BinaryExpr{Operator: Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4580
		{
			sqlVAL.union.val = &BinaryExpr{Operator: LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4584
		{
			sqlVAL.union.val = &BinaryExpr{Operator: RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4588
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4592
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4596
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4600
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4604
		{
			sqlVAL.union.val = &ComparisonExpr{Operator: IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4608
		{
			sqlVAL.union.val = &IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
		//line sql.y:4612
		{
			sqlVAL.union.val = &IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4625
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
<<<<<<< HEAD
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5164
		{
			sqlVAL.union.val = &ExistsExpr{Subquery: &Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5175
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedName()
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5180
=======
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4633
		{
			sqlVAL.union.val = &ExistsExpr{Subquery: &Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4644
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedName()
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4649
>>>>>>> Fix build errors
		{
			colNum, err := sqlDollar[2].union.numVal().AsInt64()
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = NewOrdinalReference(int(colNum - 1))
		}
<<<<<<< HEAD
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5193
		{
			sqlVAL.union.val = NewPlaceholder(sqlDollar[1].str)
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5197
		{
			sqlVAL.union.val = &ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5202
		{
			sqlVAL.union.val = &Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5206
		{
			sqlVAL.union.val = &ArrayFlatten{Subquery: &Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5210
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5214
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5218
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5226
		{
			sqlVAL.union.val = &FuncExpr{Func: sqlDollar[1].union.resolvableFunctionReference()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5230
		{
			sqlVAL.union.val = &FuncExpr{Func: sqlDollar[1].union.resolvableFunctionReference(), Exprs: sqlDollar[3].union.exprs()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:5233
		{
			return unimplemented(sqllex, "variadic")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:5234
		{
			return unimplemented(sqllex, "variadic")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:5236
		{
			sqlVAL.union.val = &FuncExpr{Func: sqlDollar[1].union.resolvableFunctionReference(), Type: AllFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:5240
		{
			sqlVAL.union.val = &FuncExpr{Func: sqlDollar[1].union.resolvableFunctionReference(), Type: DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5244
		{
			sqlVAL.union.val = &FuncExpr{Func: sqlDollar[1].union.resolvableFunctionReference(), Exprs: Exprs{StarExpr()}}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5247
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFunctionReference())
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5258
=======
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4662
		{
			sqlVAL.union.val = NewPlaceholder(sqlDollar[1].str)
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4666
		{
			sqlVAL.union.val = &ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4671
		{
			sqlVAL.union.val = &Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4675
		{
			sqlVAL.union.val = &ArrayFlatten{Subquery: &Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4679
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4683
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4687
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4695
		{
			sqlVAL.union.val = &FuncExpr{Func: sqlDollar[1].union.resolvableFunctionReference()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4699
		{
			sqlVAL.union.val = &FuncExpr{Func: sqlDollar[1].union.resolvableFunctionReference(), Exprs: sqlDollar[3].union.exprs()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4702
		{
			return unimplemented(sqllex, "variadic")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:4703
		{
			return unimplemented(sqllex, "variadic")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4705
		{
			sqlVAL.union.val = &FuncExpr{Func: sqlDollar[1].union.resolvableFunctionReference(), Type: AllFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4709
		{
			sqlVAL.union.val = &FuncExpr{Func: sqlDollar[1].union.resolvableFunctionReference(), Type: DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4713
		{
			sqlVAL.union.val = &FuncExpr{Func: sqlDollar[1].union.resolvableFunctionReference(), Exprs: Exprs{StarExpr()}}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4726
>>>>>>> Fix build errors
		{
			f := sqlDollar[1].union.expr().(*FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
<<<<<<< HEAD
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5265
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5274
		{
			return unimplemented(sqllex, "func_application")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5275
		{
			return unimplemented(sqllex, "func_expr_common_subexpr")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5279
		{
			return unimplemented(sqllex, "func_expr_common_subexpr collation")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5281
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str)}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5285
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str)}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5288
		{
			return helpWithFunction(sqllex, ResolvableFunctionReference{UnresolvedName{Name(sqlDollar[1].str)}})
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5290
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str)}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5294
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str)}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5297
		{
			return helpWithFunction(sqllex, ResolvableFunctionReference{UnresolvedName{Name(sqlDollar[1].str)}})
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5299
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str)}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5303
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str)}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5306
=======
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4733
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4742
		{
			return unimplemented(sqllex, "func_application")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4743
		{
			return unimplemented(sqllex, "func_expr_common_subexpr")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4747
		{
			return unimplemented(sqllex, "func_expr_common_subexpr collation")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4749
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str)}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4753
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str)}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4757
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str)}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4761
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str)}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4765
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str)}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4769
>>>>>>> Fix build errors
		{
			return helpWithFunction(sqllex, ResolvableFunctionReference{UnresolvedName{Name(sqlDollar[1].str)}})
		}
<<<<<<< HEAD
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5307
		{
			return unimplemented(sqllex, "current role")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5308
		{
			return unimplemented(sqllex, "current user")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5309
		{
			return unimplemented(sqllex, "session user")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5310
		{
			return unimplemented(sqllex, "user")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:5312
		{
			sqlVAL.union.val = &CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.castTargetType(), syntaxMode: castExplicit}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:5316
		{
			sqlVAL.union.val = &AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), syntaxMode: annotateExplicit}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5320
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5323
		{
			return helpWithFunction(sqllex, ResolvableFunctionReference{UnresolvedName{Name(sqlDollar[1].str)}})
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5325
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5328
		{
			return helpWithFunction(sqllex, ResolvableFunctionReference{UnresolvedName{Name(sqlDollar[1].str)}})
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5330
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5333
		{
			return helpWithFunction(sqllex, ResolvableFunctionReference{UnresolvedName{Name(sqlDollar[1].str)}})
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5335
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction("STRPOS"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5339
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5342
		{
			return helpWithFunction(sqllex, ResolvableFunctionReference{UnresolvedName{Name(sqlDollar[1].str)}})
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:5343
		{
			return unimplemented(sqllex, "treat")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5345
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction("BTRIM"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5349
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction("LTRIM"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5353
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction("RTRIM"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5357
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction("BTRIM"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:5361
		{
			sqlVAL.union.val = &IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:5365
		{
			sqlVAL.union.val = &NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:5369
		{
			sqlVAL.union.val = &CoalesceExpr{Name: "IFNULL", Exprs: Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5373
		{
			sqlVAL.union.val = &CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5377
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5380
		{
			return helpWithFunction(sqllex, ResolvableFunctionReference{UnresolvedName{Name(sqlDollar[1].str)}})
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5382
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5385
		{
			return helpWithFunction(sqllex, ResolvableFunctionReference{UnresolvedName{Name(sqlDollar[1].str)}})
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5389
		{
			return unimplemented(sqllex, "within group")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5390
		{
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5394
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5398
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5405
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5409
		{
			sqlVAL.union.val = Window(nil)
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5415
		{
			sqlVAL.union.val = Window{sqlDollar[1].union.windowDef()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5419
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5425
=======
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4772
		{
			return unimplemented(sqllex, "current role")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4773
		{
			return unimplemented(sqllex, "current user")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4774
		{
			return unimplemented(sqllex, "session user")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4775
		{
			return unimplemented(sqllex, "user")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4777
		{
			sqlVAL.union.val = &CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.castTargetType(), syntaxMode: castExplicit}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4781
		{
			sqlVAL.union.val = &AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), syntaxMode: annotateExplicit}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4785
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4789
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4793
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4797
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction("STRPOS"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4801
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4804
		{
			return unimplemented(sqllex, "treat")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4806
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction("BTRIM"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4810
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction("LTRIM"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4814
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction("RTRIM"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4818
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction("BTRIM"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
		//line sql.y:4822
		{
			sqlVAL.union.val = &IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4826
		{
			sqlVAL.union.val = &NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4830
		{
			sqlVAL.union.val = &CoalesceExpr{Name: "IFNULL", Exprs: Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4834
		{
			sqlVAL.union.val = &CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4838
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4842
		{
			sqlVAL.union.val = &FuncExpr{Func: wrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4848
		{
			return unimplemented(sqllex, "within group")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4849
		{
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4853
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4857
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4864
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4868
		{
			sqlVAL.union.val = Window(nil)
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4874
		{
			sqlVAL.union.val = Window{sqlDollar[1].union.windowDef()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4878
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4884
>>>>>>> Fix build errors
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
<<<<<<< HEAD
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5433
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5437
		{
			sqlVAL.union.val = &WindowDef{Name: Name(sqlDollar[2].str)}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5441
		{
			sqlVAL.union.val = (*WindowDef)(nil)
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:5448
=======
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4892
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4896
		{
			sqlVAL.union.val = &WindowDef{Name: Name(sqlDollar[2].str)}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4900
		{
			sqlVAL.union.val = (*WindowDef)(nil)
		}
	case 878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:4907
>>>>>>> Fix build errors
		{
			sqlVAL.union.val = &WindowDef{
				RefName:    Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
			}
		}
<<<<<<< HEAD
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5467
		{
			sqlVAL.str = ""
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5473
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5477
		{
			sqlVAL.union.val = Exprs(nil)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5487
		{
			return unimplemented(sqllex, "frame range")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5488
		{
			return unimplemented(sqllex, "frame rows")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5489
		{
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5492
		{
			return unimplemented(sqllex, "frame_extent")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5493
		{
			return unimplemented(sqllex, "frame_extent")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5499
		{
			return unimplemented(sqllex, "frame_bound")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5500
		{
			return unimplemented(sqllex, "frame_bound")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5501
		{
			return unimplemented(sqllex, "frame_bound")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5502
		{
			return unimplemented(sqllex, "frame_bound")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5503
		{
			return unimplemented(sqllex, "frame_bound")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5514
		{
			sqlVAL.union.val = &Tuple{Exprs: sqlDollar[3].union.exprs(), row: true}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5518
		{
			sqlVAL.union.val = &Tuple{Exprs: nil, row: true}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5522
		{
			sqlVAL.union.val = &Tuple{Exprs: append(sqlDollar[2].union.exprs(), sqlDollar[4].union.expr())}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5528
		{
			sqlVAL.union.val = &Tuple{Exprs: sqlDollar[3].union.exprs(), row: true}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5532
		{
			sqlVAL.union.val = &Tuple{Exprs: nil, row: true}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5538
		{
			sqlVAL.union.val = &Tuple{Exprs: append(sqlDollar[2].union.exprs(), sqlDollar[4].union.expr())}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5544
		{
			sqlVAL.union.val = Any
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5548
		{
			sqlVAL.union.val = Some
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5552
		{
			sqlVAL.union.val = All
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5557
		{
			sqlVAL.union.val = Plus
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5558
		{
			sqlVAL.union.val = Minus
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5559
		{
			sqlVAL.union.val = Mult
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5560
		{
			sqlVAL.union.val = Div
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5561
		{
			sqlVAL.union.val = FloorDiv
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5562
		{
			sqlVAL.union.val = Mod
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5563
		{
			sqlVAL.union.val = Bitand
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5564
		{
			sqlVAL.union.val = Bitor
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5565
		{
			sqlVAL.union.val = Pow
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5566
		{
			sqlVAL.union.val = Bitxor
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5567
		{
			sqlVAL.union.val = LT
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5568
		{
			sqlVAL.union.val = GT
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5569
		{
			sqlVAL.union.val = EQ
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5570
		{
			sqlVAL.union.val = LE
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5571
		{
			sqlVAL.union.val = GE
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5572
		{
			sqlVAL.union.val = NE
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5576
		{
			sqlVAL.union.val = Like
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5577
		{
			sqlVAL.union.val = NotLike
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5578
		{
			sqlVAL.union.val = ILike
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5579
		{
			sqlVAL.union.val = NotILike
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5590
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5594
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5600
		{
			sqlVAL.union.val = []ColumnType{sqlDollar[1].union.colType()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5610
		{
			sqlVAL.union.val = &Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5614
		{
			sqlVAL.union.val = &Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5618
		{
			sqlVAL.union.val = &Array{Exprs: nil}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5624
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5628
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5634
		{
			sqlVAL.union.val = Exprs{&StrVal{s: sqlDollar[1].str}, sqlDollar[3].union.expr()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5638
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5660
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5664
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5668
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5674
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5681
		{
			sqlVAL.union.val = Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5685
		{
			sqlVAL.union.val = Exprs(nil)
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5702
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5706
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5710
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5714
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr(), NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5718
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5722
		{
			sqlVAL.union.val = Exprs(nil)
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5728
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5734
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5740
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5744
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5748
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5754
		{
			sqlVAL.union.val = &Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5758
		{
			sqlVAL.union.val = &Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5769
		{
			sqlVAL.union.val = &CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5776
		{
			sqlVAL.union.val = []*When{sqlDollar[1].union.when()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5786
		{
			sqlVAL.union.val = &When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5792
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5796
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5803
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5809
		{
			sqlVAL.union.val = &ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5813
		{
			sqlVAL.union.val = &ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5820
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5826
		{
			sqlVAL.union.val = Name(sqlDollar[2].str)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5832
		{
			sqlVAL.union.val = UnqualifiedStar{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5838
		{
			sqlVAL.union.val = sqlDollar[1].union.namePart()
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5842
		{
			sqlVAL.union.val = sqlDollar[1].union.namePart()
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5848
		{
			sqlVAL.union.val = UnresolvedName{sqlDollar[1].union.namePart()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5852
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedName(), sqlDollar[2].union.namePart())
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5858
		{
			sqlVAL.union.val = ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5867
		{
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5868
		{
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5877
		{
			sqlVAL.union.val = DefaultVal{}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5883
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5896
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5902
		{
			sqlVAL.union.val = SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5906
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5912
		{
			sqlVAL.union.val = SelectExpr{Expr: sqlDollar[1].union.expr(), As: Name(sqlDollar[3].str)}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5921
		{
			sqlVAL.union.val = SelectExpr{Expr: sqlDollar[1].union.expr(), As: Name(sqlDollar[2].str)}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5925
		{
			sqlVAL.union.val = SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5929
		{
			sqlVAL.union.val = starSelectExpr()
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5937
		{
			sqlVAL.union.val = UnresolvedNames{sqlDollar[1].union.unresolvedName()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5941
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedNames(), sqlDollar[3].union.unresolvedName())
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5947
		{
			sqlVAL.union.val = TableNameWithIndexList{sqlDollar[1].union.tableWithIdx()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5951
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableWithIdxList(), sqlDollar[3].union.tableWithIdx())
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5957
		{
			sqlVAL.union.val = TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5961
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5972
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[1].str)}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5976
		{
			sqlVAL.union.val = append(UnresolvedName{Name(sqlDollar[1].str)}, sqlDollar[2].union.unresolvedName()...)
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5982
		{
			sqlVAL.union.val = &TableNameWithIndex{Table: sqlDollar[1].union.normalizableTableName(), Index: Name(sqlDollar[3].str)}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5986
=======
	case 880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4926
		{
			sqlVAL.str = ""
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4932
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4936
		{
			sqlVAL.union.val = Exprs(nil)
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4946
		{
			return unimplemented(sqllex, "frame range")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4947
		{
			return unimplemented(sqllex, "frame rows")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:4948
		{
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:4951
		{
			return unimplemented(sqllex, "frame_extent")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4952
		{
			return unimplemented(sqllex, "frame_extent")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4958
		{
			return unimplemented(sqllex, "frame_bound")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4959
		{
			return unimplemented(sqllex, "frame_bound")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4960
		{
			return unimplemented(sqllex, "frame_bound")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4961
		{
			return unimplemented(sqllex, "frame_bound")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:4962
		{
			return unimplemented(sqllex, "frame_bound")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4973
		{
			sqlVAL.union.val = &Tuple{Exprs: sqlDollar[3].union.exprs(), row: true}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4977
		{
			sqlVAL.union.val = &Tuple{Exprs: nil, row: true}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4981
		{
			sqlVAL.union.val = &Tuple{Exprs: append(sqlDollar[2].union.exprs(), sqlDollar[4].union.expr())}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:4987
		{
			sqlVAL.union.val = &Tuple{Exprs: sqlDollar[3].union.exprs(), row: true}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:4991
		{
			sqlVAL.union.val = &Tuple{Exprs: nil, row: true}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:4997
		{
			sqlVAL.union.val = &Tuple{Exprs: append(sqlDollar[2].union.exprs(), sqlDollar[4].union.expr())}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5003
		{
			sqlVAL.union.val = Any
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5007
		{
			sqlVAL.union.val = Some
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5011
		{
			sqlVAL.union.val = All
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5016
		{
			sqlVAL.union.val = Plus
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5017
		{
			sqlVAL.union.val = Minus
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5018
		{
			sqlVAL.union.val = Mult
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5019
		{
			sqlVAL.union.val = Div
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5020
		{
			sqlVAL.union.val = FloorDiv
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5021
		{
			sqlVAL.union.val = Mod
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5022
		{
			sqlVAL.union.val = Bitand
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5023
		{
			sqlVAL.union.val = Bitor
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5024
		{
			sqlVAL.union.val = Pow
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5025
		{
			sqlVAL.union.val = Bitxor
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5026
		{
			sqlVAL.union.val = LT
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5027
		{
			sqlVAL.union.val = GT
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5028
		{
			sqlVAL.union.val = EQ
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5029
		{
			sqlVAL.union.val = LE
		}
	case 916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5030
		{
			sqlVAL.union.val = GE
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5031
		{
			sqlVAL.union.val = NE
		}
	case 919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5035
		{
			sqlVAL.union.val = Like
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5036
		{
			sqlVAL.union.val = NotLike
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5037
		{
			sqlVAL.union.val = ILike
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5038
		{
			sqlVAL.union.val = NotILike
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5049
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5053
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5059
		{
			sqlVAL.union.val = []ColumnType{sqlDollar[1].union.colType()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5069
		{
			sqlVAL.union.val = &Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5073
		{
			sqlVAL.union.val = &Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5077
		{
			sqlVAL.union.val = &Array{Exprs: nil}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5083
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5087
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5093
		{
			sqlVAL.union.val = Exprs{&StrVal{s: sqlDollar[1].str}, sqlDollar[3].union.expr()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5097
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5119
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5123
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5127
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5133
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5140
		{
			sqlVAL.union.val = Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5144
		{
			sqlVAL.union.val = Exprs(nil)
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5161
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5165
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5169
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5173
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr(), NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5177
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5181
		{
			sqlVAL.union.val = Exprs(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5187
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5193
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5199
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5203
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5207
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5213
		{
			sqlVAL.union.val = &Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5217
		{
			sqlVAL.union.val = &Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5228
		{
			sqlVAL.union.val = &CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5235
		{
			sqlVAL.union.val = []*When{sqlDollar[1].union.when()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5239
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
		//line sql.y:5245
		{
			sqlVAL.union.val = &When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5251
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5255
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5262
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5268
		{
			sqlVAL.union.val = &ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5272
		{
			sqlVAL.union.val = &ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5279
		{
			sqlVAL.union.val = Expr(nil)
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5285
		{
			sqlVAL.union.val = Name(sqlDollar[2].str)
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5291
		{
			sqlVAL.union.val = UnqualifiedStar{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5297
		{
			sqlVAL.union.val = sqlDollar[1].union.namePart()
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5301
		{
			sqlVAL.union.val = sqlDollar[1].union.namePart()
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5307
		{
			sqlVAL.union.val = UnresolvedName{sqlDollar[1].union.namePart()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5311
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedName(), sqlDollar[2].union.namePart())
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5317
		{
			sqlVAL.union.val = ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5321
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5326
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5327
		{
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5336
		{
			sqlVAL.union.val = DefaultVal{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5342
		{
			sqlVAL.union.val = Exprs{sqlDollar[1].union.expr()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5346
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5355
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5361
		{
			sqlVAL.union.val = SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5371
		{
			sqlVAL.union.val = SelectExpr{Expr: sqlDollar[1].union.expr(), As: Name(sqlDollar[3].str)}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5380
		{
			sqlVAL.union.val = SelectExpr{Expr: sqlDollar[1].union.expr(), As: Name(sqlDollar[2].str)}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5384
		{
			sqlVAL.union.val = SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5388
		{
			sqlVAL.union.val = starSelectExpr()
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5396
		{
			sqlVAL.union.val = UnresolvedNames{sqlDollar[1].union.unresolvedName()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedNames(), sqlDollar[3].union.unresolvedName())
		}
	case 995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5406
		{
			sqlVAL.union.val = TableNameWithIndexList{sqlDollar[1].union.tableWithIdx()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5410
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableWithIdxList(), sqlDollar[3].union.tableWithIdx())
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5416
		{
			sqlVAL.union.val = TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5420
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5431
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[1].str)}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5435
		{
			sqlVAL.union.val = append(UnresolvedName{Name(sqlDollar[1].str)}, sqlDollar[2].union.unresolvedName()...)
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5441
		{
			sqlVAL.union.val = &TableNameWithIndex{Table: sqlDollar[1].union.normalizableTableName(), Index: Name(sqlDollar[3].str)}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5445
>>>>>>> Fix build errors
		{
			// This case allows specifying just an index name (potentially schema-qualified).
			// We temporarily store the index name in Table (see TableNameWithIndex).
			sqlVAL.union.val = &TableNameWithIndex{Table: sqlDollar[1].union.normalizableTableName(), SearchTable: true}
		}
<<<<<<< HEAD
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5999
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[1].str)}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:6003
		{
			sqlVAL.union.val = UnresolvedName{UnqualifiedStar{}}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:6007
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[1].str), sqlDollar[2].union.namePart()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:6011
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[1].str), sqlDollar[2].union.namePart()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:6017
		{
			sqlVAL.union.val = NameList{Name(sqlDollar[1].str)}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:6021
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), Name(sqlDollar[3].str))
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:6027
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:6030
		{
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:6040
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[1].str)}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:6044
		{
			sqlVAL.union.val = append(UnresolvedName{Name(sqlDollar[1].str)}, sqlDollar[2].union.unresolvedName()...)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:6051
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:6055
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:6059
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:6063
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str, bytesEsc: true}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:6066
		{
			return unimplemented(sqllex, "func const")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:6068
		{
			sqlVAL.union.val = &CastExpr{Expr: &StrVal{s: sqlDollar[2].str}, Type: sqlDollar[1].union.colType(), syntaxMode: castPrepend}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:6072
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:6075
		{
			return unimplemented(sqllex, "expr_const const_interval")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:6077
		{
			sqlVAL.union.val = MakeDBool(true)
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:6081
		{
			sqlVAL.union.val = MakeDBool(false)
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:6085
		{
			sqlVAL.union.val = DNull
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:6092
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:6096
		{
			sqlVAL.union.val = &NumVal{Value: constant.UnaryOp(token.SUB, sqlDollar[2].union.numVal().Value, 0)}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:6102
=======
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5458
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[1].str)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5462
		{
			sqlVAL.union.val = UnresolvedName{UnqualifiedStar{}}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5466
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[1].str), sqlDollar[2].union.namePart()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5470
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[1].str), sqlDollar[2].union.namePart()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5476
		{
			sqlVAL.union.val = NameList{Name(sqlDollar[1].str)}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5480
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), Name(sqlDollar[3].str))
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5486
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5489
		{
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5499
		{
			sqlVAL.union.val = UnresolvedName{Name(sqlDollar[1].str)}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5503
		{
			sqlVAL.union.val = append(UnresolvedName{Name(sqlDollar[1].str)}, sqlDollar[2].union.unresolvedName()...)
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5510
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5514
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5518
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5522
		{
			sqlVAL.union.val = &StrVal{s: sqlDollar[1].str, bytesEsc: true}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
		//line sql.y:5525
		{
			return unimplemented(sqllex, "func const")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5527
		{
			sqlVAL.union.val = &CastExpr{Expr: &StrVal{s: sqlDollar[2].str}, Type: sqlDollar[1].union.colType(), syntaxMode: castPrepend}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5531
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
		//line sql.y:5534
		{
			return unimplemented(sqllex, "expr_const const_interval")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5536
		{
			sqlVAL.union.val = MakeDBool(true)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5540
		{
			sqlVAL.union.val = MakeDBool(false)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
		//line sql.y:5544
		{
			sqlVAL.union.val = DNull
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5551
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
		//line sql.y:5555
		{
			sqlVAL.union.val = &NumVal{Value: constant.UnaryOp(token.SUB, sqlDollar[2].union.numVal().Value, 0)}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5561
>>>>>>> Fix build errors
		{
			// We don't carry opt_interval information into the column type, so we need
			// to parse the interval directly.
			var err error
			var d Datum
			if sqlDollar[3].union.val == nil {
				d, err = ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = ParseDIntervalWithField(sqlDollar[2].str, sqlDollar[3].union.durationField())
			}
			if err != nil {
				sqllex.Error(err.Error())
				return 1
			}
			sqlVAL.union.val = d
		}
<<<<<<< HEAD
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:6137
		{
			sqlVAL.str = ""
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:6143
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:6147
=======
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5596
		{
			sqlVAL.str = ""
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
		//line sql.y:5602
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
		//line sql.y:5606
>>>>>>> Fix build errors
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
